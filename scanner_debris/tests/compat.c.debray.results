Line 18: Unrecognized token: 35
Line 18: ID = include
Line 18: <
Line 18: ID = linux
Line 18: /
Line 18: ID = linkage
Line 18: Unrecognized token: 46
Line 18: ID = h
Line 18: >
Line 19: Unrecognized token: 35
Line 19: ID = include
Line 19: <
Line 19: ID = linux
Line 19: /
Line 19: ID = compat
Line 19: Unrecognized token: 46
Line 19: ID = h
Line 19: >
Line 20: Unrecognized token: 35
Line 20: ID = include
Line 20: <
Line 20: ID = linux
Line 20: /
Line 20: ID = errno
Line 20: Unrecognized token: 46
Line 20: ID = h
Line 20: >
Line 21: Unrecognized token: 35
Line 21: ID = include
Line 21: <
Line 21: ID = linux
Line 21: /
Line 21: ID = time
Line 21: Unrecognized token: 46
Line 21: ID = h
Line 21: >
Line 22: Unrecognized token: 35
Line 22: ID = include
Line 22: <
Line 22: ID = linux
Line 22: /
Line 22: ID = fs
Line 22: Unrecognized token: 46
Line 22: ID = h
Line 22: >
Line 23: Unrecognized token: 35
Line 23: ID = include
Line 23: <
Line 23: ID = linux
Line 23: /
Line 23: ID = fcntl
Line 23: Unrecognized token: 46
Line 23: ID = h
Line 23: >
Line 24: Unrecognized token: 35
Line 24: ID = include
Line 24: <
Line 24: ID = linux
Line 24: /
Line 24: ID = namei
Line 24: Unrecognized token: 46
Line 24: ID = h
Line 24: >
Line 25: Unrecognized token: 35
Line 25: ID = include
Line 25: <
Line 25: ID = linux
Line 25: /
Line 25: ID = file
Line 25: Unrecognized token: 46
Line 25: ID = h
Line 25: >
Line 26: Unrecognized token: 35
Line 26: ID = include
Line 26: <
Line 26: ID = linux
Line 26: /
Line 26: ID = vfs
Line 26: Unrecognized token: 46
Line 26: ID = h
Line 26: >
Line 27: Unrecognized token: 35
Line 27: ID = include
Line 27: <
Line 27: ID = linux
Line 27: /
Line 27: ID = ioctl32
Line 27: Unrecognized token: 46
Line 27: ID = h
Line 27: >
Line 28: Unrecognized token: 35
Line 28: ID = include
Line 28: <
Line 28: ID = linux
Line 28: /
Line 28: ID = init
Line 28: Unrecognized token: 46
Line 28: ID = h
Line 28: >
Line 29: Unrecognized token: 35
Line 29: ID = include
Line 29: <
Line 29: ID = linux
Line 29: /
Line 29: ID = sockios
Line 29: Unrecognized token: 46
Line 29: ID = h
Line 29: >
Line 30: Unrecognized token: 35
Line 30: ID = include
Line 30: <
Line 30: ID = linux
Line 30: /
Line 30: ID = smb
Line 30: Unrecognized token: 46
Line 30: ID = h
Line 30: >
Line 31: Unrecognized token: 35
Line 31: ID = include
Line 31: <
Line 31: ID = linux
Line 31: /
Line 31: ID = smb_mount
Line 31: Unrecognized token: 46
Line 31: ID = h
Line 31: >
Line 32: Unrecognized token: 35
Line 32: ID = include
Line 32: <
Line 32: ID = linux
Line 32: /
Line 32: ID = ncp_mount
Line 32: Unrecognized token: 46
Line 32: ID = h
Line 32: >
Line 33: Unrecognized token: 35
Line 33: ID = include
Line 33: <
Line 33: ID = linux
Line 33: /
Line 33: ID = smp_lock
Line 33: Unrecognized token: 46
Line 33: ID = h
Line 33: >
Line 34: Unrecognized token: 35
Line 34: ID = include
Line 34: <
Line 34: ID = linux
Line 34: /
Line 34: ID = syscalls
Line 34: Unrecognized token: 46
Line 34: ID = h
Line 34: >
Line 35: Unrecognized token: 35
Line 35: ID = include
Line 35: <
Line 35: ID = linux
Line 35: /
Line 35: ID = ctype
Line 35: Unrecognized token: 46
Line 35: ID = h
Line 35: >
Line 36: Unrecognized token: 35
Line 36: ID = include
Line 36: <
Line 36: ID = linux
Line 36: /
Line 36: ID = module
Line 36: Unrecognized token: 46
Line 36: ID = h
Line 36: >
Line 37: Unrecognized token: 35
Line 37: ID = include
Line 37: <
Line 37: ID = linux
Line 37: /
Line 37: ID = dirent
Line 37: Unrecognized token: 46
Line 37: ID = h
Line 37: >
Line 38: Unrecognized token: 35
Line 38: ID = include
Line 38: <
Line 38: ID = linux
Line 38: /
Line 38: ID = dnotify
Line 38: Unrecognized token: 46
Line 38: ID = h
Line 38: >
Line 39: Unrecognized token: 35
Line 39: ID = include
Line 39: <
Line 39: ID = linux
Line 39: /
Line 39: ID = highuid
Line 39: Unrecognized token: 46
Line 39: ID = h
Line 39: >
Line 40: Unrecognized token: 35
Line 40: ID = include
Line 40: <
Line 40: ID = linux
Line 40: /
Line 40: ID = sunrpc
Line 40: /
Line 40: ID = svc
Line 40: Unrecognized token: 46
Line 40: ID = h
Line 40: >
Line 41: Unrecognized token: 35
Line 41: ID = include
Line 41: <
Line 41: ID = linux
Line 41: /
Line 41: ID = nfsd
Line 41: /
Line 41: ID = nfsd
Line 41: Unrecognized token: 46
Line 41: ID = h
Line 41: >
Line 42: Unrecognized token: 35
Line 42: ID = include
Line 42: <
Line 42: ID = linux
Line 42: /
Line 42: ID = nfsd
Line 42: /
Line 42: ID = syscall
Line 42: Unrecognized token: 46
Line 42: ID = h
Line 42: >
Line 43: Unrecognized token: 35
Line 43: ID = include
Line 43: <
Line 43: ID = linux
Line 43: /
Line 43: ID = personality
Line 43: Unrecognized token: 46
Line 43: ID = h
Line 43: >
Line 45: Unrecognized token: 35
Line 45: ID = include
Line 45: <
Line 45: ID = net
Line 45: /
Line 45: ID = sock
Line 45: Unrecognized token: 46
Line 45: ID = h
Line 45: >
Line 47: Unrecognized token: 35
Line 47: ID = include
Line 47: <
Line 47: ID = asm
Line 47: /
Line 47: ID = uaccess
Line 47: Unrecognized token: 46
Line 47: ID = h
Line 47: >
Line 48: Unrecognized token: 35
Line 48: ID = include
Line 48: <
Line 48: ID = asm
Line 48: /
Line 48: ID = mmu_context
Line 48: Unrecognized token: 46
Line 48: ID = h
Line 48: >
Line 54: ID = asmlinkage
Line 54: ID = long
Line 54: ID = compat_sys_utime
Line 54: (
Line 54: char
Line 54: Unrecognized token: 95
Line 54: Unrecognized token: 95
Line 54: ID = user
Line 54: *
Line 54: ID = filename
Line 54: ,
Line 54: ID = struct
Line 54: ID = compat_utimbuf
Line 54: Unrecognized token: 95
Line 54: Unrecognized token: 95
Line 54: ID = user
Line 54: *
Line 54: ID = t
Line 54: )
Line 55: {
Line 56: ID = struct
Line 56: ID = timeval
Line 56: ID = tv
Line 56: [
Line 56: INTCON = 2
Line 56: ]
Line 56: ;
Line 58: if
Line 58: (
Line 58: ID = t
Line 58: )
Line 58: {
Line 59: if
Line 59: (
Line 59: ID = get_user
Line 59: (
Line 59: ID = tv
Line 59: [
Line 59: INTCON = 0
Line 59: ]
Line 59: Unrecognized token: 46
Line 59: ID = tv_sec
Line 59: ,
Line 59: Unrecognized token: 38
Line 59: ID = t
Line 59: -
Line 59: >
Line 59: ID = actime
Line 59: )
Line 59: ||
Line 60: ID = get_user
Line 60: (
Line 60: ID = tv
Line 60: [
Line 60: INTCON = 1
Line 60: ]
Line 60: Unrecognized token: 46
Line 60: ID = tv_sec
Line 60: ,
Line 60: Unrecognized token: 38
Line 60: ID = t
Line 60: -
Line 60: >
Line 60: ID = modtime
Line 60: )
Line 60: )
Line 61: return
Line 61: -
Line 61: ID = EFAULT
Line 61: ;
Line 62: ID = tv
Line 62: [
Line 62: INTCON = 0
Line 62: ]
Line 62: Unrecognized token: 46
Line 62: ID = tv_usec
Line 62: =
Line 62: INTCON = 0
Line 62: ;
Line 63: ID = tv
Line 63: [
Line 63: INTCON = 1
Line 63: ]
Line 63: Unrecognized token: 46
Line 63: ID = tv_usec
Line 63: =
Line 63: INTCON = 0
Line 63: ;
Line 64: }
Line 65: return
Line 65: ID = do_utimes
Line 65: (
Line 65: ID = filename
Line 65: ,
Line 65: ID = t
Line 65: Unrecognized token: 63
Line 65: ID = tv
Line 65: Unrecognized token: 58
Line 65: ID = NULL
Line 65: )
Line 65: ;
Line 66: }
Line 68: ID = asmlinkage
Line 68: ID = long
Line 68: ID = compat_sys_utimes
Line 68: (
Line 68: char
Line 68: Unrecognized token: 95
Line 68: Unrecognized token: 95
Line 68: ID = user
Line 68: *
Line 68: ID = filename
Line 68: ,
Line 68: ID = struct
Line 68: ID = compat_timeval
Line 68: Unrecognized token: 95
Line 68: Unrecognized token: 95
Line 68: ID = user
Line 68: *
Line 68: ID = t
Line 68: )
Line 69: {
Line 70: ID = struct
Line 70: ID = timeval
Line 70: ID = tv
Line 70: [
Line 70: INTCON = 2
Line 70: ]
Line 70: ;
Line 72: if
Line 72: (
Line 72: ID = t
Line 72: )
Line 72: {
Line 73: if
Line 73: (
Line 73: ID = get_user
Line 73: (
Line 73: ID = tv
Line 73: [
Line 73: INTCON = 0
Line 73: ]
Line 73: Unrecognized token: 46
Line 73: ID = tv_sec
Line 73: ,
Line 73: Unrecognized token: 38
Line 73: ID = t
Line 73: [
Line 73: INTCON = 0
Line 73: ]
Line 73: Unrecognized token: 46
Line 73: ID = tv_sec
Line 73: )
Line 73: ||
Line 74: ID = get_user
Line 74: (
Line 74: ID = tv
Line 74: [
Line 74: INTCON = 0
Line 74: ]
Line 74: Unrecognized token: 46
Line 74: ID = tv_usec
Line 74: ,
Line 74: Unrecognized token: 38
Line 74: ID = t
Line 74: [
Line 74: INTCON = 0
Line 74: ]
Line 74: Unrecognized token: 46
Line 74: ID = tv_usec
Line 74: )
Line 74: ||
Line 75: ID = get_user
Line 75: (
Line 75: ID = tv
Line 75: [
Line 75: INTCON = 1
Line 75: ]
Line 75: Unrecognized token: 46
Line 75: ID = tv_sec
Line 75: ,
Line 75: Unrecognized token: 38
Line 75: ID = t
Line 75: [
Line 75: INTCON = 1
Line 75: ]
Line 75: Unrecognized token: 46
Line 75: ID = tv_sec
Line 75: )
Line 75: ||
Line 76: ID = get_user
Line 76: (
Line 76: ID = tv
Line 76: [
Line 76: INTCON = 1
Line 76: ]
Line 76: Unrecognized token: 46
Line 76: ID = tv_usec
Line 76: ,
Line 76: Unrecognized token: 38
Line 76: ID = t
Line 76: [
Line 76: INTCON = 1
Line 76: ]
Line 76: Unrecognized token: 46
Line 76: ID = tv_usec
Line 76: )
Line 76: )
Line 77: return
Line 77: -
Line 77: ID = EFAULT
Line 77: ;
Line 78: }
Line 79: return
Line 79: ID = do_utimes
Line 79: (
Line 79: ID = filename
Line 79: ,
Line 79: ID = t
Line 79: Unrecognized token: 63
Line 79: ID = tv
Line 79: Unrecognized token: 58
Line 79: ID = NULL
Line 79: )
Line 79: ;
Line 80: }
Line 82: ID = asmlinkage
Line 82: ID = long
Line 82: ID = compat_sys_newstat
Line 82: (
Line 82: char
Line 82: Unrecognized token: 95
Line 82: Unrecognized token: 95
Line 82: ID = user
Line 82: *
Line 82: ID = filename
Line 82: ,
Line 83: ID = struct
Line 83: ID = compat_stat
Line 83: Unrecognized token: 95
Line 83: Unrecognized token: 95
Line 83: ID = user
Line 83: *
Line 83: ID = statbuf
Line 83: )
Line 84: {
Line 85: ID = struct
Line 85: ID = kstat
Line 85: ID = stat
Line 85: ;
Line 86: int
Line 86: ID = error
Line 86: =
Line 86: ID = vfs_stat
Line 86: (
Line 86: ID = filename
Line 86: ,
Line 86: Unrecognized token: 38
Line 86: ID = stat
Line 86: )
Line 86: ;
Line 88: if
Line 88: (
Line 88: !
Line 88: ID = error
Line 88: )
Line 89: ID = error
Line 89: =
Line 89: ID = cp_compat_stat
Line 89: (
Line 89: Unrecognized token: 38
Line 89: ID = stat
Line 89: ,
Line 89: ID = statbuf
Line 89: )
Line 89: ;
Line 90: return
Line 90: ID = error
Line 90: ;
Line 91: }
Line 93: ID = asmlinkage
Line 93: ID = long
Line 93: ID = compat_sys_newlstat
Line 93: (
Line 93: char
Line 93: Unrecognized token: 95
Line 93: Unrecognized token: 95
Line 93: ID = user
Line 93: *
Line 93: ID = filename
Line 93: ,
Line 94: ID = struct
Line 94: ID = compat_stat
Line 94: Unrecognized token: 95
Line 94: Unrecognized token: 95
Line 94: ID = user
Line 94: *
Line 94: ID = statbuf
Line 94: )
Line 95: {
Line 96: ID = struct
Line 96: ID = kstat
Line 96: ID = stat
Line 96: ;
Line 97: int
Line 97: ID = error
Line 97: =
Line 97: ID = vfs_lstat
Line 97: (
Line 97: ID = filename
Line 97: ,
Line 97: Unrecognized token: 38
Line 97: ID = stat
Line 97: )
Line 97: ;
Line 99: if
Line 99: (
Line 99: !
Line 99: ID = error
Line 99: )
Line 100: ID = error
Line 100: =
Line 100: ID = cp_compat_stat
Line 100: (
Line 100: Unrecognized token: 38
Line 100: ID = stat
Line 100: ,
Line 100: ID = statbuf
Line 100: )
Line 100: ;
Line 101: return
Line 101: ID = error
Line 101: ;
Line 102: }
Line 104: ID = asmlinkage
Line 104: ID = long
Line 104: ID = compat_sys_newfstat
Line 104: (
Line 104: ID = unsigned
Line 104: int
Line 104: ID = fd
Line 104: ,
Line 105: ID = struct
Line 105: ID = compat_stat
Line 105: Unrecognized token: 95
Line 105: Unrecognized token: 95
Line 105: ID = user
Line 105: *
Line 105: ID = statbuf
Line 105: )
Line 106: {
Line 107: ID = struct
Line 107: ID = kstat
Line 107: ID = stat
Line 107: ;
Line 108: int
Line 108: ID = error
Line 108: =
Line 108: ID = vfs_fstat
Line 108: (
Line 108: ID = fd
Line 108: ,
Line 108: Unrecognized token: 38
Line 108: ID = stat
Line 108: )
Line 108: ;
Line 110: if
Line 110: (
Line 110: !
Line 110: ID = error
Line 110: )
Line 111: ID = error
Line 111: =
Line 111: ID = cp_compat_stat
Line 111: (
Line 111: Unrecognized token: 38
Line 111: ID = stat
Line 111: ,
Line 111: ID = statbuf
Line 111: )
Line 111: ;
Line 112: return
Line 112: ID = error
Line 112: ;
Line 113: }
Line 115: ID = static
Line 115: int
Line 115: ID = put_compat_statfs
Line 115: (
Line 115: ID = struct
Line 115: ID = compat_statfs
Line 115: Unrecognized token: 95
Line 115: Unrecognized token: 95
Line 115: ID = user
Line 115: *
Line 115: ID = ubuf
Line 115: ,
Line 115: ID = struct
Line 115: ID = kstatfs
Line 115: *
Line 115: ID = kbuf
Line 115: )
Line 116: {
Line 118: if
Line 118: (
Line 118: ID = sizeof
Line 118: ID = ubuf
Line 118: -
Line 118: >
Line 118: ID = f_blocks
Line 118: ==
Line 118: INTCON = 4
Line 118: )
Line 118: {
Line 119: if
Line 119: (
Line 119: (
Line 119: ID = kbuf
Line 119: -
Line 119: >
Line 119: ID = f_blocks
Line 119: Unrecognized token: 124
Line 119: ID = kbuf
Line 119: -
Line 119: >
Line 119: ID = f_bfree
Line 119: Unrecognized token: 124
Line 120: ID = kbuf
Line 120: -
Line 120: >
Line 120: ID = f_bavail
Line 120: Unrecognized token: 124
Line 120: ID = kbuf
Line 120: -
Line 120: >
Line 120: ID = f_files
Line 120: Unrecognized token: 124
Line 120: ID = kbuf
Line 120: -
Line 120: >
Line 120: ID = f_ffree
Line 120: )
Line 120: Unrecognized token: 38
Line 121: INTCON = 0
Line 121: ID = xffffffff00000000ULL
Line 121: )
Line 122: return
Line 122: -
Line 122: ID = EOVERFLOW
Line 122: ;
Line 123: }
Line 124: if
Line 124: (
Line 124: ID = verify_area
Line 124: (
Line 124: ID = VERIFY_WRITE
Line 124: ,
Line 124: ID = ubuf
Line 124: ,
Line 124: ID = sizeof
Line 124: (
Line 124: *
Line 124: ID = ubuf
Line 124: )
Line 124: )
Line 124: ||
Line 125: Unrecognized token: 95
Line 125: Unrecognized token: 95
Line 125: ID = put_user
Line 125: (
Line 125: ID = kbuf
Line 125: -
Line 125: >
Line 125: ID = f_type
Line 125: ,
Line 125: Unrecognized token: 38
Line 125: ID = ubuf
Line 125: -
Line 125: >
Line 125: ID = f_type
Line 125: )
Line 125: ||
Line 126: Unrecognized token: 95
Line 126: Unrecognized token: 95
Line 126: ID = put_user
Line 126: (
Line 126: ID = kbuf
Line 126: -
Line 126: >
Line 126: ID = f_bsize
Line 126: ,
Line 126: Unrecognized token: 38
Line 126: ID = ubuf
Line 126: -
Line 126: >
Line 126: ID = f_bsize
Line 126: )
Line 126: ||
Line 127: Unrecognized token: 95
Line 127: Unrecognized token: 95
Line 127: ID = put_user
Line 127: (
Line 127: ID = kbuf
Line 127: -
Line 127: >
Line 127: ID = f_blocks
Line 127: ,
Line 127: Unrecognized token: 38
Line 127: ID = ubuf
Line 127: -
Line 127: >
Line 127: ID = f_blocks
Line 127: )
Line 127: ||
Line 128: Unrecognized token: 95
Line 128: Unrecognized token: 95
Line 128: ID = put_user
Line 128: (
Line 128: ID = kbuf
Line 128: -
Line 128: >
Line 128: ID = f_bfree
Line 128: ,
Line 128: Unrecognized token: 38
Line 128: ID = ubuf
Line 128: -
Line 128: >
Line 128: ID = f_bfree
Line 128: )
Line 128: ||
Line 129: Unrecognized token: 95
Line 129: Unrecognized token: 95
Line 129: ID = put_user
Line 129: (
Line 129: ID = kbuf
Line 129: -
Line 129: >
Line 129: ID = f_bavail
Line 129: ,
Line 129: Unrecognized token: 38
Line 129: ID = ubuf
Line 129: -
Line 129: >
Line 129: ID = f_bavail
Line 129: )
Line 129: ||
Line 130: Unrecognized token: 95
Line 130: Unrecognized token: 95
Line 130: ID = put_user
Line 130: (
Line 130: ID = kbuf
Line 130: -
Line 130: >
Line 130: ID = f_files
Line 130: ,
Line 130: Unrecognized token: 38
Line 130: ID = ubuf
Line 130: -
Line 130: >
Line 130: ID = f_files
Line 130: )
Line 130: ||
Line 131: Unrecognized token: 95
Line 131: Unrecognized token: 95
Line 131: ID = put_user
Line 131: (
Line 131: ID = kbuf
Line 131: -
Line 131: >
Line 131: ID = f_ffree
Line 131: ,
Line 131: Unrecognized token: 38
Line 131: ID = ubuf
Line 131: -
Line 131: >
Line 131: ID = f_ffree
Line 131: )
Line 131: ||
Line 132: Unrecognized token: 95
Line 132: Unrecognized token: 95
Line 132: ID = put_user
Line 132: (
Line 132: ID = kbuf
Line 132: -
Line 132: >
Line 132: ID = f_namelen
Line 132: ,
Line 132: Unrecognized token: 38
Line 132: ID = ubuf
Line 132: -
Line 132: >
Line 132: ID = f_namelen
Line 132: )
Line 132: ||
Line 133: Unrecognized token: 95
Line 133: Unrecognized token: 95
Line 133: ID = put_user
Line 133: (
Line 133: ID = kbuf
Line 133: -
Line 133: >
Line 133: ID = f_fsid
Line 133: Unrecognized token: 46
Line 133: ID = val
Line 133: [
Line 133: INTCON = 0
Line 133: ]
Line 133: ,
Line 133: Unrecognized token: 38
Line 133: ID = ubuf
Line 133: -
Line 133: >
Line 133: ID = f_fsid
Line 133: Unrecognized token: 46
Line 133: ID = val
Line 133: [
Line 133: INTCON = 0
Line 133: ]
Line 133: )
Line 133: ||
Line 134: Unrecognized token: 95
Line 134: Unrecognized token: 95
Line 134: ID = put_user
Line 134: (
Line 134: ID = kbuf
Line 134: -
Line 134: >
Line 134: ID = f_fsid
Line 134: Unrecognized token: 46
Line 134: ID = val
Line 134: [
Line 134: INTCON = 1
Line 134: ]
Line 134: ,
Line 134: Unrecognized token: 38
Line 134: ID = ubuf
Line 134: -
Line 134: >
Line 134: ID = f_fsid
Line 134: Unrecognized token: 46
Line 134: ID = val
Line 134: [
Line 134: INTCON = 1
Line 134: ]
Line 134: )
Line 134: ||
Line 135: Unrecognized token: 95
Line 135: Unrecognized token: 95
Line 135: ID = put_user
Line 135: (
Line 135: ID = kbuf
Line 135: -
Line 135: >
Line 135: ID = f_frsize
Line 135: ,
Line 135: Unrecognized token: 38
Line 135: ID = ubuf
Line 135: -
Line 135: >
Line 135: ID = f_frsize
Line 135: )
Line 135: ||
Line 136: Unrecognized token: 95
Line 136: Unrecognized token: 95
Line 136: ID = put_user
Line 136: (
Line 136: INTCON = 0
Line 136: ,
Line 136: Unrecognized token: 38
Line 136: ID = ubuf
Line 136: -
Line 136: >
Line 136: ID = f_spare
Line 136: [
Line 136: INTCON = 0
Line 136: ]
Line 136: )
Line 136: ||
Line 137: Unrecognized token: 95
Line 137: Unrecognized token: 95
Line 137: ID = put_user
Line 137: (
Line 137: INTCON = 0
Line 137: ,
Line 137: Unrecognized token: 38
Line 137: ID = ubuf
Line 137: -
Line 137: >
Line 137: ID = f_spare
Line 137: [
Line 137: INTCON = 1
Line 137: ]
Line 137: )
Line 137: ||
Line 138: Unrecognized token: 95
Line 138: Unrecognized token: 95
Line 138: ID = put_user
Line 138: (
Line 138: INTCON = 0
Line 138: ,
Line 138: Unrecognized token: 38
Line 138: ID = ubuf
Line 138: -
Line 138: >
Line 138: ID = f_spare
Line 138: [
Line 138: INTCON = 2
Line 138: ]
Line 138: )
Line 138: ||
Line 139: Unrecognized token: 95
Line 139: Unrecognized token: 95
Line 139: ID = put_user
Line 139: (
Line 139: INTCON = 0
Line 139: ,
Line 139: Unrecognized token: 38
Line 139: ID = ubuf
Line 139: -
Line 139: >
Line 139: ID = f_spare
Line 139: [
Line 139: INTCON = 3
Line 139: ]
Line 139: )
Line 139: ||
Line 140: Unrecognized token: 95
Line 140: Unrecognized token: 95
Line 140: ID = put_user
Line 140: (
Line 140: INTCON = 0
Line 140: ,
Line 140: Unrecognized token: 38
Line 140: ID = ubuf
Line 140: -
Line 140: >
Line 140: ID = f_spare
Line 140: [
Line 140: INTCON = 4
Line 140: ]
Line 140: )
Line 140: )
Line 141: return
Line 141: -
Line 141: ID = EFAULT
Line 141: ;
Line 142: return
Line 142: INTCON = 0
Line 142: ;
Line 143: }
Line 149: ID = asmlinkage
Line 149: ID = long
Line 149: ID = compat_sys_statfs
Line 149: (
Line 149: ID = const
Line 149: char
Line 149: Unrecognized token: 95
Line 149: Unrecognized token: 95
Line 149: ID = user
Line 149: *
Line 149: ID = path
Line 149: ,
Line 149: ID = struct
Line 149: ID = compat_statfs
Line 149: Unrecognized token: 95
Line 149: Unrecognized token: 95
Line 149: ID = user
Line 149: *
Line 149: ID = buf
Line 149: )
Line 150: {
Line 151: ID = struct
Line 151: ID = nameidata
Line 151: ID = nd
Line 151: ;
Line 152: int
Line 152: ID = error
Line 152: ;
Line 154: ID = error
Line 154: =
Line 154: ID = user_path_walk
Line 154: (
Line 154: ID = path
Line 154: ,
Line 154: Unrecognized token: 38
Line 154: ID = nd
Line 154: )
Line 154: ;
Line 155: if
Line 155: (
Line 155: !
Line 155: ID = error
Line 155: )
Line 155: {
Line 156: ID = struct
Line 156: ID = kstatfs
Line 156: ID = tmp
Line 156: ;
Line 157: ID = error
Line 157: =
Line 157: ID = vfs_statfs
Line 157: (
Line 157: ID = nd
Line 157: Unrecognized token: 46
Line 157: ID = dentry
Line 157: -
Line 157: >
Line 157: ID = d_inode
Line 157: -
Line 157: >
Line 157: ID = i_sb
Line 157: ,
Line 157: Unrecognized token: 38
Line 157: ID = tmp
Line 157: )
Line 157: ;
Line 158: if
Line 158: (
Line 158: !
Line 158: ID = error
Line 158: &&
Line 158: ID = put_compat_statfs
Line 158: (
Line 158: ID = buf
Line 158: ,
Line 158: Unrecognized token: 38
Line 158: ID = tmp
Line 158: )
Line 158: )
Line 159: ID = error
Line 159: =
Line 159: -
Line 159: ID = EFAULT
Line 159: ;
Line 160: ID = path_release
Line 160: (
Line 160: Unrecognized token: 38
Line 160: ID = nd
Line 160: )
Line 160: ;
Line 161: }
Line 162: return
Line 162: ID = error
Line 162: ;
Line 163: }
Line 165: ID = asmlinkage
Line 165: ID = long
Line 165: ID = compat_sys_fstatfs
Line 165: (
Line 165: ID = unsigned
Line 165: int
Line 165: ID = fd
Line 165: ,
Line 165: ID = struct
Line 165: ID = compat_statfs
Line 165: Unrecognized token: 95
Line 165: Unrecognized token: 95
Line 165: ID = user
Line 165: *
Line 165: ID = buf
Line 165: )
Line 166: {
Line 167: ID = struct
Line 167: ID = file
Line 167: *
Line 167: ID = file
Line 167: ;
Line 168: ID = struct
Line 168: ID = kstatfs
Line 168: ID = tmp
Line 168: ;
Line 169: int
Line 169: ID = error
Line 169: ;
Line 171: ID = error
Line 171: =
Line 171: -
Line 171: ID = EBADF
Line 171: ;
Line 172: ID = file
Line 172: =
Line 172: ID = fget
Line 172: (
Line 172: ID = fd
Line 172: )
Line 172: ;
Line 173: if
Line 173: (
Line 173: !
Line 173: ID = file
Line 173: )
Line 174: ID = goto
Line 174: ID = out
Line 174: ;
Line 175: ID = error
Line 175: =
Line 175: ID = vfs_statfs
Line 175: (
Line 175: ID = file
Line 175: -
Line 175: >
Line 175: ID = f_dentry
Line 175: -
Line 175: >
Line 175: ID = d_inode
Line 175: -
Line 175: >
Line 175: ID = i_sb
Line 175: ,
Line 175: Unrecognized token: 38
Line 175: ID = tmp
Line 175: )
Line 175: ;
Line 176: if
Line 176: (
Line 176: !
Line 176: ID = error
Line 176: &&
Line 176: ID = put_compat_statfs
Line 176: (
Line 176: ID = buf
Line 176: ,
Line 176: Unrecognized token: 38
Line 176: ID = tmp
Line 176: )
Line 176: )
Line 177: ID = error
Line 177: =
Line 177: -
Line 177: ID = EFAULT
Line 177: ;
Line 178: ID = fput
Line 178: (
Line 178: ID = file
Line 178: )
Line 178: ;
Line 179: ID = out
Line 179: Unrecognized token: 58
Line 180: return
Line 180: ID = error
Line 180: ;
Line 181: }
Line 183: ID = static
Line 183: int
Line 183: ID = put_compat_statfs64
Line 183: (
Line 183: ID = struct
Line 183: ID = compat_statfs64
Line 183: Unrecognized token: 95
Line 183: Unrecognized token: 95
Line 183: ID = user
Line 183: *
Line 183: ID = ubuf
Line 183: ,
Line 183: ID = struct
Line 183: ID = kstatfs
Line 183: *
Line 183: ID = kbuf
Line 183: )
Line 184: {
Line 185: if
Line 185: (
Line 185: ID = sizeof
Line 185: ID = ubuf
Line 185: -
Line 185: >
Line 185: ID = f_blocks
Line 185: ==
Line 185: INTCON = 4
Line 185: )
Line 185: {
Line 186: if
Line 186: (
Line 186: (
Line 186: ID = kbuf
Line 186: -
Line 186: >
Line 186: ID = f_blocks
Line 186: Unrecognized token: 124
Line 186: ID = kbuf
Line 186: -
Line 186: >
Line 186: ID = f_bfree
Line 186: Unrecognized token: 124
Line 187: ID = kbuf
Line 187: -
Line 187: >
Line 187: ID = f_bavail
Line 187: Unrecognized token: 124
Line 187: ID = kbuf
Line 187: -
Line 187: >
Line 187: ID = f_files
Line 187: Unrecognized token: 124
Line 187: ID = kbuf
Line 187: -
Line 187: >
Line 187: ID = f_ffree
Line 187: )
Line 187: Unrecognized token: 38
Line 188: INTCON = 0
Line 188: ID = xffffffff00000000ULL
Line 188: )
Line 189: return
Line 189: -
Line 189: ID = EOVERFLOW
Line 189: ;
Line 190: }
Line 191: if
Line 191: (
Line 191: ID = verify_area
Line 191: (
Line 191: ID = VERIFY_WRITE
Line 191: ,
Line 191: ID = ubuf
Line 191: ,
Line 191: ID = sizeof
Line 191: (
Line 191: *
Line 191: ID = ubuf
Line 191: )
Line 191: )
Line 191: ||
Line 192: Unrecognized token: 95
Line 192: Unrecognized token: 95
Line 192: ID = put_user
Line 192: (
Line 192: ID = kbuf
Line 192: -
Line 192: >
Line 192: ID = f_type
Line 192: ,
Line 192: Unrecognized token: 38
Line 192: ID = ubuf
Line 192: -
Line 192: >
Line 192: ID = f_type
Line 192: )
Line 192: ||
Line 193: Unrecognized token: 95
Line 193: Unrecognized token: 95
Line 193: ID = put_user
Line 193: (
Line 193: ID = kbuf
Line 193: -
Line 193: >
Line 193: ID = f_bsize
Line 193: ,
Line 193: Unrecognized token: 38
Line 193: ID = ubuf
Line 193: -
Line 193: >
Line 193: ID = f_bsize
Line 193: )
Line 193: ||
Line 194: Unrecognized token: 95
Line 194: Unrecognized token: 95
Line 194: ID = put_user
Line 194: (
Line 194: ID = kbuf
Line 194: -
Line 194: >
Line 194: ID = f_blocks
Line 194: ,
Line 194: Unrecognized token: 38
Line 194: ID = ubuf
Line 194: -
Line 194: >
Line 194: ID = f_blocks
Line 194: )
Line 194: ||
Line 195: Unrecognized token: 95
Line 195: Unrecognized token: 95
Line 195: ID = put_user
Line 195: (
Line 195: ID = kbuf
Line 195: -
Line 195: >
Line 195: ID = f_bfree
Line 195: ,
Line 195: Unrecognized token: 38
Line 195: ID = ubuf
Line 195: -
Line 195: >
Line 195: ID = f_bfree
Line 195: )
Line 195: ||
Line 196: Unrecognized token: 95
Line 196: Unrecognized token: 95
Line 196: ID = put_user
Line 196: (
Line 196: ID = kbuf
Line 196: -
Line 196: >
Line 196: ID = f_bavail
Line 196: ,
Line 196: Unrecognized token: 38
Line 196: ID = ubuf
Line 196: -
Line 196: >
Line 196: ID = f_bavail
Line 196: )
Line 196: ||
Line 197: Unrecognized token: 95
Line 197: Unrecognized token: 95
Line 197: ID = put_user
Line 197: (
Line 197: ID = kbuf
Line 197: -
Line 197: >
Line 197: ID = f_files
Line 197: ,
Line 197: Unrecognized token: 38
Line 197: ID = ubuf
Line 197: -
Line 197: >
Line 197: ID = f_files
Line 197: )
Line 197: ||
Line 198: Unrecognized token: 95
Line 198: Unrecognized token: 95
Line 198: ID = put_user
Line 198: (
Line 198: ID = kbuf
Line 198: -
Line 198: >
Line 198: ID = f_ffree
Line 198: ,
Line 198: Unrecognized token: 38
Line 198: ID = ubuf
Line 198: -
Line 198: >
Line 198: ID = f_ffree
Line 198: )
Line 198: ||
Line 199: Unrecognized token: 95
Line 199: Unrecognized token: 95
Line 199: ID = put_user
Line 199: (
Line 199: ID = kbuf
Line 199: -
Line 199: >
Line 199: ID = f_namelen
Line 199: ,
Line 199: Unrecognized token: 38
Line 199: ID = ubuf
Line 199: -
Line 199: >
Line 199: ID = f_namelen
Line 199: )
Line 199: ||
Line 200: Unrecognized token: 95
Line 200: Unrecognized token: 95
Line 200: ID = put_user
Line 200: (
Line 200: ID = kbuf
Line 200: -
Line 200: >
Line 200: ID = f_fsid
Line 200: Unrecognized token: 46
Line 200: ID = val
Line 200: [
Line 200: INTCON = 0
Line 200: ]
Line 200: ,
Line 200: Unrecognized token: 38
Line 200: ID = ubuf
Line 200: -
Line 200: >
Line 200: ID = f_fsid
Line 200: Unrecognized token: 46
Line 200: ID = val
Line 200: [
Line 200: INTCON = 0
Line 200: ]
Line 200: )
Line 200: ||
Line 201: Unrecognized token: 95
Line 201: Unrecognized token: 95
Line 201: ID = put_user
Line 201: (
Line 201: ID = kbuf
Line 201: -
Line 201: >
Line 201: ID = f_fsid
Line 201: Unrecognized token: 46
Line 201: ID = val
Line 201: [
Line 201: INTCON = 1
Line 201: ]
Line 201: ,
Line 201: Unrecognized token: 38
Line 201: ID = ubuf
Line 201: -
Line 201: >
Line 201: ID = f_fsid
Line 201: Unrecognized token: 46
Line 201: ID = val
Line 201: [
Line 201: INTCON = 1
Line 201: ]
Line 201: )
Line 201: ||
Line 202: Unrecognized token: 95
Line 202: Unrecognized token: 95
Line 202: ID = put_user
Line 202: (
Line 202: ID = kbuf
Line 202: -
Line 202: >
Line 202: ID = f_frsize
Line 202: ,
Line 202: Unrecognized token: 38
Line 202: ID = ubuf
Line 202: -
Line 202: >
Line 202: ID = f_frsize
Line 202: )
Line 202: )
Line 203: return
Line 203: -
Line 203: ID = EFAULT
Line 203: ;
Line 204: return
Line 204: INTCON = 0
Line 204: ;
Line 205: }
Line 207: ID = asmlinkage
Line 207: ID = long
Line 207: ID = compat_statfs64
Line 207: (
Line 207: ID = const
Line 207: char
Line 207: Unrecognized token: 95
Line 207: Unrecognized token: 95
Line 207: ID = user
Line 207: *
Line 207: ID = path
Line 207: ,
Line 207: ID = compat_size_t
Line 207: ID = sz
Line 207: ,
Line 207: ID = struct
Line 207: ID = compat_statfs64
Line 207: Unrecognized token: 95
Line 207: Unrecognized token: 95
Line 207: ID = user
Line 207: *
Line 207: ID = buf
Line 207: )
Line 208: {
Line 209: ID = struct
Line 209: ID = nameidata
Line 209: ID = nd
Line 209: ;
Line 210: int
Line 210: ID = error
Line 210: ;
Line 212: if
Line 212: (
Line 212: ID = sz
Line 212: !=
Line 212: ID = sizeof
Line 212: (
Line 212: *
Line 212: ID = buf
Line 212: )
Line 212: )
Line 213: return
Line 213: -
Line 213: ID = EINVAL
Line 213: ;
Line 215: ID = error
Line 215: =
Line 215: ID = user_path_walk
Line 215: (
Line 215: ID = path
Line 215: ,
Line 215: Unrecognized token: 38
Line 215: ID = nd
Line 215: )
Line 215: ;
Line 216: if
Line 216: (
Line 216: !
Line 216: ID = error
Line 216: )
Line 216: {
Line 217: ID = struct
Line 217: ID = kstatfs
Line 217: ID = tmp
Line 217: ;
Line 218: ID = error
Line 218: =
Line 218: ID = vfs_statfs
Line 218: (
Line 218: ID = nd
Line 218: Unrecognized token: 46
Line 218: ID = dentry
Line 218: -
Line 218: >
Line 218: ID = d_inode
Line 218: -
Line 218: >
Line 218: ID = i_sb
Line 218: ,
Line 218: Unrecognized token: 38
Line 218: ID = tmp
Line 218: )
Line 218: ;
Line 219: if
Line 219: (
Line 219: !
Line 219: ID = error
Line 219: &&
Line 219: ID = put_compat_statfs64
Line 219: (
Line 219: ID = buf
Line 219: ,
Line 219: Unrecognized token: 38
Line 219: ID = tmp
Line 219: )
Line 219: )
Line 220: ID = error
Line 220: =
Line 220: -
Line 220: ID = EFAULT
Line 220: ;
Line 221: ID = path_release
Line 221: (
Line 221: Unrecognized token: 38
Line 221: ID = nd
Line 221: )
Line 221: ;
Line 222: }
Line 223: return
Line 223: ID = error
Line 223: ;
Line 224: }
Line 226: ID = asmlinkage
Line 226: ID = long
Line 226: ID = compat_fstatfs64
Line 226: (
Line 226: ID = unsigned
Line 226: int
Line 226: ID = fd
Line 226: ,
Line 226: ID = compat_size_t
Line 226: ID = sz
Line 226: ,
Line 226: ID = struct
Line 226: ID = compat_statfs64
Line 226: Unrecognized token: 95
Line 226: Unrecognized token: 95
Line 226: ID = user
Line 226: *
Line 226: ID = buf
Line 226: )
Line 227: {
Line 228: ID = struct
Line 228: ID = file
Line 228: *
Line 228: ID = file
Line 228: ;
Line 229: ID = struct
Line 229: ID = kstatfs
Line 229: ID = tmp
Line 229: ;
Line 230: int
Line 230: ID = error
Line 230: ;
Line 232: if
Line 232: (
Line 232: ID = sz
Line 232: !=
Line 232: ID = sizeof
Line 232: (
Line 232: *
Line 232: ID = buf
Line 232: )
Line 232: )
Line 233: return
Line 233: -
Line 233: ID = EINVAL
Line 233: ;
Line 235: ID = error
Line 235: =
Line 235: -
Line 235: ID = EBADF
Line 235: ;
Line 236: ID = file
Line 236: =
Line 236: ID = fget
Line 236: (
Line 236: ID = fd
Line 236: )
Line 236: ;
Line 237: if
Line 237: (
Line 237: !
Line 237: ID = file
Line 237: )
Line 238: ID = goto
Line 238: ID = out
Line 238: ;
Line 239: ID = error
Line 239: =
Line 239: ID = vfs_statfs
Line 239: (
Line 239: ID = file
Line 239: -
Line 239: >
Line 239: ID = f_dentry
Line 239: -
Line 239: >
Line 239: ID = d_inode
Line 239: -
Line 239: >
Line 239: ID = i_sb
Line 239: ,
Line 239: Unrecognized token: 38
Line 239: ID = tmp
Line 239: )
Line 239: ;
Line 240: if
Line 240: (
Line 240: !
Line 240: ID = error
Line 240: &&
Line 240: ID = put_compat_statfs64
Line 240: (
Line 240: ID = buf
Line 240: ,
Line 240: Unrecognized token: 38
Line 240: ID = tmp
Line 240: )
Line 240: )
Line 241: ID = error
Line 241: =
Line 241: -
Line 241: ID = EFAULT
Line 241: ;
Line 242: ID = fput
Line 242: (
Line 242: ID = file
Line 242: )
Line 242: ;
Line 243: ID = out
Line 243: Unrecognized token: 58
Line 244: return
Line 244: ID = error
Line 244: ;
Line 245: }
Line 249: Unrecognized token: 35
Line 249: ID = define
Line 249: ID = IOCTL_HASHSIZE
Line 249: INTCON = 256
Line 250: ID = struct
Line 250: ID = ioctl_trans
Line 250: *
Line 250: ID = ioctl32_hash_table
Line 250: [
Line 250: ID = IOCTL_HASHSIZE
Line 250: ]
Line 250: ;
Line 252: extern
Line 252: ID = struct
Line 252: ID = ioctl_trans
Line 252: ID = ioctl_start
Line 252: [
Line 252: ]
Line 252: ;
Line 253: extern
Line 253: int
Line 253: ID = ioctl_table_size
Line 253: ;
Line 255: ID = static
Line 255: ID = inline
Line 255: ID = unsigned
Line 255: ID = long
Line 255: ID = ioctl32_hash
Line 255: (
Line 255: ID = unsigned
Line 255: ID = long
Line 255: ID = cmd
Line 255: )
Line 256: {
Line 257: return
Line 257: (
Line 257: (
Line 257: (
Line 257: ID = cmd
Line 257: >
Line 257: >
Line 257: INTCON = 6
Line 257: )
Line 257: Unrecognized token: 94
Line 257: (
Line 257: ID = cmd
Line 257: >
Line 257: >
Line 257: INTCON = 4
Line 257: )
Line 257: Unrecognized token: 94
Line 257: ID = cmd
Line 257: )
Line 257: )
Line 257: Unrecognized token: 37
Line 257: ID = IOCTL_HASHSIZE
Line 257: ;
Line 258: }
Line 260: ID = static
Line 260: void
Line 260: ID = ioctl32_insert_translation
Line 260: (
Line 260: ID = struct
Line 260: ID = ioctl_trans
Line 260: *
Line 260: ID = trans
Line 260: )
Line 261: {
Line 262: ID = unsigned
Line 262: ID = long
Line 262: ID = hash
Line 262: ;
Line 263: ID = struct
Line 263: ID = ioctl_trans
Line 263: *
Line 263: ID = t
Line 263: ;
Line 265: ID = hash
Line 265: =
Line 265: ID = ioctl32_hash
Line 265: (
Line 265: ID = trans
Line 265: -
Line 265: >
Line 265: ID = cmd
Line 265: )
Line 265: ;
Line 266: if
Line 266: (
Line 266: !
Line 266: ID = ioctl32_hash_table
Line 266: [
Line 266: ID = hash
Line 266: ]
Line 266: )
Line 267: ID = ioctl32_hash_table
Line 267: [
Line 267: ID = hash
Line 267: ]
Line 267: =
Line 267: ID = trans
Line 267: ;
Line 268: else
Line 268: {
Line 269: ID = t
Line 269: =
Line 269: ID = ioctl32_hash_table
Line 269: [
Line 269: ID = hash
Line 269: ]
Line 269: ;
Line 270: while
Line 270: (
Line 270: ID = t
Line 270: -
Line 270: >
Line 270: ID = next
Line 270: )
Line 271: ID = t
Line 271: =
Line 271: ID = t
Line 271: -
Line 271: >
Line 271: ID = next
Line 271: ;
Line 272: ID = trans
Line 272: -
Line 272: >
Line 272: ID = next
Line 272: =
Line 272: ID = NULL
Line 272: ;
Line 273: ID = t
Line 273: -
Line 273: >
Line 273: ID = next
Line 273: =
Line 273: ID = trans
Line 273: ;
Line 274: }
Line 275: }
Line 277: ID = static
Line 277: int
Line 277: Unrecognized token: 95
Line 277: Unrecognized token: 95
Line 277: ID = init
Line 277: ID = init_sys32_ioctl
Line 277: (
Line 277: void
Line 277: )
Line 278: {
Line 279: int
Line 279: ID = i
Line 279: ;
Line 281: for
Line 281: (
Line 281: ID = i
Line 281: =
Line 281: INTCON = 0
Line 281: ;
Line 281: ID = i
Line 281: <
Line 281: ID = ioctl_table_size
Line 281: ;
Line 281: ID = i
Line 281: +
Line 281: +
Line 281: )
Line 281: {
Line 282: if
Line 282: (
Line 282: ID = ioctl_start
Line 282: [
Line 282: ID = i
Line 282: ]
Line 282: Unrecognized token: 46
Line 282: ID = next
Line 282: !=
Line 282: INTCON = 0
Line 282: )
Line 282: {
Line 283: ID = printk
Line 283: (
Line 283: STRINGCON = "ioctl translation %d bad\n"
Line 283: ,
Line 283: ID = i
Line 283: )
Line 283: ;
Line 284: return
Line 284: -
Line 284: INTCON = 1
Line 284: ;
Line 285: }
Line 287: ID = ioctl32_insert_translation
Line 287: (
Line 287: Unrecognized token: 38
Line 287: ID = ioctl_start
Line 287: [
Line 287: ID = i
Line 287: ]
Line 287: )
Line 287: ;
Line 288: }
Line 289: return
Line 289: INTCON = 0
Line 289: ;
Line 290: }
Line 292: Unrecognized token: 95
Line 292: Unrecognized token: 95
Line 292: ID = initcall
Line 292: (
Line 292: ID = init_sys32_ioctl
Line 292: )
Line 292: ;
Line 294: int
Line 294: ID = register_ioctl32_conversion
Line 294: (
Line 294: ID = unsigned
Line 294: int
Line 294: ID = cmd
Line 294: ,
Line 294: int
Line 294: (
Line 294: *
Line 294: ID = handler
Line 294: )
Line 294: (
Line 294: ID = unsigned
Line 294: int
Line 294: ,
Line 295: ID = unsigned
Line 295: int
Line 295: ,
Line 295: ID = unsigned
Line 295: ID = long
Line 295: ,
Line 295: ID = struct
Line 295: ID = file
Line 295: *
Line 295: )
Line 295: )
Line 296: {
Line 297: ID = struct
Line 297: ID = ioctl_trans
Line 297: *
Line 297: ID = t
Line 297: ;
Line 298: ID = struct
Line 298: ID = ioctl_trans
Line 298: *
Line 298: ID = new_t
Line 298: ;
Line 299: ID = unsigned
Line 299: ID = long
Line 299: ID = hash
Line 299: =
Line 299: ID = ioctl32_hash
Line 299: (
Line 299: ID = cmd
Line 299: )
Line 299: ;
Line 301: ID = new_t
Line 301: =
Line 301: ID = kmalloc
Line 301: (
Line 301: ID = sizeof
Line 301: (
Line 301: *
Line 301: ID = new_t
Line 301: )
Line 301: ,
Line 301: ID = GFP_KERNEL
Line 301: )
Line 301: ;
Line 302: if
Line 302: (
Line 302: !
Line 302: ID = new_t
Line 302: )
Line 303: return
Line 303: -
Line 303: ID = ENOMEM
Line 303: ;
Line 305: ID = lock_kernel
Line 305: (
Line 305: )
Line 305: ;
Line 306: for
Line 306: (
Line 306: ID = t
Line 306: =
Line 306: ID = ioctl32_hash_table
Line 306: [
Line 306: ID = hash
Line 306: ]
Line 306: ;
Line 306: ID = t
Line 306: ;
Line 306: ID = t
Line 306: =
Line 306: ID = t
Line 306: -
Line 306: >
Line 306: ID = next
Line 306: )
Line 306: {
Line 307: if
Line 307: (
Line 307: ID = t
Line 307: -
Line 307: >
Line 307: ID = cmd
Line 307: ==
Line 307: ID = cmd
Line 307: )
Line 307: {
Line 308: ID = printk
Line 308: (
Line 308: ID = KERN_ERR
Line 308: STRINGCON = "Trying to register duplicated ioctl32 "
Line 309: STRINGCON = "handler %x\n"
Line 309: ,
Line 309: ID = cmd
Line 309: )
Line 309: ;
Line 310: ID = unlock_kernel
Line 310: (
Line 310: )
Line 310: ;
Line 311: ID = kfree
Line 311: (
Line 311: ID = new_t
Line 311: )
Line 311: ;
Line 312: return
Line 312: -
Line 312: ID = EINVAL
Line 312: ;
Line 313: }
Line 314: }
Line 315: ID = new_t
Line 315: -
Line 315: >
Line 315: ID = next
Line 315: =
Line 315: ID = NULL
Line 315: ;
Line 316: ID = new_t
Line 316: -
Line 316: >
Line 316: ID = cmd
Line 316: =
Line 316: ID = cmd
Line 316: ;
Line 317: ID = new_t
Line 317: -
Line 317: >
Line 317: ID = handler
Line 317: =
Line 317: ID = handler
Line 317: ;
Line 318: ID = ioctl32_insert_translation
Line 318: (
Line 318: ID = new_t
Line 318: )
Line 318: ;
Line 320: ID = unlock_kernel
Line 320: (
Line 320: )
Line 320: ;
Line 321: return
Line 321: INTCON = 0
Line 321: ;
Line 322: }
Line 323: ID = EXPORT_SYMBOL
Line 323: (
Line 323: ID = register_ioctl32_conversion
Line 323: )
Line 323: ;
Line 325: ID = static
Line 325: ID = inline
Line 325: int
Line 325: ID = builtin_ioctl
Line 325: (
Line 325: ID = struct
Line 325: ID = ioctl_trans
Line 325: *
Line 325: ID = t
Line 325: )
Line 326: {
Line 327: return
Line 327: ID = t
Line 327: >=
Line 327: ID = ioctl_start
Line 327: &&
Line 327: ID = t
Line 327: <
Line 327: (
Line 327: ID = ioctl_start
Line 327: +
Line 327: ID = ioctl_table_size
Line 327: )
Line 327: ;
Line 328: }
Line 335: int
Line 335: ID = unregister_ioctl32_conversion
Line 335: (
Line 335: ID = unsigned
Line 335: int
Line 335: ID = cmd
Line 335: )
Line 336: {
Line 337: ID = unsigned
Line 337: ID = long
Line 337: ID = hash
Line 337: =
Line 337: ID = ioctl32_hash
Line 337: (
Line 337: ID = cmd
Line 337: )
Line 337: ;
Line 338: ID = struct
Line 338: ID = ioctl_trans
Line 338: *
Line 338: ID = t
Line 338: ,
Line 338: *
Line 338: ID = t1
Line 338: ;
Line 340: ID = lock_kernel
Line 340: (
Line 340: )
Line 340: ;
Line 342: ID = t
Line 342: =
Line 342: ID = ioctl32_hash_table
Line 342: [
Line 342: ID = hash
Line 342: ]
Line 342: ;
Line 343: if
Line 343: (
Line 343: !
Line 343: ID = t
Line 343: )
Line 343: {
Line 344: ID = unlock_kernel
Line 344: (
Line 344: )
Line 344: ;
Line 345: return
Line 345: -
Line 345: ID = EINVAL
Line 345: ;
Line 346: }
Line 348: if
Line 348: (
Line 348: ID = t
Line 348: -
Line 348: >
Line 348: ID = cmd
Line 348: ==
Line 348: ID = cmd
Line 348: )
Line 348: {
Line 349: if
Line 349: (
Line 349: ID = builtin_ioctl
Line 349: (
Line 349: ID = t
Line 349: )
Line 349: )
Line 349: {
Line 350: ID = printk
Line 350: (
Line 350: STRINGCON = "%p tried to unregister builtin ioctl %x\n"
Line 350: ,
Line 351: Unrecognized token: 95
Line 351: Unrecognized token: 95
Line 351: ID = builtin_return_address
Line 351: (
Line 351: INTCON = 0
Line 351: )
Line 351: ,
Line 351: ID = cmd
Line 351: )
Line 351: ;
Line 352: }
Line 352: else
Line 352: {
Line 353: ID = ioctl32_hash_table
Line 353: [
Line 353: ID = hash
Line 353: ]
Line 353: =
Line 353: ID = t
Line 353: -
Line 353: >
Line 353: ID = next
Line 353: ;
Line 354: ID = unlock_kernel
Line 354: (
Line 354: )
Line 354: ;
Line 355: ID = kfree
Line 355: (
Line 355: ID = t
Line 355: )
Line 355: ;
Line 356: return
Line 356: INTCON = 0
Line 356: ;
Line 357: }
Line 358: }
Line 359: while
Line 359: (
Line 359: ID = t
Line 359: -
Line 359: >
Line 359: ID = next
Line 359: )
Line 359: {
Line 360: ID = t1
Line 360: =
Line 360: ID = t
Line 360: -
Line 360: >
Line 360: ID = next
Line 360: ;
Line 361: if
Line 361: (
Line 361: ID = t1
Line 361: -
Line 361: >
Line 361: ID = cmd
Line 361: ==
Line 361: ID = cmd
Line 361: )
Line 361: {
Line 362: if
Line 362: (
Line 362: ID = builtin_ioctl
Line 362: (
Line 362: ID = t1
Line 362: )
Line 362: )
Line 362: {
Line 363: ID = printk
Line 363: (
Line 363: STRINGCON = "%p tried to unregister builtin "
Line 364: STRINGCON = "ioctl %x\n"
Line 364: ,
Line 365: Unrecognized token: 95
Line 365: Unrecognized token: 95
Line 365: ID = builtin_return_address
Line 365: (
Line 365: INTCON = 0
Line 365: )
Line 365: ,
Line 365: ID = cmd
Line 365: )
Line 365: ;
Line 366: ID = goto
Line 366: ID = out
Line 366: ;
Line 367: }
Line 367: else
Line 367: {
Line 368: ID = t
Line 368: -
Line 368: >
Line 368: ID = next
Line 368: =
Line 368: ID = t1
Line 368: -
Line 368: >
Line 368: ID = next
Line 368: ;
Line 369: ID = unlock_kernel
Line 369: (
Line 369: )
Line 369: ;
Line 370: ID = kfree
Line 370: (
Line 370: ID = t1
Line 370: )
Line 370: ;
Line 371: return
Line 371: INTCON = 0
Line 371: ;
Line 372: }
Line 373: }
Line 374: ID = t
Line 374: =
Line 374: ID = t1
Line 374: ;
Line 375: }
Line 376: ID = printk
Line 376: (
Line 376: ID = KERN_ERR
Line 376: STRINGCON = "Trying to free unknown 32bit ioctl handler %x\n"
Line 376: ,
Line 377: ID = cmd
Line 377: )
Line 377: ;
Line 378: ID = out
Line 378: Unrecognized token: 58
Line 379: ID = unlock_kernel
Line 379: (
Line 379: )
Line 379: ;
Line 380: return
Line 380: -
Line 380: ID = EINVAL
Line 380: ;
Line 381: }
Line 382: ID = EXPORT_SYMBOL
Line 382: (
Line 382: ID = unregister_ioctl32_conversion
Line 382: )
Line 382: ;
Line 384: ID = asmlinkage
Line 384: ID = long
Line 384: ID = compat_sys_ioctl
Line 384: (
Line 384: ID = unsigned
Line 384: int
Line 384: ID = fd
Line 384: ,
Line 384: ID = unsigned
Line 384: int
Line 384: ID = cmd
Line 384: ,
Line 385: ID = unsigned
Line 385: ID = long
Line 385: ID = arg
Line 385: )
Line 386: {
Line 387: ID = struct
Line 387: ID = file
Line 387: *
Line 387: ID = filp
Line 387: ;
Line 388: int
Line 388: ID = error
Line 388: =
Line 388: -
Line 388: ID = EBADF
Line 388: ;
Line 389: ID = struct
Line 389: ID = ioctl_trans
Line 389: *
Line 389: ID = t
Line 389: ;
Line 391: ID = filp
Line 391: =
Line 391: ID = fget
Line 391: (
Line 391: ID = fd
Line 391: )
Line 391: ;
Line 392: if
Line 392: (
Line 392: !
Line 392: ID = filp
Line 392: )
Line 393: ID = goto
Line 393: ID = out2
Line 393: ;
Line 395: if
Line 395: (
Line 395: !
Line 395: ID = filp
Line 395: -
Line 395: >
Line 395: ID = f_op
Line 395: ||
Line 395: !
Line 395: ID = filp
Line 395: -
Line 395: >
Line 395: ID = f_op
Line 395: -
Line 395: >
Line 395: ID = ioctl
Line 395: )
Line 395: {
Line 396: ID = error
Line 396: =
Line 396: ID = sys_ioctl
Line 396: (
Line 396: ID = fd
Line 396: ,
Line 396: ID = cmd
Line 396: ,
Line 396: ID = arg
Line 396: )
Line 396: ;
Line 397: ID = goto
Line 397: ID = out
Line 397: ;
Line 398: }
Line 400: ID = lock_kernel
Line 400: (
Line 400: )
Line 400: ;
Line 402: ID = t
Line 402: =
Line 402: ID = ioctl32_hash_table
Line 402: [
Line 402: ID = ioctl32_hash
Line 402: (
Line 402: ID = cmd
Line 402: )
Line 402: ]
Line 402: ;
Line 404: while
Line 404: (
Line 404: ID = t
Line 404: &&
Line 404: ID = t
Line 404: -
Line 404: >
Line 404: ID = cmd
Line 404: !=
Line 404: ID = cmd
Line 404: )
Line 405: ID = t
Line 405: =
Line 405: ID = t
Line 405: -
Line 405: >
Line 405: ID = next
Line 405: ;
Line 406: if
Line 406: (
Line 406: ID = t
Line 406: )
Line 406: {
Line 407: if
Line 407: (
Line 407: ID = t
Line 407: -
Line 407: >
Line 407: ID = handler
Line 407: )
Line 407: {
Line 408: ID = error
Line 408: =
Line 408: ID = t
Line 408: -
Line 408: >
Line 408: ID = handler
Line 408: (
Line 408: ID = fd
Line 408: ,
Line 408: ID = cmd
Line 408: ,
Line 408: ID = arg
Line 408: ,
Line 408: ID = filp
Line 408: )
Line 408: ;
Line 409: ID = unlock_kernel
Line 409: (
Line 409: )
Line 409: ;
Line 410: }
Line 410: else
Line 410: {
Line 411: ID = unlock_kernel
Line 411: (
Line 411: )
Line 411: ;
Line 412: ID = error
Line 412: =
Line 412: ID = sys_ioctl
Line 412: (
Line 412: ID = fd
Line 412: ,
Line 412: ID = cmd
Line 412: ,
Line 412: ID = arg
Line 412: )
Line 412: ;
Line 413: }
Line 414: }
Line 414: else
Line 414: {
Line 415: ID = unlock_kernel
Line 415: (
Line 415: )
Line 415: ;
Line 416: if
Line 416: (
Line 416: ID = cmd
Line 416: >=
Line 416: ID = SIOCDEVPRIVATE
Line 416: &&
Line 416: ID = cmd
Line 416: <=
Line 416: (
Line 416: ID = SIOCDEVPRIVATE
Line 416: +
Line 416: INTCON = 15
Line 416: )
Line 416: )
Line 416: {
Line 417: ID = error
Line 417: =
Line 417: ID = siocdevprivate_ioctl
Line 417: (
Line 417: ID = fd
Line 417: ,
Line 417: ID = cmd
Line 417: ,
Line 417: ID = arg
Line 417: )
Line 417: ;
Line 418: }
Line 418: else
Line 418: {
Line 419: ID = static
Line 419: int
Line 419: ID = count
Line 419: ;
Line 420: if
Line 420: (
Line 420: +
Line 420: +
Line 420: ID = count
Line 420: <=
Line 420: INTCON = 50
Line 420: )
Line 420: {
Line 421: char
Line 421: ID = buf
Line 421: [
Line 421: INTCON = 10
Line 421: ]
Line 421: ;
Line 422: char
Line 422: *
Line 422: ID = fn
Line 422: =
Line 422: STRINGCON = "?"
Line 422: ;
Line 423: char
Line 423: *
Line 423: ID = path
Line 423: ;
Line 425: ID = path
Line 425: =
Line 425: (
Line 425: char
Line 425: *
Line 425: )
Line 425: Unrecognized token: 95
Line 425: Unrecognized token: 95
Line 425: ID = get_free_page
Line 425: (
Line 425: ID = GFP_KERNEL
Line 425: )
Line 425: ;
Line 428: if
Line 428: (
Line 428: ID = path
Line 428: )
Line 428: {
Line 429: ID = fn
Line 429: =
Line 429: ID = d_path
Line 429: (
Line 429: ID = filp
Line 429: -
Line 429: >
Line 429: ID = f_dentry
Line 429: ,
Line 430: ID = filp
Line 430: -
Line 430: >
Line 430: ID = f_vfsmnt
Line 430: ,
Line 430: ID = path
Line 430: ,
Line 431: ID = PAGE_SIZE
Line 431: )
Line 431: ;
Line 432: }
Line 434: ID = sprintf
Line 434: (
Line 434: ID = buf
Line 434: ,
Line 434: STRINGCON = "'%c'"
Line 434: ,
Line 434: (
Line 434: ID = cmd
Line 434: >
Line 434: >
Line 434: INTCON = 24
Line 434: )
Line 434: Unrecognized token: 38
Line 434: INTCON = 0
Line 434: ID = x3f
Line 434: )
Line 434: ;
Line 435: if
Line 435: (
Line 435: !
Line 435: ID = isprint
Line 435: (
Line 435: ID = buf
Line 435: [
Line 435: INTCON = 1
Line 435: ]
Line 435: )
Line 435: )
Line 436: ID = sprintf
Line 436: (
Line 436: ID = buf
Line 436: ,
Line 436: STRINGCON = "%02x"
Line 436: ,
Line 436: ID = buf
Line 436: [
Line 436: INTCON = 1
Line 436: ]
Line 436: )
Line 436: ;
Line 437: ID = printk
Line 437: (
Line 437: STRINGCON = "ioctl32(%s:%d): Unknown cmd fd(%d) "
Line 438: STRINGCON = "cmd(%08x){%s} arg(%08x) on %s\n"
Line 438: ,
Line 439: ID = current
Line 439: -
Line 439: >
Line 439: ID = comm
Line 439: ,
Line 439: ID = current
Line 439: -
Line 439: >
Line 439: ID = pid
Line 439: ,
Line 440: (
Line 440: int
Line 440: )
Line 440: ID = fd
Line 440: ,
Line 440: (
Line 440: ID = unsigned
Line 440: int
Line 440: )
Line 440: ID = cmd
Line 440: ,
Line 440: ID = buf
Line 440: ,
Line 441: (
Line 441: ID = unsigned
Line 441: int
Line 441: )
Line 441: ID = arg
Line 441: ,
Line 441: ID = fn
Line 441: )
Line 441: ;
Line 442: if
Line 442: (
Line 442: ID = path
Line 442: )
Line 443: ID = free_page
Line 443: (
Line 443: (
Line 443: ID = unsigned
Line 443: ID = long
Line 443: )
Line 443: ID = path
Line 443: )
Line 443: ;
Line 444: }
Line 445: ID = error
Line 445: =
Line 445: -
Line 445: ID = EINVAL
Line 445: ;
Line 446: }
Line 447: }
Line 448: ID = out
Line 448: Unrecognized token: 58
Line 449: ID = fput
Line 449: (
Line 449: ID = filp
Line 449: )
Line 449: ;
Line 450: ID = out2
Line 450: Unrecognized token: 58
Line 451: return
Line 451: ID = error
Line 451: ;
Line 452: }
Line 454: ID = static
Line 454: int
Line 454: ID = get_compat_flock
Line 454: (
Line 454: ID = struct
Line 454: ID = flock
Line 454: *
Line 454: ID = kfl
Line 454: ,
Line 454: ID = struct
Line 454: ID = compat_flock
Line 454: Unrecognized token: 95
Line 454: Unrecognized token: 95
Line 454: ID = user
Line 454: *
Line 454: ID = ufl
Line 454: )
Line 455: {
Line 456: if
Line 456: (
Line 456: !
Line 456: ID = access_ok
Line 456: (
Line 456: ID = VERIFY_READ
Line 456: ,
Line 456: ID = ufl
Line 456: ,
Line 456: ID = sizeof
Line 456: (
Line 456: *
Line 456: ID = ufl
Line 456: )
Line 456: )
Line 456: ||
Line 457: Unrecognized token: 95
Line 457: Unrecognized token: 95
Line 457: ID = get_user
Line 457: (
Line 457: ID = kfl
Line 457: -
Line 457: >
Line 457: ID = l_type
Line 457: ,
Line 457: Unrecognized token: 38
Line 457: ID = ufl
Line 457: -
Line 457: >
Line 457: ID = l_type
Line 457: )
Line 457: ||
Line 458: Unrecognized token: 95
Line 458: Unrecognized token: 95
Line 458: ID = get_user
Line 458: (
Line 458: ID = kfl
Line 458: -
Line 458: >
Line 458: ID = l_whence
Line 458: ,
Line 458: Unrecognized token: 38
Line 458: ID = ufl
Line 458: -
Line 458: >
Line 458: ID = l_whence
Line 458: )
Line 458: ||
Line 459: Unrecognized token: 95
Line 459: Unrecognized token: 95
Line 459: ID = get_user
Line 459: (
Line 459: ID = kfl
Line 459: -
Line 459: >
Line 459: ID = l_start
Line 459: ,
Line 459: Unrecognized token: 38
Line 459: ID = ufl
Line 459: -
Line 459: >
Line 459: ID = l_start
Line 459: )
Line 459: ||
Line 460: Unrecognized token: 95
Line 460: Unrecognized token: 95
Line 460: ID = get_user
Line 460: (
Line 460: ID = kfl
Line 460: -
Line 460: >
Line 460: ID = l_len
Line 460: ,
Line 460: Unrecognized token: 38
Line 460: ID = ufl
Line 460: -
Line 460: >
Line 460: ID = l_len
Line 460: )
Line 460: ||
Line 461: Unrecognized token: 95
Line 461: Unrecognized token: 95
Line 461: ID = get_user
Line 461: (
Line 461: ID = kfl
Line 461: -
Line 461: >
Line 461: ID = l_pid
Line 461: ,
Line 461: Unrecognized token: 38
Line 461: ID = ufl
Line 461: -
Line 461: >
Line 461: ID = l_pid
Line 461: )
Line 461: )
Line 462: return
Line 462: -
Line 462: ID = EFAULT
Line 462: ;
Line 463: return
Line 463: INTCON = 0
Line 463: ;
Line 464: }
Line 466: ID = static
Line 466: int
Line 466: ID = put_compat_flock
Line 466: (
Line 466: ID = struct
Line 466: ID = flock
Line 466: *
Line 466: ID = kfl
Line 466: ,
Line 466: ID = struct
Line 466: ID = compat_flock
Line 466: Unrecognized token: 95
Line 466: Unrecognized token: 95
Line 466: ID = user
Line 466: *
Line 466: ID = ufl
Line 466: )
Line 467: {
Line 468: if
Line 468: (
Line 468: !
Line 468: ID = access_ok
Line 468: (
Line 468: ID = VERIFY_WRITE
Line 468: ,
Line 468: ID = ufl
Line 468: ,
Line 468: ID = sizeof
Line 468: (
Line 468: *
Line 468: ID = ufl
Line 468: )
Line 468: )
Line 468: ||
Line 469: Unrecognized token: 95
Line 469: Unrecognized token: 95
Line 469: ID = put_user
Line 469: (
Line 469: ID = kfl
Line 469: -
Line 469: >
Line 469: ID = l_type
Line 469: ,
Line 469: Unrecognized token: 38
Line 469: ID = ufl
Line 469: -
Line 469: >
Line 469: ID = l_type
Line 469: )
Line 469: ||
Line 470: Unrecognized token: 95
Line 470: Unrecognized token: 95
Line 470: ID = put_user
Line 470: (
Line 470: ID = kfl
Line 470: -
Line 470: >
Line 470: ID = l_whence
Line 470: ,
Line 470: Unrecognized token: 38
Line 470: ID = ufl
Line 470: -
Line 470: >
Line 470: ID = l_whence
Line 470: )
Line 470: ||
Line 471: Unrecognized token: 95
Line 471: Unrecognized token: 95
Line 471: ID = put_user
Line 471: (
Line 471: ID = kfl
Line 471: -
Line 471: >
Line 471: ID = l_start
Line 471: ,
Line 471: Unrecognized token: 38
Line 471: ID = ufl
Line 471: -
Line 471: >
Line 471: ID = l_start
Line 471: )
Line 471: ||
Line 472: Unrecognized token: 95
Line 472: Unrecognized token: 95
Line 472: ID = put_user
Line 472: (
Line 472: ID = kfl
Line 472: -
Line 472: >
Line 472: ID = l_len
Line 472: ,
Line 472: Unrecognized token: 38
Line 472: ID = ufl
Line 472: -
Line 472: >
Line 472: ID = l_len
Line 472: )
Line 472: ||
Line 473: Unrecognized token: 95
Line 473: Unrecognized token: 95
Line 473: ID = put_user
Line 473: (
Line 473: ID = kfl
Line 473: -
Line 473: >
Line 473: ID = l_pid
Line 473: ,
Line 473: Unrecognized token: 38
Line 473: ID = ufl
Line 473: -
Line 473: >
Line 473: ID = l_pid
Line 473: )
Line 473: )
Line 474: return
Line 474: -
Line 474: ID = EFAULT
Line 474: ;
Line 475: return
Line 475: INTCON = 0
Line 475: ;
Line 476: }
Line 478: Unrecognized token: 35
Line 478: ID = ifndef
Line 478: ID = HAVE_ARCH_GET_COMPAT_FLOCK64
Line 479: ID = static
Line 479: int
Line 479: ID = get_compat_flock64
Line 479: (
Line 479: ID = struct
Line 479: ID = flock
Line 479: *
Line 479: ID = kfl
Line 479: ,
Line 479: ID = struct
Line 479: ID = compat_flock64
Line 479: Unrecognized token: 95
Line 479: Unrecognized token: 95
Line 479: ID = user
Line 479: *
Line 479: ID = ufl
Line 479: )
Line 480: {
Line 481: if
Line 481: (
Line 481: !
Line 481: ID = access_ok
Line 481: (
Line 481: ID = VERIFY_READ
Line 481: ,
Line 481: ID = ufl
Line 481: ,
Line 481: ID = sizeof
Line 481: (
Line 481: *
Line 481: ID = ufl
Line 481: )
Line 481: )
Line 481: ||
Line 482: Unrecognized token: 95
Line 482: Unrecognized token: 95
Line 482: ID = get_user
Line 482: (
Line 482: ID = kfl
Line 482: -
Line 482: >
Line 482: ID = l_type
Line 482: ,
Line 482: Unrecognized token: 38
Line 482: ID = ufl
Line 482: -
Line 482: >
Line 482: ID = l_type
Line 482: )
Line 482: ||
Line 483: Unrecognized token: 95
Line 483: Unrecognized token: 95
Line 483: ID = get_user
Line 483: (
Line 483: ID = kfl
Line 483: -
Line 483: >
Line 483: ID = l_whence
Line 483: ,
Line 483: Unrecognized token: 38
Line 483: ID = ufl
Line 483: -
Line 483: >
Line 483: ID = l_whence
Line 483: )
Line 483: ||
Line 484: Unrecognized token: 95
Line 484: Unrecognized token: 95
Line 484: ID = get_user
Line 484: (
Line 484: ID = kfl
Line 484: -
Line 484: >
Line 484: ID = l_start
Line 484: ,
Line 484: Unrecognized token: 38
Line 484: ID = ufl
Line 484: -
Line 484: >
Line 484: ID = l_start
Line 484: )
Line 484: ||
Line 485: Unrecognized token: 95
Line 485: Unrecognized token: 95
Line 485: ID = get_user
Line 485: (
Line 485: ID = kfl
Line 485: -
Line 485: >
Line 485: ID = l_len
Line 485: ,
Line 485: Unrecognized token: 38
Line 485: ID = ufl
Line 485: -
Line 485: >
Line 485: ID = l_len
Line 485: )
Line 485: ||
Line 486: Unrecognized token: 95
Line 486: Unrecognized token: 95
Line 486: ID = get_user
Line 486: (
Line 486: ID = kfl
Line 486: -
Line 486: >
Line 486: ID = l_pid
Line 486: ,
Line 486: Unrecognized token: 38
Line 486: ID = ufl
Line 486: -
Line 486: >
Line 486: ID = l_pid
Line 486: )
Line 486: )
Line 487: return
Line 487: -
Line 487: ID = EFAULT
Line 487: ;
Line 488: return
Line 488: INTCON = 0
Line 488: ;
Line 489: }
Line 490: Unrecognized token: 35
Line 490: ID = endif
Line 492: Unrecognized token: 35
Line 492: ID = ifndef
Line 492: ID = HAVE_ARCH_PUT_COMPAT_FLOCK64
Line 493: ID = static
Line 493: int
Line 493: ID = put_compat_flock64
Line 493: (
Line 493: ID = struct
Line 493: ID = flock
Line 493: *
Line 493: ID = kfl
Line 493: ,
Line 493: ID = struct
Line 493: ID = compat_flock64
Line 493: Unrecognized token: 95
Line 493: Unrecognized token: 95
Line 493: ID = user
Line 493: *
Line 493: ID = ufl
Line 493: )
Line 494: {
Line 495: if
Line 495: (
Line 495: !
Line 495: ID = access_ok
Line 495: (
Line 495: ID = VERIFY_WRITE
Line 495: ,
Line 495: ID = ufl
Line 495: ,
Line 495: ID = sizeof
Line 495: (
Line 495: *
Line 495: ID = ufl
Line 495: )
Line 495: )
Line 495: ||
Line 496: Unrecognized token: 95
Line 496: Unrecognized token: 95
Line 496: ID = put_user
Line 496: (
Line 496: ID = kfl
Line 496: -
Line 496: >
Line 496: ID = l_type
Line 496: ,
Line 496: Unrecognized token: 38
Line 496: ID = ufl
Line 496: -
Line 496: >
Line 496: ID = l_type
Line 496: )
Line 496: ||
Line 497: Unrecognized token: 95
Line 497: Unrecognized token: 95
Line 497: ID = put_user
Line 497: (
Line 497: ID = kfl
Line 497: -
Line 497: >
Line 497: ID = l_whence
Line 497: ,
Line 497: Unrecognized token: 38
Line 497: ID = ufl
Line 497: -
Line 497: >
Line 497: ID = l_whence
Line 497: )
Line 497: ||
Line 498: Unrecognized token: 95
Line 498: Unrecognized token: 95
Line 498: ID = put_user
Line 498: (
Line 498: ID = kfl
Line 498: -
Line 498: >
Line 498: ID = l_start
Line 498: ,
Line 498: Unrecognized token: 38
Line 498: ID = ufl
Line 498: -
Line 498: >
Line 498: ID = l_start
Line 498: )
Line 498: ||
Line 499: Unrecognized token: 95
Line 499: Unrecognized token: 95
Line 499: ID = put_user
Line 499: (
Line 499: ID = kfl
Line 499: -
Line 499: >
Line 499: ID = l_len
Line 499: ,
Line 499: Unrecognized token: 38
Line 499: ID = ufl
Line 499: -
Line 499: >
Line 499: ID = l_len
Line 499: )
Line 499: ||
Line 500: Unrecognized token: 95
Line 500: Unrecognized token: 95
Line 500: ID = put_user
Line 500: (
Line 500: ID = kfl
Line 500: -
Line 500: >
Line 500: ID = l_pid
Line 500: ,
Line 500: Unrecognized token: 38
Line 500: ID = ufl
Line 500: -
Line 500: >
Line 500: ID = l_pid
Line 500: )
Line 500: )
Line 501: return
Line 501: -
Line 501: ID = EFAULT
Line 501: ;
Line 502: return
Line 502: INTCON = 0
Line 502: ;
Line 503: }
Line 504: Unrecognized token: 35
Line 504: ID = endif
Line 506: ID = asmlinkage
Line 506: ID = long
Line 506: ID = compat_sys_fcntl64
Line 506: (
Line 506: ID = unsigned
Line 506: int
Line 506: ID = fd
Line 506: ,
Line 506: ID = unsigned
Line 506: int
Line 506: ID = cmd
Line 506: ,
Line 507: ID = unsigned
Line 507: ID = long
Line 507: ID = arg
Line 507: )
Line 508: {
Line 509: ID = mm_segment_t
Line 509: ID = old_fs
Line 509: ;
Line 510: ID = struct
Line 510: ID = flock
Line 510: ID = f
Line 510: ;
Line 511: ID = long
Line 511: ID = ret
Line 511: ;
Line 513: ID = switch
Line 513: (
Line 513: ID = cmd
Line 513: )
Line 513: {
Line 514: ID = case
Line 514: ID = F_GETLK
Line 514: Unrecognized token: 58
Line 515: ID = case
Line 515: ID = F_SETLK
Line 515: Unrecognized token: 58
Line 516: ID = case
Line 516: ID = F_SETLKW
Line 516: Unrecognized token: 58
Line 517: ID = ret
Line 517: =
Line 517: ID = get_compat_flock
Line 517: (
Line 517: Unrecognized token: 38
Line 517: ID = f
Line 517: ,
Line 517: ID = compat_ptr
Line 517: (
Line 517: ID = arg
Line 517: )
Line 517: )
Line 517: ;
Line 518: if
Line 518: (
Line 518: ID = ret
Line 518: !=
Line 518: INTCON = 0
Line 518: )
Line 519: ID = break
Line 519: ;
Line 520: ID = old_fs
Line 520: =
Line 520: ID = get_fs
Line 520: (
Line 520: )
Line 520: ;
Line 521: ID = set_fs
Line 521: (
Line 521: ID = KERNEL_DS
Line 521: )
Line 521: ;
Line 522: ID = ret
Line 522: =
Line 522: ID = sys_fcntl
Line 522: (
Line 522: ID = fd
Line 522: ,
Line 522: ID = cmd
Line 522: ,
Line 522: (
Line 522: ID = unsigned
Line 522: ID = long
Line 522: )
Line 522: Unrecognized token: 38
Line 522: ID = f
Line 522: )
Line 522: ;
Line 523: ID = set_fs
Line 523: (
Line 523: ID = old_fs
Line 523: )
Line 523: ;
Line 524: if
Line 524: (
Line 524: (
Line 524: ID = cmd
Line 524: ==
Line 524: ID = F_GETLK
Line 524: )
Line 524: &&
Line 524: (
Line 524: ID = ret
Line 524: ==
Line 524: INTCON = 0
Line 524: )
Line 524: )
Line 524: {
Line 525: if
Line 525: (
Line 525: (
Line 525: ID = f
Line 525: Unrecognized token: 46
Line 525: ID = l_start
Line 525: >=
Line 525: ID = COMPAT_OFF_T_MAX
Line 525: )
Line 525: ||
Line 526: (
Line 526: (
Line 526: ID = f
Line 526: Unrecognized token: 46
Line 526: ID = l_start
Line 526: +
Line 526: ID = f
Line 526: Unrecognized token: 46
Line 526: ID = l_len
Line 526: )
Line 526: >=
Line 526: ID = COMPAT_OFF_T_MAX
Line 526: )
Line 526: )
Line 527: ID = ret
Line 527: =
Line 527: -
Line 527: ID = EOVERFLOW
Line 527: ;
Line 528: if
Line 528: (
Line 528: ID = ret
Line 528: ==
Line 528: INTCON = 0
Line 528: )
Line 529: ID = ret
Line 529: =
Line 529: ID = put_compat_flock
Line 529: (
Line 529: Unrecognized token: 38
Line 529: ID = f
Line 529: ,
Line 529: ID = compat_ptr
Line 529: (
Line 529: ID = arg
Line 529: )
Line 529: )
Line 529: ;
Line 530: }
Line 531: ID = break
Line 531: ;
Line 533: ID = case
Line 533: ID = F_GETLK64
Line 533: Unrecognized token: 58
Line 534: ID = case
Line 534: ID = F_SETLK64
Line 534: Unrecognized token: 58
Line 535: ID = case
Line 535: ID = F_SETLKW64
Line 535: Unrecognized token: 58
Line 536: ID = ret
Line 536: =
Line 536: ID = get_compat_flock64
Line 536: (
Line 536: Unrecognized token: 38
Line 536: ID = f
Line 536: ,
Line 536: ID = compat_ptr
Line 536: (
Line 536: ID = arg
Line 536: )
Line 536: )
Line 536: ;
Line 537: if
Line 537: (
Line 537: ID = ret
Line 537: !=
Line 537: INTCON = 0
Line 537: )
Line 538: ID = break
Line 538: ;
Line 539: ID = old_fs
Line 539: =
Line 539: ID = get_fs
Line 539: (
Line 539: )
Line 539: ;
Line 540: ID = set_fs
Line 540: (
Line 540: ID = KERNEL_DS
Line 540: )
Line 540: ;
Line 541: ID = ret
Line 541: =
Line 541: ID = sys_fcntl
Line 541: (
Line 541: ID = fd
Line 541: ,
Line 541: (
Line 541: ID = cmd
Line 541: ==
Line 541: ID = F_GETLK64
Line 541: )
Line 541: Unrecognized token: 63
Line 541: ID = F_GETLK
Line 541: Unrecognized token: 58
Line 542: (
Line 542: (
Line 542: ID = cmd
Line 542: ==
Line 542: ID = F_SETLK64
Line 542: )
Line 542: Unrecognized token: 63
Line 542: ID = F_SETLK
Line 542: Unrecognized token: 58
Line 542: ID = F_SETLKW
Line 542: )
Line 542: ,
Line 543: (
Line 543: ID = unsigned
Line 543: ID = long
Line 543: )
Line 543: Unrecognized token: 38
Line 543: ID = f
Line 543: )
Line 543: ;
Line 544: ID = set_fs
Line 544: (
Line 544: ID = old_fs
Line 544: )
Line 544: ;
Line 545: if
Line 545: (
Line 545: (
Line 545: ID = cmd
Line 545: ==
Line 545: ID = F_GETLK64
Line 545: )
Line 545: &&
Line 545: (
Line 545: ID = ret
Line 545: ==
Line 545: INTCON = 0
Line 545: )
Line 545: )
Line 545: {
Line 546: if
Line 546: (
Line 546: (
Line 546: ID = f
Line 546: Unrecognized token: 46
Line 546: ID = l_start
Line 546: >=
Line 546: ID = COMPAT_LOFF_T_MAX
Line 546: )
Line 546: ||
Line 547: (
Line 547: (
Line 547: ID = f
Line 547: Unrecognized token: 46
Line 547: ID = l_start
Line 547: +
Line 547: ID = f
Line 547: Unrecognized token: 46
Line 547: ID = l_len
Line 547: )
Line 547: >=
Line 547: ID = COMPAT_LOFF_T_MAX
Line 547: )
Line 547: )
Line 548: ID = ret
Line 548: =
Line 548: -
Line 548: ID = EOVERFLOW
Line 548: ;
Line 549: if
Line 549: (
Line 549: ID = ret
Line 549: ==
Line 549: INTCON = 0
Line 549: )
Line 550: ID = ret
Line 550: =
Line 550: ID = put_compat_flock64
Line 550: (
Line 550: Unrecognized token: 38
Line 550: ID = f
Line 550: ,
Line 550: ID = compat_ptr
Line 550: (
Line 550: ID = arg
Line 550: )
Line 550: )
Line 550: ;
Line 551: }
Line 552: ID = break
Line 552: ;
Line 554: ID = default
Line 554: Unrecognized token: 58
Line 555: ID = ret
Line 555: =
Line 555: ID = sys_fcntl
Line 555: (
Line 555: ID = fd
Line 555: ,
Line 555: ID = cmd
Line 555: ,
Line 555: ID = arg
Line 555: )
Line 555: ;
Line 556: ID = break
Line 556: ;
Line 557: }
Line 558: return
Line 558: ID = ret
Line 558: ;
Line 559: }
Line 561: ID = asmlinkage
Line 561: ID = long
Line 561: ID = compat_sys_fcntl
Line 561: (
Line 561: ID = unsigned
Line 561: int
Line 561: ID = fd
Line 561: ,
Line 561: ID = unsigned
Line 561: int
Line 561: ID = cmd
Line 561: ,
Line 562: ID = unsigned
Line 562: ID = long
Line 562: ID = arg
Line 562: )
Line 563: {
Line 564: if
Line 564: (
Line 564: (
Line 564: ID = cmd
Line 564: ==
Line 564: ID = F_GETLK64
Line 564: )
Line 564: ||
Line 564: (
Line 564: ID = cmd
Line 564: ==
Line 564: ID = F_SETLK64
Line 564: )
Line 564: ||
Line 564: (
Line 564: ID = cmd
Line 564: ==
Line 564: ID = F_SETLKW64
Line 564: )
Line 564: )
Line 565: return
Line 565: -
Line 565: ID = EINVAL
Line 565: ;
Line 566: return
Line 566: ID = compat_sys_fcntl64
Line 566: (
Line 566: ID = fd
Line 566: ,
Line 566: ID = cmd
Line 566: ,
Line 566: ID = arg
Line 566: )
Line 566: ;
Line 567: }
Line 569: ID = asmlinkage
Line 569: ID = long
Line 570: ID = compat_sys_io_setup
Line 570: (
Line 570: ID = unsigned
Line 570: ID = nr_reqs
Line 570: ,
Line 570: ID = u32
Line 570: Unrecognized token: 95
Line 570: Unrecognized token: 95
Line 570: ID = user
Line 570: *
Line 570: ID = ctx32p
Line 570: )
Line 571: {
Line 572: ID = long
Line 572: ID = ret
Line 572: ;
Line 573: ID = aio_context_t
Line 573: ID = ctx64
Line 573: ;
Line 575: ID = mm_segment_t
Line 575: ID = oldfs
Line 575: =
Line 575: ID = get_fs
Line 575: (
Line 575: )
Line 575: ;
Line 576: if
Line 576: (
Line 576: ID = unlikely
Line 576: (
Line 576: ID = get_user
Line 576: (
Line 576: ID = ctx64
Line 576: ,
Line 576: ID = ctx32p
Line 576: )
Line 576: )
Line 576: )
Line 577: return
Line 577: -
Line 577: ID = EFAULT
Line 577: ;
Line 579: ID = set_fs
Line 579: (
Line 579: ID = KERNEL_DS
Line 579: )
Line 579: ;
Line 581: ID = ret
Line 581: =
Line 581: ID = sys_io_setup
Line 581: (
Line 581: ID = nr_reqs
Line 581: ,
Line 581: (
Line 581: ID = aio_context_t
Line 581: Unrecognized token: 95
Line 581: Unrecognized token: 95
Line 581: ID = user
Line 581: *
Line 581: )
Line 581: Unrecognized token: 38
Line 581: ID = ctx64
Line 581: )
Line 581: ;
Line 582: ID = set_fs
Line 582: (
Line 582: ID = oldfs
Line 582: )
Line 582: ;
Line 584: if
Line 584: (
Line 584: !
Line 584: ID = ret
Line 584: )
Line 585: ID = ret
Line 585: =
Line 585: ID = put_user
Line 585: (
Line 585: (
Line 585: ID = u32
Line 585: )
Line 585: ID = ctx64
Line 585: ,
Line 585: ID = ctx32p
Line 585: )
Line 585: ;
Line 586: return
Line 586: ID = ret
Line 586: ;
Line 587: }
Line 589: ID = asmlinkage
Line 589: ID = long
Line 590: ID = compat_sys_io_getevents
Line 590: (
Line 590: ID = aio_context_t
Line 590: ID = ctx_id
Line 590: ,
Line 591: ID = unsigned
Line 591: ID = long
Line 591: ID = min_nr
Line 591: ,
Line 592: ID = unsigned
Line 592: ID = long
Line 592: ID = nr
Line 592: ,
Line 593: ID = struct
Line 593: ID = io_event
Line 593: Unrecognized token: 95
Line 593: Unrecognized token: 95
Line 593: ID = user
Line 593: *
Line 593: ID = events
Line 593: ,
Line 594: ID = struct
Line 594: ID = compat_timespec
Line 594: Unrecognized token: 95
Line 594: Unrecognized token: 95
Line 594: ID = user
Line 594: *
Line 594: ID = timeout
Line 594: )
Line 595: {
Line 596: ID = long
Line 596: ID = ret
Line 596: ;
Line 597: ID = struct
Line 597: ID = timespec
Line 597: ID = t
Line 597: ;
Line 598: ID = struct
Line 598: ID = timespec
Line 598: Unrecognized token: 95
Line 598: Unrecognized token: 95
Line 598: ID = user
Line 598: *
Line 598: ID = ut
Line 598: =
Line 598: ID = NULL
Line 598: ;
Line 600: ID = ret
Line 600: =
Line 600: -
Line 600: ID = EFAULT
Line 600: ;
Line 601: if
Line 601: (
Line 601: ID = unlikely
Line 601: (
Line 601: !
Line 601: ID = access_ok
Line 601: (
Line 601: ID = VERIFY_WRITE
Line 601: ,
Line 601: ID = events
Line 601: ,
Line 602: ID = nr
Line 602: *
Line 602: ID = sizeof
Line 602: (
Line 602: ID = struct
Line 602: ID = io_event
Line 602: )
Line 602: )
Line 602: )
Line 602: )
Line 603: ID = goto
Line 603: ID = out
Line 603: ;
Line 604: if
Line 604: (
Line 604: ID = timeout
Line 604: )
Line 604: {
Line 605: if
Line 605: (
Line 605: ID = get_compat_timespec
Line 605: (
Line 605: Unrecognized token: 38
Line 605: ID = t
Line 605: ,
Line 605: ID = timeout
Line 605: )
Line 605: )
Line 606: ID = goto
Line 606: ID = out
Line 606: ;
Line 608: ID = ut
Line 608: =
Line 608: ID = compat_alloc_user_space
Line 608: (
Line 608: ID = sizeof
Line 608: (
Line 608: *
Line 608: ID = ut
Line 608: )
Line 608: )
Line 608: ;
Line 609: if
Line 609: (
Line 609: ID = copy_to_user
Line 609: (
Line 609: ID = ut
Line 609: ,
Line 609: Unrecognized token: 38
Line 609: ID = t
Line 609: ,
Line 609: ID = sizeof
Line 609: (
Line 609: ID = t
Line 609: )
Line 609: )
Line 609: )
Line 610: ID = goto
Line 610: ID = out
Line 610: ;
Line 611: }
Line 612: ID = ret
Line 612: =
Line 612: ID = sys_io_getevents
Line 612: (
Line 612: ID = ctx_id
Line 612: ,
Line 612: ID = min_nr
Line 612: ,
Line 612: ID = nr
Line 612: ,
Line 612: ID = events
Line 612: ,
Line 612: ID = ut
Line 612: )
Line 612: ;
Line 613: ID = out
Line 613: Unrecognized token: 58
Line 614: return
Line 614: ID = ret
Line 614: ;
Line 615: }
Line 617: ID = static
Line 617: ID = inline
Line 617: ID = long
Line 618: ID = copy_iocb
Line 618: (
Line 618: ID = long
Line 618: ID = nr
Line 618: ,
Line 618: ID = u32
Line 618: Unrecognized token: 95
Line 618: Unrecognized token: 95
Line 618: ID = user
Line 618: *
Line 618: ID = ptr32
Line 618: ,
Line 618: ID = struct
Line 618: ID = iocb
Line 618: Unrecognized token: 95
Line 618: Unrecognized token: 95
Line 618: ID = user
Line 618: *
Line 618: Unrecognized token: 95
Line 618: Unrecognized token: 95
Line 618: ID = user
Line 618: *
Line 618: ID = ptr64
Line 618: )
Line 619: {
Line 620: ID = compat_uptr_t
Line 620: ID = uptr
Line 620: ;
Line 621: int
Line 621: ID = i
Line 621: ;
Line 623: for
Line 623: (
Line 623: ID = i
Line 623: =
Line 623: INTCON = 0
Line 623: ;
Line 623: ID = i
Line 623: <
Line 623: ID = nr
Line 623: ;
Line 623: +
Line 623: +
Line 623: ID = i
Line 623: )
Line 623: {
Line 624: if
Line 624: (
Line 624: ID = get_user
Line 624: (
Line 624: ID = uptr
Line 624: ,
Line 624: ID = ptr32
Line 624: +
Line 624: ID = i
Line 624: )
Line 624: )
Line 625: return
Line 625: -
Line 625: ID = EFAULT
Line 625: ;
Line 626: if
Line 626: (
Line 626: ID = put_user
Line 626: (
Line 626: ID = compat_ptr
Line 626: (
Line 626: ID = uptr
Line 626: )
Line 626: ,
Line 626: ID = ptr64
Line 626: +
Line 626: ID = i
Line 626: )
Line 626: )
Line 627: return
Line 627: -
Line 627: ID = EFAULT
Line 627: ;
Line 628: }
Line 629: return
Line 629: INTCON = 0
Line 629: ;
Line 630: }
Line 632: Unrecognized token: 35
Line 632: ID = define
Line 632: ID = MAX_AIO_SUBMITS
Line 632: (
Line 632: ID = PAGE_SIZE
Line 632: /
Line 632: ID = sizeof
Line 632: (
Line 632: ID = struct
Line 632: ID = iocb
Line 632: *
Line 632: )
Line 632: )
Line 634: ID = asmlinkage
Line 634: ID = long
Line 635: ID = compat_sys_io_submit
Line 635: (
Line 635: ID = aio_context_t
Line 635: ID = ctx_id
Line 635: ,
Line 635: int
Line 635: ID = nr
Line 635: ,
Line 635: ID = u32
Line 635: Unrecognized token: 95
Line 635: Unrecognized token: 95
Line 635: ID = user
Line 635: *
Line 635: ID = iocb
Line 635: )
Line 636: {
Line 637: ID = struct
Line 637: ID = iocb
Line 637: Unrecognized token: 95
Line 637: Unrecognized token: 95
Line 637: ID = user
Line 637: *
Line 637: Unrecognized token: 95
Line 637: Unrecognized token: 95
Line 637: ID = user
Line 637: *
Line 637: ID = iocb64
Line 637: ;
Line 638: ID = long
Line 638: ID = ret
Line 638: ;
Line 640: if
Line 640: (
Line 640: ID = unlikely
Line 640: (
Line 640: ID = nr
Line 640: <
Line 640: INTCON = 0
Line 640: )
Line 640: )
Line 641: return
Line 641: -
Line 641: ID = EINVAL
Line 641: ;
Line 643: if
Line 643: (
Line 643: ID = nr
Line 643: >
Line 643: ID = MAX_AIO_SUBMITS
Line 643: )
Line 644: ID = nr
Line 644: =
Line 644: ID = MAX_AIO_SUBMITS
Line 644: ;
Line 646: ID = iocb64
Line 646: =
Line 646: ID = compat_alloc_user_space
Line 646: (
Line 646: ID = nr
Line 646: *
Line 646: ID = sizeof
Line 646: (
Line 646: *
Line 646: ID = iocb64
Line 646: )
Line 646: )
Line 646: ;
Line 647: ID = ret
Line 647: =
Line 647: ID = copy_iocb
Line 647: (
Line 647: ID = nr
Line 647: ,
Line 647: ID = iocb
Line 647: ,
Line 647: ID = iocb64
Line 647: )
Line 647: ;
Line 648: if
Line 648: (
Line 648: !
Line 648: ID = ret
Line 648: )
Line 649: ID = ret
Line 649: =
Line 649: ID = sys_io_submit
Line 649: (
Line 649: ID = ctx_id
Line 649: ,
Line 649: ID = nr
Line 649: ,
Line 649: ID = iocb64
Line 649: )
Line 649: ;
Line 650: return
Line 650: ID = ret
Line 650: ;
Line 651: }
Line 653: ID = struct
Line 653: ID = compat_ncp_mount_data
Line 653: {
Line 654: ID = compat_int_t
Line 654: ID = version
Line 654: ;
Line 655: ID = compat_uint_t
Line 655: ID = ncp_fd
Line 655: ;
Line 656: ID = compat_uid_t
Line 656: ID = mounted_uid
Line 656: ;
Line 657: ID = compat_pid_t
Line 657: ID = wdog_pid
Line 657: ;
Line 658: ID = unsigned
Line 658: char
Line 658: ID = mounted_vol
Line 658: [
Line 658: ID = NCP_VOLNAME_LEN
Line 658: +
Line 658: INTCON = 1
Line 658: ]
Line 658: ;
Line 659: ID = compat_uint_t
Line 659: ID = time_out
Line 659: ;
Line 660: ID = compat_uint_t
Line 660: ID = retry_count
Line 660: ;
Line 661: ID = compat_uint_t
Line 661: ID = flags
Line 661: ;
Line 662: ID = compat_uid_t
Line 662: ID = uid
Line 662: ;
Line 663: ID = compat_gid_t
Line 663: ID = gid
Line 663: ;
Line 664: ID = compat_mode_t
Line 664: ID = file_mode
Line 664: ;
Line 665: ID = compat_mode_t
Line 665: ID = dir_mode
Line 665: ;
Line 666: }
Line 666: ;
Line 668: ID = struct
Line 668: ID = compat_ncp_mount_data_v4
Line 668: {
Line 669: ID = compat_int_t
Line 669: ID = version
Line 669: ;
Line 670: ID = compat_ulong_t
Line 670: ID = flags
Line 670: ;
Line 671: ID = compat_ulong_t
Line 671: ID = mounted_uid
Line 671: ;
Line 672: ID = compat_long_t
Line 672: ID = wdog_pid
Line 672: ;
Line 673: ID = compat_uint_t
Line 673: ID = ncp_fd
Line 673: ;
Line 674: ID = compat_uint_t
Line 674: ID = time_out
Line 674: ;
Line 675: ID = compat_uint_t
Line 675: ID = retry_count
Line 675: ;
Line 676: ID = compat_ulong_t
Line 676: ID = uid
Line 676: ;
Line 677: ID = compat_ulong_t
Line 677: ID = gid
Line 677: ;
Line 678: ID = compat_ulong_t
Line 678: ID = file_mode
Line 678: ;
Line 679: ID = compat_ulong_t
Line 679: ID = dir_mode
Line 679: ;
Line 680: }
Line 680: ;
Line 682: ID = static
Line 682: void
Line 682: *
Line 682: ID = do_ncp_super_data_conv
Line 682: (
Line 682: void
Line 682: *
Line 682: ID = raw_data
Line 682: )
Line 683: {
Line 684: int
Line 684: ID = version
Line 684: =
Line 684: *
Line 684: (
Line 684: ID = unsigned
Line 684: int
Line 684: *
Line 684: )
Line 684: ID = raw_data
Line 684: ;
Line 686: if
Line 686: (
Line 686: ID = version
Line 686: ==
Line 686: INTCON = 3
Line 686: )
Line 686: {
Line 687: ID = struct
Line 687: ID = compat_ncp_mount_data
Line 687: *
Line 687: ID = c_n
Line 687: =
Line 687: ID = raw_data
Line 687: ;
Line 688: ID = struct
Line 688: ID = ncp_mount_data
Line 688: *
Line 688: ID = n
Line 688: =
Line 688: ID = raw_data
Line 688: ;
Line 690: ID = n
Line 690: -
Line 690: >
Line 690: ID = dir_mode
Line 690: =
Line 690: ID = c_n
Line 690: -
Line 690: >
Line 690: ID = dir_mode
Line 690: ;
Line 691: ID = n
Line 691: -
Line 691: >
Line 691: ID = file_mode
Line 691: =
Line 691: ID = c_n
Line 691: -
Line 691: >
Line 691: ID = file_mode
Line 691: ;
Line 692: ID = n
Line 692: -
Line 692: >
Line 692: ID = gid
Line 692: =
Line 692: ID = c_n
Line 692: -
Line 692: >
Line 692: ID = gid
Line 692: ;
Line 693: ID = n
Line 693: -
Line 693: >
Line 693: ID = uid
Line 693: =
Line 693: ID = c_n
Line 693: -
Line 693: >
Line 693: ID = uid
Line 693: ;
Line 694: ID = memmove
Line 694: (
Line 694: ID = n
Line 694: -
Line 694: >
Line 694: ID = mounted_vol
Line 694: ,
Line 694: ID = c_n
Line 694: -
Line 694: >
Line 694: ID = mounted_vol
Line 694: ,
Line 694: (
Line 694: ID = sizeof
Line 694: (
Line 694: ID = c_n
Line 694: -
Line 694: >
Line 694: ID = mounted_vol
Line 694: )
Line 694: +
Line 694: INTCON = 3
Line 694: *
Line 694: ID = sizeof
Line 694: (
Line 694: ID = unsigned
Line 694: int
Line 694: )
Line 694: )
Line 694: )
Line 694: ;
Line 695: ID = n
Line 695: -
Line 695: >
Line 695: ID = wdog_pid
Line 695: =
Line 695: ID = c_n
Line 695: -
Line 695: >
Line 695: ID = wdog_pid
Line 695: ;
Line 696: ID = n
Line 696: -
Line 696: >
Line 696: ID = mounted_uid
Line 696: =
Line 696: ID = c_n
Line 696: -
Line 696: >
Line 696: ID = mounted_uid
Line 696: ;
Line 697: }
Line 697: else
Line 697: if
Line 697: (
Line 697: ID = version
Line 697: ==
Line 697: INTCON = 4
Line 697: )
Line 697: {
Line 698: ID = struct
Line 698: ID = compat_ncp_mount_data_v4
Line 698: *
Line 698: ID = c_n
Line 698: =
Line 698: ID = raw_data
Line 698: ;
Line 699: ID = struct
Line 699: ID = ncp_mount_data_v4
Line 699: *
Line 699: ID = n
Line 699: =
Line 699: ID = raw_data
Line 699: ;
Line 701: ID = n
Line 701: -
Line 701: >
Line 701: ID = dir_mode
Line 701: =
Line 701: ID = c_n
Line 701: -
Line 701: >
Line 701: ID = dir_mode
Line 701: ;
Line 702: ID = n
Line 702: -
Line 702: >
Line 702: ID = file_mode
Line 702: =
Line 702: ID = c_n
Line 702: -
Line 702: >
Line 702: ID = file_mode
Line 702: ;
Line 703: ID = n
Line 703: -
Line 703: >
Line 703: ID = gid
Line 703: =
Line 703: ID = c_n
Line 703: -
Line 703: >
Line 703: ID = gid
Line 703: ;
Line 704: ID = n
Line 704: -
Line 704: >
Line 704: ID = uid
Line 704: =
Line 704: ID = c_n
Line 704: -
Line 704: >
Line 704: ID = uid
Line 704: ;
Line 705: ID = n
Line 705: -
Line 705: >
Line 705: ID = retry_count
Line 705: =
Line 705: ID = c_n
Line 705: -
Line 705: >
Line 705: ID = retry_count
Line 705: ;
Line 706: ID = n
Line 706: -
Line 706: >
Line 706: ID = time_out
Line 706: =
Line 706: ID = c_n
Line 706: -
Line 706: >
Line 706: ID = time_out
Line 706: ;
Line 707: ID = n
Line 707: -
Line 707: >
Line 707: ID = ncp_fd
Line 707: =
Line 707: ID = c_n
Line 707: -
Line 707: >
Line 707: ID = ncp_fd
Line 707: ;
Line 708: ID = n
Line 708: -
Line 708: >
Line 708: ID = wdog_pid
Line 708: =
Line 708: ID = c_n
Line 708: -
Line 708: >
Line 708: ID = wdog_pid
Line 708: ;
Line 709: ID = n
Line 709: -
Line 709: >
Line 709: ID = mounted_uid
Line 709: =
Line 709: ID = c_n
Line 709: -
Line 709: >
Line 709: ID = mounted_uid
Line 709: ;
Line 710: ID = n
Line 710: -
Line 710: >
Line 710: ID = flags
Line 710: =
Line 710: ID = c_n
Line 710: -
Line 710: >
Line 710: ID = flags
Line 710: ;
Line 711: }
Line 711: else
Line 711: if
Line 711: (
Line 711: ID = version
Line 711: !=
Line 711: INTCON = 5
Line 711: )
Line 711: {
Line 712: return
Line 712: ID = NULL
Line 712: ;
Line 713: }
Line 715: return
Line 715: ID = raw_data
Line 715: ;
Line 716: }
Line 718: ID = struct
Line 718: ID = compat_smb_mount_data
Line 718: {
Line 719: ID = compat_int_t
Line 719: ID = version
Line 719: ;
Line 720: ID = compat_uid_t
Line 720: ID = mounted_uid
Line 720: ;
Line 721: ID = compat_uid_t
Line 721: ID = uid
Line 721: ;
Line 722: ID = compat_gid_t
Line 722: ID = gid
Line 722: ;
Line 723: ID = compat_mode_t
Line 723: ID = file_mode
Line 723: ;
Line 724: ID = compat_mode_t
Line 724: ID = dir_mode
Line 724: ;
Line 725: }
Line 725: ;
Line 727: ID = static
Line 727: void
Line 727: *
Line 727: ID = do_smb_super_data_conv
Line 727: (
Line 727: void
Line 727: *
Line 727: ID = raw_data
Line 727: )
Line 728: {
Line 729: ID = struct
Line 729: ID = smb_mount_data
Line 729: *
Line 729: ID = s
Line 729: =
Line 729: ID = raw_data
Line 729: ;
Line 730: ID = struct
Line 730: ID = compat_smb_mount_data
Line 730: *
Line 730: ID = c_s
Line 730: =
Line 730: ID = raw_data
Line 730: ;
Line 732: if
Line 732: (
Line 732: ID = c_s
Line 732: -
Line 732: >
Line 732: ID = version
Line 732: !=
Line 732: ID = SMB_MOUNT_OLDVERSION
Line 732: )
Line 733: ID = goto
Line 733: ID = out
Line 733: ;
Line 734: ID = s
Line 734: -
Line 734: >
Line 734: ID = dir_mode
Line 734: =
Line 734: ID = c_s
Line 734: -
Line 734: >
Line 734: ID = dir_mode
Line 734: ;
Line 735: ID = s
Line 735: -
Line 735: >
Line 735: ID = file_mode
Line 735: =
Line 735: ID = c_s
Line 735: -
Line 735: >
Line 735: ID = file_mode
Line 735: ;
Line 736: ID = s
Line 736: -
Line 736: >
Line 736: ID = gid
Line 736: =
Line 736: ID = c_s
Line 736: -
Line 736: >
Line 736: ID = gid
Line 736: ;
Line 737: ID = s
Line 737: -
Line 737: >
Line 737: ID = uid
Line 737: =
Line 737: ID = c_s
Line 737: -
Line 737: >
Line 737: ID = uid
Line 737: ;
Line 738: ID = s
Line 738: -
Line 738: >
Line 738: ID = mounted_uid
Line 738: =
Line 738: ID = c_s
Line 738: -
Line 738: >
Line 738: ID = mounted_uid
Line 738: ;
Line 739: ID = out
Line 739: Unrecognized token: 58
Line 740: return
Line 740: ID = raw_data
Line 740: ;
Line 741: }
Line 743: extern
Line 743: int
Line 743: ID = copy_mount_options
Line 743: (
Line 743: ID = const
Line 743: void
Line 743: Unrecognized token: 95
Line 743: Unrecognized token: 95
Line 743: ID = user
Line 743: *
Line 743: ,
Line 743: ID = unsigned
Line 743: ID = long
Line 743: *
Line 743: )
Line 743: ;
Line 745: Unrecognized token: 35
Line 745: ID = define
Line 745: ID = SMBFS_NAME
Line 745: STRINGCON = "smbfs"
Line 746: Unrecognized token: 35
Line 746: ID = define
Line 746: ID = NCPFS_NAME
Line 746: STRINGCON = "ncpfs"
Line 748: ID = asmlinkage
Line 748: ID = long
Line 748: ID = compat_sys_mount
Line 748: (
Line 748: char
Line 748: Unrecognized token: 95
Line 748: Unrecognized token: 95
Line 748: ID = user
Line 748: *
Line 748: ID = dev_name
Line 748: ,
Line 748: char
Line 748: Unrecognized token: 95
Line 748: Unrecognized token: 95
Line 748: ID = user
Line 748: *
Line 748: ID = dir_name
Line 748: ,
Line 749: char
Line 749: Unrecognized token: 95
Line 749: Unrecognized token: 95
Line 749: ID = user
Line 749: *
Line 749: ID = type
Line 749: ,
Line 749: ID = unsigned
Line 749: ID = long
Line 749: ID = flags
Line 749: ,
Line 750: void
Line 750: Unrecognized token: 95
Line 750: Unrecognized token: 95
Line 750: ID = user
Line 750: *
Line 750: ID = data
Line 750: )
Line 751: {
Line 752: ID = unsigned
Line 752: ID = long
Line 752: ID = type_page
Line 752: ;
Line 753: ID = unsigned
Line 753: ID = long
Line 753: ID = data_page
Line 753: ;
Line 754: ID = unsigned
Line 754: ID = long
Line 754: ID = dev_page
Line 754: ;
Line 755: char
Line 755: *
Line 755: ID = dir_page
Line 755: ;
Line 756: int
Line 756: ID = retval
Line 756: ;
Line 758: ID = retval
Line 758: =
Line 758: ID = copy_mount_options
Line 758: (
Line 758: ID = type
Line 758: ,
Line 758: Unrecognized token: 38
Line 758: ID = type_page
Line 758: )
Line 758: ;
Line 759: if
Line 759: (
Line 759: ID = retval
Line 759: <
Line 759: INTCON = 0
Line 759: )
Line 760: ID = goto
Line 760: ID = out
Line 760: ;
Line 762: ID = dir_page
Line 762: =
Line 762: ID = getname
Line 762: (
Line 762: ID = dir_name
Line 762: )
Line 762: ;
Line 763: ID = retval
Line 763: =
Line 763: ID = PTR_ERR
Line 763: (
Line 763: ID = dir_page
Line 763: )
Line 763: ;
Line 764: if
Line 764: (
Line 764: ID = IS_ERR
Line 764: (
Line 764: ID = dir_page
Line 764: )
Line 764: )
Line 765: ID = goto
Line 765: ID = out1
Line 765: ;
Line 767: ID = retval
Line 767: =
Line 767: ID = copy_mount_options
Line 767: (
Line 767: ID = dev_name
Line 767: ,
Line 767: Unrecognized token: 38
Line 767: ID = dev_page
Line 767: )
Line 767: ;
Line 768: if
Line 768: (
Line 768: ID = retval
Line 768: <
Line 768: INTCON = 0
Line 768: )
Line 769: ID = goto
Line 769: ID = out2
Line 769: ;
Line 771: ID = retval
Line 771: =
Line 771: ID = copy_mount_options
Line 771: (
Line 771: ID = data
Line 771: ,
Line 771: Unrecognized token: 38
Line 771: ID = data_page
Line 771: )
Line 771: ;
Line 772: if
Line 772: (
Line 772: ID = retval
Line 772: <
Line 772: INTCON = 0
Line 772: )
Line 773: ID = goto
Line 773: ID = out3
Line 773: ;
Line 775: ID = retval
Line 775: =
Line 775: -
Line 775: ID = EINVAL
Line 775: ;
Line 777: if
Line 777: (
Line 777: ID = type_page
Line 777: )
Line 777: {
Line 778: if
Line 778: (
Line 778: !
Line 778: ID = strcmp
Line 778: (
Line 778: (
Line 778: char
Line 778: *
Line 778: )
Line 778: ID = type_page
Line 778: ,
Line 778: ID = SMBFS_NAME
Line 778: )
Line 778: )
Line 778: {
Line 779: ID = do_smb_super_data_conv
Line 779: (
Line 779: (
Line 779: void
Line 779: *
Line 779: )
Line 779: ID = data_page
Line 779: )
Line 779: ;
Line 780: }
Line 780: else
Line 780: if
Line 780: (
Line 780: !
Line 780: ID = strcmp
Line 780: (
Line 780: (
Line 780: char
Line 780: *
Line 780: )
Line 780: ID = type_page
Line 780: ,
Line 780: ID = NCPFS_NAME
Line 780: )
Line 780: )
Line 780: {
Line 781: ID = do_ncp_super_data_conv
Line 781: (
Line 781: (
Line 781: void
Line 781: *
Line 781: )
Line 781: ID = data_page
Line 781: )
Line 781: ;
Line 782: }
Line 783: }
Line 785: ID = lock_kernel
Line 785: (
Line 785: )
Line 785: ;
Line 786: ID = retval
Line 786: =
Line 786: ID = do_mount
Line 786: (
Line 786: (
Line 786: char
Line 786: *
Line 786: )
Line 786: ID = dev_page
Line 786: ,
Line 786: ID = dir_page
Line 786: ,
Line 786: (
Line 786: char
Line 786: *
Line 786: )
Line 786: ID = type_page
Line 786: ,
Line 787: ID = flags
Line 787: ,
Line 787: (
Line 787: void
Line 787: *
Line 787: )
Line 787: ID = data_page
Line 787: )
Line 787: ;
Line 788: ID = unlock_kernel
Line 788: (
Line 788: )
Line 788: ;
Line 790: ID = free_page
Line 790: (
Line 790: ID = data_page
Line 790: )
Line 790: ;
Line 791: ID = out3
Line 791: Unrecognized token: 58
Line 792: ID = free_page
Line 792: (
Line 792: ID = dev_page
Line 792: )
Line 792: ;
Line 793: ID = out2
Line 793: Unrecognized token: 58
Line 794: ID = putname
Line 794: (
Line 794: ID = dir_page
Line 794: )
Line 794: ;
Line 795: ID = out1
Line 795: Unrecognized token: 58
Line 796: ID = free_page
Line 796: (
Line 796: ID = type_page
Line 796: )
Line 796: ;
Line 797: ID = out
Line 797: Unrecognized token: 58
Line 798: return
Line 798: ID = retval
Line 798: ;
Line 799: }
Line 801: Unrecognized token: 35
Line 801: ID = define
Line 801: ID = NAME_OFFSET
Line 801: (
Line 801: ID = de
Line 801: )
Line 801: (
Line 801: (
Line 801: int
Line 801: )
Line 801: (
Line 801: (
Line 801: ID = de
Line 801: )
Line 801: -
Line 801: >
Line 801: ID = d_name
Line 801: -
Line 801: (
Line 801: char
Line 801: Unrecognized token: 95
Line 801: Unrecognized token: 95
Line 801: ID = user
Line 801: *
Line 801: )
Line 801: (
Line 801: ID = de
Line 801: )
Line 801: )
Line 801: )
Line 802: Unrecognized token: 35
Line 802: ID = define
Line 802: ID = COMPAT_ROUND_UP
Line 802: (
Line 802: ID = x
Line 802: )
Line 802: (
Line 802: (
Line 802: (
Line 802: ID = x
Line 802: )
Line 802: +
Line 802: ID = sizeof
Line 802: (
Line 802: ID = compat_long_t
Line 802: )
Line 802: -
Line 802: INTCON = 1
Line 802: )
Line 802: Unrecognized token: 38
Line 802: Unrecognized token: 92
Line 803: Unrecognized token: 126
Line 803: (
Line 803: ID = sizeof
Line 803: (
Line 803: ID = compat_long_t
Line 803: )
Line 803: -
Line 803: INTCON = 1
Line 803: )
Line 803: )
Line 805: ID = struct
Line 805: ID = compat_old_linux_dirent
Line 805: {
Line 806: ID = compat_ulong_t
Line 806: ID = d_ino
Line 806: ;
Line 807: ID = compat_ulong_t
Line 807: ID = d_offset
Line 807: ;
Line 808: ID = unsigned
Line 808: ID = short
Line 808: ID = d_namlen
Line 808: ;
Line 809: char
Line 809: ID = d_name
Line 809: [
Line 809: INTCON = 1
Line 809: ]
Line 809: ;
Line 810: }
Line 810: ;
Line 812: ID = struct
Line 812: ID = compat_readdir_callback
Line 812: {
Line 813: ID = struct
Line 813: ID = compat_old_linux_dirent
Line 813: Unrecognized token: 95
Line 813: Unrecognized token: 95
Line 813: ID = user
Line 813: *
Line 813: ID = dirent
Line 813: ;
Line 814: int
Line 814: ID = result
Line 814: ;
Line 815: }
Line 815: ;
Line 817: ID = static
Line 817: int
Line 817: ID = compat_fillonedir
Line 817: (
Line 817: void
Line 817: *
Line 817: Unrecognized token: 95
Line 817: Unrecognized token: 95
Line 817: ID = buf
Line 817: ,
Line 817: ID = const
Line 817: char
Line 817: *
Line 817: ID = name
Line 817: ,
Line 817: int
Line 817: ID = namlen
Line 817: ,
Line 818: ID = loff_t
Line 818: ID = offset
Line 818: ,
Line 818: ID = ino_t
Line 818: ID = ino
Line 818: ,
Line 818: ID = unsigned
Line 818: int
Line 818: ID = d_type
Line 818: )
Line 819: {
Line 820: ID = struct
Line 820: ID = compat_readdir_callback
Line 820: *
Line 820: ID = buf
Line 820: =
Line 820: Unrecognized token: 95
Line 820: Unrecognized token: 95
Line 820: ID = buf
Line 820: ;
Line 821: ID = struct
Line 821: ID = compat_old_linux_dirent
Line 821: Unrecognized token: 95
Line 821: Unrecognized token: 95
Line 821: ID = user
Line 821: *
Line 821: ID = dirent
Line 821: ;
Line 823: if
Line 823: (
Line 823: ID = buf
Line 823: -
Line 823: >
Line 823: ID = result
Line 823: )
Line 824: return
Line 824: -
Line 824: ID = EINVAL
Line 824: ;
Line 825: ID = buf
Line 825: -
Line 825: >
Line 825: ID = result
Line 825: +
Line 825: +
Line 825: ;
Line 826: ID = dirent
Line 826: =
Line 826: ID = buf
Line 826: -
Line 826: >
Line 826: ID = dirent
Line 826: ;
Line 827: if
Line 827: (
Line 827: !
Line 827: ID = access_ok
Line 827: (
Line 827: ID = VERIFY_WRITE
Line 827: ,
Line 827: ID = dirent
Line 827: ,
Line 828: (
Line 828: ID = unsigned
Line 828: ID = long
Line 828: )
Line 828: (
Line 828: ID = dirent
Line 828: -
Line 828: >
Line 828: ID = d_name
Line 828: +
Line 828: ID = namlen
Line 828: +
Line 828: INTCON = 1
Line 828: )
Line 828: -
Line 829: (
Line 829: ID = unsigned
Line 829: ID = long
Line 829: )
Line 829: ID = dirent
Line 829: )
Line 829: )
Line 830: ID = goto
Line 830: ID = efault
Line 830: ;
Line 831: if
Line 831: (
Line 831: Unrecognized token: 95
Line 831: Unrecognized token: 95
Line 831: ID = put_user
Line 831: (
Line 831: ID = ino
Line 831: ,
Line 831: Unrecognized token: 38
Line 831: ID = dirent
Line 831: -
Line 831: >
Line 831: ID = d_ino
Line 831: )
Line 831: ||
Line 832: Unrecognized token: 95
Line 832: Unrecognized token: 95
Line 832: ID = put_user
Line 832: (
Line 832: ID = offset
Line 832: ,
Line 832: Unrecognized token: 38
Line 832: ID = dirent
Line 832: -
Line 832: >
Line 832: ID = d_offset
Line 832: )
Line 832: ||
Line 833: Unrecognized token: 95
Line 833: Unrecognized token: 95
Line 833: ID = put_user
Line 833: (
Line 833: ID = namlen
Line 833: ,
Line 833: Unrecognized token: 38
Line 833: ID = dirent
Line 833: -
Line 833: >
Line 833: ID = d_namlen
Line 833: )
Line 833: ||
Line 834: Unrecognized token: 95
Line 834: Unrecognized token: 95
Line 834: ID = copy_to_user
Line 834: (
Line 834: ID = dirent
Line 834: -
Line 834: >
Line 834: ID = d_name
Line 834: ,
Line 834: ID = name
Line 834: ,
Line 834: ID = namlen
Line 834: )
Line 834: ||
Line 835: Unrecognized token: 95
Line 835: Unrecognized token: 95
Line 835: ID = put_user
Line 835: (
Line 835: INTCON = 0
Line 835: ,
Line 835: ID = dirent
Line 835: -
Line 835: >
Line 835: ID = d_name
Line 835: +
Line 835: ID = namlen
Line 835: )
Line 835: )
Line 836: ID = goto
Line 836: ID = efault
Line 836: ;
Line 837: return
Line 837: INTCON = 0
Line 837: ;
Line 838: ID = efault
Line 838: Unrecognized token: 58
Line 839: ID = buf
Line 839: -
Line 839: >
Line 839: ID = result
Line 839: =
Line 839: -
Line 839: ID = EFAULT
Line 839: ;
Line 840: return
Line 840: -
Line 840: ID = EFAULT
Line 840: ;
Line 841: }
Line 843: ID = asmlinkage
Line 843: ID = long
Line 843: ID = compat_old_readdir
Line 843: (
Line 843: ID = unsigned
Line 843: int
Line 843: ID = fd
Line 843: ,
Line 844: ID = struct
Line 844: ID = compat_old_linux_dirent
Line 844: Unrecognized token: 95
Line 844: Unrecognized token: 95
Line 844: ID = user
Line 844: *
Line 844: ID = dirent
Line 844: ,
Line 844: ID = unsigned
Line 844: int
Line 844: ID = count
Line 844: )
Line 845: {
Line 846: int
Line 846: ID = error
Line 846: ;
Line 847: ID = struct
Line 847: ID = file
Line 847: *
Line 847: ID = file
Line 847: ;
Line 848: ID = struct
Line 848: ID = compat_readdir_callback
Line 848: ID = buf
Line 848: ;
Line 850: ID = error
Line 850: =
Line 850: -
Line 850: ID = EBADF
Line 850: ;
Line 851: ID = file
Line 851: =
Line 851: ID = fget
Line 851: (
Line 851: ID = fd
Line 851: )
Line 851: ;
Line 852: if
Line 852: (
Line 852: !
Line 852: ID = file
Line 852: )
Line 853: ID = goto
Line 853: ID = out
Line 853: ;
Line 855: ID = buf
Line 855: Unrecognized token: 46
Line 855: ID = result
Line 855: =
Line 855: INTCON = 0
Line 855: ;
Line 856: ID = buf
Line 856: Unrecognized token: 46
Line 856: ID = dirent
Line 856: =
Line 856: ID = dirent
Line 856: ;
Line 858: ID = error
Line 858: =
Line 858: ID = vfs_readdir
Line 858: (
Line 858: ID = file
Line 858: ,
Line 858: ID = compat_fillonedir
Line 858: ,
Line 858: Unrecognized token: 38
Line 858: ID = buf
Line 858: )
Line 858: ;
Line 859: if
Line 859: (
Line 859: ID = error
Line 859: >=
Line 859: INTCON = 0
Line 859: )
Line 860: ID = error
Line 860: =
Line 860: ID = buf
Line 860: Unrecognized token: 46
Line 860: ID = result
Line 860: ;
Line 862: ID = fput
Line 862: (
Line 862: ID = file
Line 862: )
Line 862: ;
Line 863: ID = out
Line 863: Unrecognized token: 58
Line 864: return
Line 864: ID = error
Line 864: ;
Line 865: }
Line 867: ID = struct
Line 867: ID = compat_linux_dirent
Line 867: {
Line 868: ID = compat_ulong_t
Line 868: ID = d_ino
Line 868: ;
Line 869: ID = compat_ulong_t
Line 869: ID = d_off
Line 869: ;
Line 870: ID = unsigned
Line 870: ID = short
Line 870: ID = d_reclen
Line 870: ;
Line 871: char
Line 871: ID = d_name
Line 871: [
Line 871: INTCON = 1
Line 871: ]
Line 871: ;
Line 872: }
Line 872: ;
Line 874: ID = struct
Line 874: ID = compat_getdents_callback
Line 874: {
Line 875: ID = struct
Line 875: ID = compat_linux_dirent
Line 875: Unrecognized token: 95
Line 875: Unrecognized token: 95
Line 875: ID = user
Line 875: *
Line 875: ID = current_dir
Line 875: ;
Line 876: ID = struct
Line 876: ID = compat_linux_dirent
Line 876: Unrecognized token: 95
Line 876: Unrecognized token: 95
Line 876: ID = user
Line 876: *
Line 876: ID = previous
Line 876: ;
Line 877: int
Line 877: ID = count
Line 877: ;
Line 878: int
Line 878: ID = error
Line 878: ;
Line 879: }
Line 879: ;
Line 881: ID = static
Line 881: int
Line 881: ID = compat_filldir
Line 881: (
Line 881: void
Line 881: *
Line 881: Unrecognized token: 95
Line 881: Unrecognized token: 95
Line 881: ID = buf
Line 881: ,
Line 881: ID = const
Line 881: char
Line 881: *
Line 881: ID = name
Line 881: ,
Line 881: int
Line 881: ID = namlen
Line 881: ,
Line 882: ID = loff_t
Line 882: ID = offset
Line 882: ,
Line 882: ID = ino_t
Line 882: ID = ino
Line 882: ,
Line 882: ID = unsigned
Line 882: int
Line 882: ID = d_type
Line 882: )
Line 883: {
Line 884: ID = struct
Line 884: ID = compat_linux_dirent
Line 884: Unrecognized token: 95
Line 884: Unrecognized token: 95
Line 884: ID = user
Line 884: *
Line 884: ID = dirent
Line 884: ;
Line 885: ID = struct
Line 885: ID = compat_getdents_callback
Line 885: *
Line 885: ID = buf
Line 885: =
Line 885: Unrecognized token: 95
Line 885: Unrecognized token: 95
Line 885: ID = buf
Line 885: ;
Line 886: int
Line 886: ID = reclen
Line 886: =
Line 886: ID = COMPAT_ROUND_UP
Line 886: (
Line 886: ID = NAME_OFFSET
Line 886: (
Line 886: ID = dirent
Line 886: )
Line 886: +
Line 886: ID = namlen
Line 886: +
Line 886: INTCON = 2
Line 886: )
Line 886: ;
Line 888: ID = buf
Line 888: -
Line 888: >
Line 888: ID = error
Line 888: =
Line 888: -
Line 888: ID = EINVAL
Line 888: ;
Line 889: if
Line 889: (
Line 889: ID = reclen
Line 889: >
Line 889: ID = buf
Line 889: -
Line 889: >
Line 889: ID = count
Line 889: )
Line 890: return
Line 890: -
Line 890: ID = EINVAL
Line 890: ;
Line 891: ID = dirent
Line 891: =
Line 891: ID = buf
Line 891: -
Line 891: >
Line 891: ID = previous
Line 891: ;
Line 892: if
Line 892: (
Line 892: ID = dirent
Line 892: )
Line 892: {
Line 893: if
Line 893: (
Line 893: Unrecognized token: 95
Line 893: Unrecognized token: 95
Line 893: ID = put_user
Line 893: (
Line 893: ID = offset
Line 893: ,
Line 893: Unrecognized token: 38
Line 893: ID = dirent
Line 893: -
Line 893: >
Line 893: ID = d_off
Line 893: )
Line 893: )
Line 894: ID = goto
Line 894: ID = efault
Line 894: ;
Line 895: }
Line 896: ID = dirent
Line 896: =
Line 896: ID = buf
Line 896: -
Line 896: >
Line 896: ID = current_dir
Line 896: ;
Line 897: if
Line 897: (
Line 897: Unrecognized token: 95
Line 897: Unrecognized token: 95
Line 897: ID = put_user
Line 897: (
Line 897: ID = ino
Line 897: ,
Line 897: Unrecognized token: 38
Line 897: ID = dirent
Line 897: -
Line 897: >
Line 897: ID = d_ino
Line 897: )
Line 897: )
Line 898: ID = goto
Line 898: ID = efault
Line 898: ;
Line 899: if
Line 899: (
Line 899: Unrecognized token: 95
Line 899: Unrecognized token: 95
Line 899: ID = put_user
Line 899: (
Line 899: ID = reclen
Line 899: ,
Line 899: Unrecognized token: 38
Line 899: ID = dirent
Line 899: -
Line 899: >
Line 899: ID = d_reclen
Line 899: )
Line 899: )
Line 900: ID = goto
Line 900: ID = efault
Line 900: ;
Line 901: if
Line 901: (
Line 901: ID = copy_to_user
Line 901: (
Line 901: ID = dirent
Line 901: -
Line 901: >
Line 901: ID = d_name
Line 901: ,
Line 901: ID = name
Line 901: ,
Line 901: ID = namlen
Line 901: )
Line 901: )
Line 902: ID = goto
Line 902: ID = efault
Line 902: ;
Line 903: if
Line 903: (
Line 903: Unrecognized token: 95
Line 903: Unrecognized token: 95
Line 903: ID = put_user
Line 903: (
Line 903: INTCON = 0
Line 903: ,
Line 903: ID = dirent
Line 903: -
Line 903: >
Line 903: ID = d_name
Line 903: +
Line 903: ID = namlen
Line 903: )
Line 903: )
Line 904: ID = goto
Line 904: ID = efault
Line 904: ;
Line 905: if
Line 905: (
Line 905: Unrecognized token: 95
Line 905: Unrecognized token: 95
Line 905: ID = put_user
Line 905: (
Line 905: ID = d_type
Line 905: ,
Line 905: (
Line 905: char
Line 905: Unrecognized token: 95
Line 905: Unrecognized token: 95
Line 905: ID = user
Line 905: *
Line 905: )
Line 905: ID = dirent
Line 905: +
Line 905: ID = reclen
Line 905: -
Line 905: INTCON = 1
Line 905: )
Line 905: )
Line 906: ID = goto
Line 906: ID = efault
Line 906: ;
Line 907: ID = buf
Line 907: -
Line 907: >
Line 907: ID = previous
Line 907: =
Line 907: ID = dirent
Line 907: ;
Line 908: ID = dirent
Line 908: =
Line 908: (
Line 908: void
Line 908: Unrecognized token: 95
Line 908: Unrecognized token: 95
Line 908: ID = user
Line 908: *
Line 908: )
Line 908: ID = dirent
Line 908: +
Line 908: ID = reclen
Line 908: ;
Line 909: ID = buf
Line 909: -
Line 909: >
Line 909: ID = current_dir
Line 909: =
Line 909: ID = dirent
Line 909: ;
Line 910: ID = buf
Line 910: -
Line 910: >
Line 910: ID = count
Line 910: -
Line 910: =
Line 910: ID = reclen
Line 910: ;
Line 911: return
Line 911: INTCON = 0
Line 911: ;
Line 912: ID = efault
Line 912: Unrecognized token: 58
Line 913: ID = buf
Line 913: -
Line 913: >
Line 913: ID = error
Line 913: =
Line 913: -
Line 913: ID = EFAULT
Line 913: ;
Line 914: return
Line 914: -
Line 914: ID = EFAULT
Line 914: ;
Line 915: }
Line 917: ID = asmlinkage
Line 917: ID = long
Line 917: ID = compat_sys_getdents
Line 917: (
Line 917: ID = unsigned
Line 917: int
Line 917: ID = fd
Line 917: ,
Line 918: ID = struct
Line 918: ID = compat_linux_dirent
Line 918: Unrecognized token: 95
Line 918: Unrecognized token: 95
Line 918: ID = user
Line 918: *
Line 918: ID = dirent
Line 918: ,
Line 918: ID = unsigned
Line 918: int
Line 918: ID = count
Line 918: )
Line 919: {
Line 920: ID = struct
Line 920: ID = file
Line 920: *
Line 920: ID = file
Line 920: ;
Line 921: ID = struct
Line 921: ID = compat_linux_dirent
Line 921: Unrecognized token: 95
Line 921: Unrecognized token: 95
Line 921: ID = user
Line 921: *
Line 921: ID = lastdirent
Line 921: ;
Line 922: ID = struct
Line 922: ID = compat_getdents_callback
Line 922: ID = buf
Line 922: ;
Line 923: int
Line 923: ID = error
Line 923: ;
Line 925: ID = error
Line 925: =
Line 925: -
Line 925: ID = EFAULT
Line 925: ;
Line 926: if
Line 926: (
Line 926: !
Line 926: ID = access_ok
Line 926: (
Line 926: ID = VERIFY_WRITE
Line 926: ,
Line 926: ID = dirent
Line 926: ,
Line 926: ID = count
Line 926: )
Line 926: )
Line 927: ID = goto
Line 927: ID = out
Line 927: ;
Line 929: ID = error
Line 929: =
Line 929: -
Line 929: ID = EBADF
Line 929: ;
Line 930: ID = file
Line 930: =
Line 930: ID = fget
Line 930: (
Line 930: ID = fd
Line 930: )
Line 930: ;
Line 931: if
Line 931: (
Line 931: !
Line 931: ID = file
Line 931: )
Line 932: ID = goto
Line 932: ID = out
Line 932: ;
Line 934: ID = buf
Line 934: Unrecognized token: 46
Line 934: ID = current_dir
Line 934: =
Line 934: ID = dirent
Line 934: ;
Line 935: ID = buf
Line 935: Unrecognized token: 46
Line 935: ID = previous
Line 935: =
Line 935: ID = NULL
Line 935: ;
Line 936: ID = buf
Line 936: Unrecognized token: 46
Line 936: ID = count
Line 936: =
Line 936: ID = count
Line 936: ;
Line 937: ID = buf
Line 937: Unrecognized token: 46
Line 937: ID = error
Line 937: =
Line 937: INTCON = 0
Line 937: ;
Line 939: ID = error
Line 939: =
Line 939: ID = vfs_readdir
Line 939: (
Line 939: ID = file
Line 939: ,
Line 939: ID = compat_filldir
Line 939: ,
Line 939: Unrecognized token: 38
Line 939: ID = buf
Line 939: )
Line 939: ;
Line 940: if
Line 940: (
Line 940: ID = error
Line 940: <
Line 940: INTCON = 0
Line 940: )
Line 941: ID = goto
Line 941: ID = out_putf
Line 941: ;
Line 942: ID = error
Line 942: =
Line 942: ID = buf
Line 942: Unrecognized token: 46
Line 942: ID = error
Line 942: ;
Line 943: ID = lastdirent
Line 943: =
Line 943: ID = buf
Line 943: Unrecognized token: 46
Line 943: ID = previous
Line 943: ;
Line 944: if
Line 944: (
Line 944: ID = lastdirent
Line 944: )
Line 944: {
Line 945: if
Line 945: (
Line 945: ID = put_user
Line 945: (
Line 945: ID = file
Line 945: -
Line 945: >
Line 945: ID = f_pos
Line 945: ,
Line 945: Unrecognized token: 38
Line 945: ID = lastdirent
Line 945: -
Line 945: >
Line 945: ID = d_off
Line 945: )
Line 945: )
Line 946: ID = error
Line 946: =
Line 946: -
Line 946: ID = EFAULT
Line 946: ;
Line 947: else
Line 948: ID = error
Line 948: =
Line 948: ID = count
Line 948: -
Line 948: ID = buf
Line 948: Unrecognized token: 46
Line 948: ID = count
Line 948: ;
Line 949: }
Line 951: ID = out_putf
Line 951: Unrecognized token: 58
Line 952: ID = fput
Line 952: (
Line 952: ID = file
Line 952: )
Line 952: ;
Line 953: ID = out
Line 953: Unrecognized token: 58
Line 954: return
Line 954: ID = error
Line 954: ;
Line 955: }
Line 957: Unrecognized token: 35
Line 957: ID = ifndef
Line 957: Unrecognized token: 95
Line 957: Unrecognized token: 95
Line 957: ID = ARCH_OMIT_COMPAT_SYS_GETDENTS64
Line 958: Unrecognized token: 35
Line 958: ID = define
Line 958: ID = COMPAT_ROUND_UP64
Line 958: (
Line 958: ID = x
Line 958: )
Line 958: (
Line 958: (
Line 958: (
Line 958: ID = x
Line 958: )
Line 958: +
Line 958: ID = sizeof
Line 958: (
Line 958: ID = u64
Line 958: )
Line 958: -
Line 958: INTCON = 1
Line 958: )
Line 958: Unrecognized token: 38
Line 958: Unrecognized token: 126
Line 958: (
Line 958: ID = sizeof
Line 958: (
Line 958: ID = u64
Line 958: )
Line 958: -
Line 958: INTCON = 1
Line 958: )
Line 958: )
Line 960: ID = struct
Line 960: ID = compat_getdents_callback64
Line 960: {
Line 961: ID = struct
Line 961: ID = linux_dirent64
Line 961: Unrecognized token: 95
Line 961: Unrecognized token: 95
Line 961: ID = user
Line 961: *
Line 961: ID = current_dir
Line 961: ;
Line 962: ID = struct
Line 962: ID = linux_dirent64
Line 962: Unrecognized token: 95
Line 962: Unrecognized token: 95
Line 962: ID = user
Line 962: *
Line 962: ID = previous
Line 962: ;
Line 963: int
Line 963: ID = count
Line 963: ;
Line 964: int
Line 964: ID = error
Line 964: ;
Line 965: }
Line 965: ;
Line 967: ID = static
Line 967: int
Line 967: ID = compat_filldir64
Line 967: (
Line 967: void
Line 967: *
Line 967: Unrecognized token: 95
Line 967: Unrecognized token: 95
Line 967: ID = buf
Line 967: ,
Line 967: ID = const
Line 967: char
Line 967: *
Line 967: ID = name
Line 967: ,
Line 967: int
Line 967: ID = namlen
Line 967: ,
Line 967: ID = loff_t
Line 967: ID = offset
Line 967: ,
Line 968: ID = ino_t
Line 968: ID = ino
Line 968: ,
Line 968: ID = unsigned
Line 968: int
Line 968: ID = d_type
Line 968: )
Line 969: {
Line 970: ID = struct
Line 970: ID = linux_dirent64
Line 970: Unrecognized token: 95
Line 970: Unrecognized token: 95
Line 970: ID = user
Line 970: *
Line 970: ID = dirent
Line 970: ;
Line 971: ID = struct
Line 971: ID = compat_getdents_callback64
Line 971: *
Line 971: ID = buf
Line 971: =
Line 971: Unrecognized token: 95
Line 971: Unrecognized token: 95
Line 971: ID = buf
Line 971: ;
Line 972: int
Line 972: ID = jj
Line 972: =
Line 972: ID = NAME_OFFSET
Line 972: (
Line 972: ID = dirent
Line 972: )
Line 972: ;
Line 973: int
Line 973: ID = reclen
Line 973: =
Line 973: ID = COMPAT_ROUND_UP64
Line 973: (
Line 973: ID = jj
Line 973: +
Line 973: ID = namlen
Line 973: +
Line 973: INTCON = 1
Line 973: )
Line 973: ;
Line 974: ID = u64
Line 974: ID = off
Line 974: ;
Line 976: ID = buf
Line 976: -
Line 976: >
Line 976: ID = error
Line 976: =
Line 976: -
Line 976: ID = EINVAL
Line 976: ;
Line 977: if
Line 977: (
Line 977: ID = reclen
Line 977: >
Line 977: ID = buf
Line 977: -
Line 977: >
Line 977: ID = count
Line 977: )
Line 978: return
Line 978: -
Line 978: ID = EINVAL
Line 978: ;
Line 979: ID = dirent
Line 979: =
Line 979: ID = buf
Line 979: -
Line 979: >
Line 979: ID = previous
Line 979: ;
Line 981: if
Line 981: (
Line 981: ID = dirent
Line 981: )
Line 981: {
Line 982: if
Line 982: (
Line 982: Unrecognized token: 95
Line 982: Unrecognized token: 95
Line 982: ID = put_user
Line 982: (
Line 982: ID = offset
Line 982: ,
Line 982: (
Line 982: ID = u32
Line 982: Unrecognized token: 95
Line 982: Unrecognized token: 95
Line 982: ID = user
Line 982: *
Line 982: )
Line 982: Unrecognized token: 38
Line 982: ID = dirent
Line 982: -
Line 982: >
Line 982: ID = d_off
Line 982: )
Line 982: )
Line 983: ID = goto
Line 983: ID = efault
Line 983: ;
Line 984: if
Line 984: (
Line 984: Unrecognized token: 95
Line 984: Unrecognized token: 95
Line 984: ID = put_user
Line 984: (
Line 984: ID = offset
Line 984: >
Line 984: >
Line 984: INTCON = 32
Line 984: ,
Line 985: (
Line 985: (
Line 985: ID = u32
Line 985: Unrecognized token: 95
Line 985: Unrecognized token: 95
Line 985: ID = user
Line 985: *
Line 985: )
Line 985: Unrecognized token: 38
Line 985: ID = dirent
Line 985: -
Line 985: >
Line 985: ID = d_off
Line 985: )
Line 985: +
Line 985: INTCON = 1
Line 985: )
Line 985: )
Line 986: ID = goto
Line 986: ID = efault
Line 986: ;
Line 987: }
Line 988: ID = dirent
Line 988: =
Line 988: ID = buf
Line 988: -
Line 988: >
Line 988: ID = current_dir
Line 988: ;
Line 989: if
Line 989: (
Line 989: (
Line 989: Unrecognized token: 95
Line 989: Unrecognized token: 95
Line 989: ID = put_user
Line 989: (
Line 989: ID = ino
Line 989: ,
Line 989: (
Line 989: ID = u32
Line 989: Unrecognized token: 95
Line 989: Unrecognized token: 95
Line 989: ID = user
Line 989: *
Line 989: )
Line 989: Unrecognized token: 38
Line 989: ID = dirent
Line 989: -
Line 989: >
Line 989: ID = d_ino
Line 989: )
Line 989: )
Line 990: ||
Line 990: (
Line 990: Unrecognized token: 95
Line 990: Unrecognized token: 95
Line 990: ID = put_user
Line 990: (
Line 990: ID = ino
Line 990: >
Line 990: >
Line 990: INTCON = 32
Line 990: ,
Line 990: (
Line 990: (
Line 990: ID = u32
Line 990: Unrecognized token: 95
Line 990: Unrecognized token: 95
Line 990: ID = user
Line 990: *
Line 990: )
Line 990: Unrecognized token: 38
Line 990: ID = dirent
Line 990: -
Line 990: >
Line 990: ID = d_ino
Line 990: )
Line 990: +
Line 990: INTCON = 1
Line 990: )
Line 990: )
Line 990: )
Line 991: ID = goto
Line 991: ID = efault
Line 991: ;
Line 992: ID = off
Line 992: =
Line 992: INTCON = 0
Line 992: ;
Line 993: if
Line 993: (
Line 993: (
Line 993: Unrecognized token: 95
Line 993: Unrecognized token: 95
Line 993: ID = put_user
Line 993: (
Line 993: ID = off
Line 993: ,
Line 993: (
Line 993: ID = u32
Line 993: Unrecognized token: 95
Line 993: Unrecognized token: 95
Line 993: ID = user
Line 993: *
Line 993: )
Line 993: Unrecognized token: 38
Line 993: ID = dirent
Line 993: -
Line 993: >
Line 993: ID = d_off
Line 993: )
Line 993: )
Line 994: ||
Line 994: (
Line 994: Unrecognized token: 95
Line 994: Unrecognized token: 95
Line 994: ID = put_user
Line 994: (
Line 994: ID = off
Line 994: >
Line 994: >
Line 994: INTCON = 32
Line 994: ,
Line 994: (
Line 994: (
Line 994: ID = u32
Line 994: Unrecognized token: 95
Line 994: Unrecognized token: 95
Line 994: ID = user
Line 994: *
Line 994: )
Line 994: Unrecognized token: 38
Line 994: ID = dirent
Line 994: -
Line 994: >
Line 994: ID = d_off
Line 994: )
Line 994: +
Line 994: INTCON = 1
Line 994: )
Line 994: )
Line 994: )
Line 995: ID = goto
Line 995: ID = efault
Line 995: ;
Line 996: if
Line 996: (
Line 996: Unrecognized token: 95
Line 996: Unrecognized token: 95
Line 996: ID = put_user
Line 996: (
Line 996: ID = reclen
Line 996: ,
Line 996: Unrecognized token: 38
Line 996: ID = dirent
Line 996: -
Line 996: >
Line 996: ID = d_reclen
Line 996: )
Line 996: )
Line 997: ID = goto
Line 997: ID = efault
Line 997: ;
Line 998: if
Line 998: (
Line 998: Unrecognized token: 95
Line 998: Unrecognized token: 95
Line 998: ID = put_user
Line 998: (
Line 998: ID = d_type
Line 998: ,
Line 998: Unrecognized token: 38
Line 998: ID = dirent
Line 998: -
Line 998: >
Line 998: ID = d_type
Line 998: )
Line 998: )
Line 999: ID = goto
Line 999: ID = efault
Line 999: ;
Line 1000: if
Line 1000: (
Line 1000: ID = copy_to_user
Line 1000: (
Line 1000: ID = dirent
Line 1000: -
Line 1000: >
Line 1000: ID = d_name
Line 1000: ,
Line 1000: ID = name
Line 1000: ,
Line 1000: ID = namlen
Line 1000: )
Line 1000: )
Line 1001: ID = goto
Line 1001: ID = efault
Line 1001: ;
Line 1002: if
Line 1002: (
Line 1002: Unrecognized token: 95
Line 1002: Unrecognized token: 95
Line 1002: ID = put_user
Line 1002: (
Line 1002: INTCON = 0
Line 1002: ,
Line 1002: ID = dirent
Line 1002: -
Line 1002: >
Line 1002: ID = d_name
Line 1002: +
Line 1002: ID = namlen
Line 1002: )
Line 1002: )
Line 1003: ID = goto
Line 1003: ID = efault
Line 1003: ;
Line 1004: ID = buf
Line 1004: -
Line 1004: >
Line 1004: ID = previous
Line 1004: =
Line 1004: ID = dirent
Line 1004: ;
Line 1005: ID = dirent
Line 1005: =
Line 1005: (
Line 1005: void
Line 1005: Unrecognized token: 95
Line 1005: Unrecognized token: 95
Line 1005: ID = user
Line 1005: *
Line 1005: )
Line 1005: ID = dirent
Line 1005: +
Line 1005: ID = reclen
Line 1005: ;
Line 1006: ID = buf
Line 1006: -
Line 1006: >
Line 1006: ID = current_dir
Line 1006: =
Line 1006: ID = dirent
Line 1006: ;
Line 1007: ID = buf
Line 1007: -
Line 1007: >
Line 1007: ID = count
Line 1007: -
Line 1007: =
Line 1007: ID = reclen
Line 1007: ;
Line 1008: return
Line 1008: INTCON = 0
Line 1008: ;
Line 1009: ID = efault
Line 1009: Unrecognized token: 58
Line 1010: ID = buf
Line 1010: -
Line 1010: >
Line 1010: ID = error
Line 1010: =
Line 1010: -
Line 1010: ID = EFAULT
Line 1010: ;
Line 1011: return
Line 1011: -
Line 1011: ID = EFAULT
Line 1011: ;
Line 1012: }
Line 1014: ID = asmlinkage
Line 1014: ID = long
Line 1014: ID = compat_sys_getdents64
Line 1014: (
Line 1014: ID = unsigned
Line 1014: int
Line 1014: ID = fd
Line 1014: ,
Line 1015: ID = struct
Line 1015: ID = linux_dirent64
Line 1015: Unrecognized token: 95
Line 1015: Unrecognized token: 95
Line 1015: ID = user
Line 1015: *
Line 1015: ID = dirent
Line 1015: ,
Line 1015: ID = unsigned
Line 1015: int
Line 1015: ID = count
Line 1015: )
Line 1016: {
Line 1017: ID = struct
Line 1017: ID = file
Line 1017: *
Line 1017: ID = file
Line 1017: ;
Line 1018: ID = struct
Line 1018: ID = linux_dirent64
Line 1018: Unrecognized token: 95
Line 1018: Unrecognized token: 95
Line 1018: ID = user
Line 1018: *
Line 1018: ID = lastdirent
Line 1018: ;
Line 1019: ID = struct
Line 1019: ID = compat_getdents_callback64
Line 1019: ID = buf
Line 1019: ;
Line 1020: int
Line 1020: ID = error
Line 1020: ;
Line 1022: ID = error
Line 1022: =
Line 1022: -
Line 1022: ID = EFAULT
Line 1022: ;
Line 1023: if
Line 1023: (
Line 1023: !
Line 1023: ID = access_ok
Line 1023: (
Line 1023: ID = VERIFY_WRITE
Line 1023: ,
Line 1023: ID = dirent
Line 1023: ,
Line 1023: ID = count
Line 1023: )
Line 1023: )
Line 1024: ID = goto
Line 1024: ID = out
Line 1024: ;
Line 1026: ID = error
Line 1026: =
Line 1026: -
Line 1026: ID = EBADF
Line 1026: ;
Line 1027: ID = file
Line 1027: =
Line 1027: ID = fget
Line 1027: (
Line 1027: ID = fd
Line 1027: )
Line 1027: ;
Line 1028: if
Line 1028: (
Line 1028: !
Line 1028: ID = file
Line 1028: )
Line 1029: ID = goto
Line 1029: ID = out
Line 1029: ;
Line 1031: ID = buf
Line 1031: Unrecognized token: 46
Line 1031: ID = current_dir
Line 1031: =
Line 1031: ID = dirent
Line 1031: ;
Line 1032: ID = buf
Line 1032: Unrecognized token: 46
Line 1032: ID = previous
Line 1032: =
Line 1032: ID = NULL
Line 1032: ;
Line 1033: ID = buf
Line 1033: Unrecognized token: 46
Line 1033: ID = count
Line 1033: =
Line 1033: ID = count
Line 1033: ;
Line 1034: ID = buf
Line 1034: Unrecognized token: 46
Line 1034: ID = error
Line 1034: =
Line 1034: INTCON = 0
Line 1034: ;
Line 1036: ID = error
Line 1036: =
Line 1036: ID = vfs_readdir
Line 1036: (
Line 1036: ID = file
Line 1036: ,
Line 1036: ID = compat_filldir64
Line 1036: ,
Line 1036: Unrecognized token: 38
Line 1036: ID = buf
Line 1036: )
Line 1036: ;
Line 1037: if
Line 1037: (
Line 1037: ID = error
Line 1037: <
Line 1037: INTCON = 0
Line 1037: )
Line 1038: ID = goto
Line 1038: ID = out_putf
Line 1038: ;
Line 1039: ID = error
Line 1039: =
Line 1039: ID = buf
Line 1039: Unrecognized token: 46
Line 1039: ID = error
Line 1039: ;
Line 1040: ID = lastdirent
Line 1040: =
Line 1040: ID = buf
Line 1040: Unrecognized token: 46
Line 1040: ID = previous
Line 1040: ;
Line 1041: if
Line 1041: (
Line 1041: ID = lastdirent
Line 1041: )
Line 1041: {
Line 1042: ID = typeof
Line 1042: (
Line 1042: ID = lastdirent
Line 1042: -
Line 1042: >
Line 1042: ID = d_off
Line 1042: )
Line 1042: ID = d_off
Line 1042: =
Line 1042: ID = file
Line 1042: -
Line 1042: >
Line 1042: ID = f_pos
Line 1042: ;
Line 1043: Unrecognized token: 95
Line 1043: Unrecognized token: 95
Line 1043: ID = put_user
Line 1043: (
Line 1043: ID = d_off
Line 1043: ,
Line 1043: (
Line 1043: ID = u32
Line 1043: Unrecognized token: 95
Line 1043: Unrecognized token: 95
Line 1043: ID = user
Line 1043: *
Line 1043: )
Line 1043: Unrecognized token: 38
Line 1043: ID = lastdirent
Line 1043: -
Line 1043: >
Line 1043: ID = d_off
Line 1043: )
Line 1043: ;
Line 1044: Unrecognized token: 95
Line 1044: Unrecognized token: 95
Line 1044: ID = put_user
Line 1044: (
Line 1044: ID = d_off
Line 1044: >
Line 1044: >
Line 1044: INTCON = 32
Line 1044: ,
Line 1044: (
Line 1044: (
Line 1044: ID = u32
Line 1044: Unrecognized token: 95
Line 1044: Unrecognized token: 95
Line 1044: ID = user
Line 1044: *
Line 1044: )
Line 1044: Unrecognized token: 38
Line 1044: ID = lastdirent
Line 1044: -
Line 1044: >
Line 1044: ID = d_off
Line 1044: )
Line 1044: +
Line 1044: INTCON = 1
Line 1044: )
Line 1044: ;
Line 1045: ID = error
Line 1045: =
Line 1045: ID = count
Line 1045: -
Line 1045: ID = buf
Line 1045: Unrecognized token: 46
Line 1045: ID = count
Line 1045: ;
Line 1046: }
Line 1048: ID = out_putf
Line 1048: Unrecognized token: 58
Line 1049: ID = fput
Line 1049: (
Line 1049: ID = file
Line 1049: )
Line 1049: ;
Line 1050: ID = out
Line 1050: Unrecognized token: 58
Line 1051: return
Line 1051: ID = error
Line 1051: ;
Line 1052: }
Line 1053: Unrecognized token: 35
Line 1053: ID = endif
Line 1055: ID = static
Line 1055: ID = ssize_t
Line 1055: ID = compat_do_readv_writev
Line 1055: (
Line 1055: int
Line 1055: ID = type
Line 1055: ,
Line 1055: ID = struct
Line 1055: ID = file
Line 1055: *
Line 1055: ID = file
Line 1055: ,
Line 1056: ID = const
Line 1056: ID = struct
Line 1056: ID = compat_iovec
Line 1056: Unrecognized token: 95
Line 1056: Unrecognized token: 95
Line 1056: ID = user
Line 1056: *
Line 1056: ID = uvector
Line 1056: ,
Line 1057: ID = unsigned
Line 1057: ID = long
Line 1057: ID = nr_segs
Line 1057: ,
Line 1057: ID = loff_t
Line 1057: *
Line 1057: ID = pos
Line 1057: )
Line 1058: {
Line 1059: ID = typedef
Line 1059: ID = ssize_t
Line 1059: (
Line 1059: *
Line 1059: ID = io_fn_t
Line 1059: )
Line 1059: (
Line 1059: ID = struct
Line 1059: ID = file
Line 1059: *
Line 1059: ,
Line 1059: char
Line 1059: Unrecognized token: 95
Line 1059: Unrecognized token: 95
Line 1059: ID = user
Line 1059: *
Line 1059: ,
Line 1059: ID = size_t
Line 1059: ,
Line 1059: ID = loff_t
Line 1059: *
Line 1059: )
Line 1059: ;
Line 1060: ID = typedef
Line 1060: ID = ssize_t
Line 1060: (
Line 1060: *
Line 1060: ID = iov_fn_t
Line 1060: )
Line 1060: (
Line 1060: ID = struct
Line 1060: ID = file
Line 1060: *
Line 1060: ,
Line 1060: ID = const
Line 1060: ID = struct
Line 1060: ID = iovec
Line 1060: *
Line 1060: ,
Line 1060: ID = unsigned
Line 1060: ID = long
Line 1060: ,
Line 1060: ID = loff_t
Line 1060: *
Line 1060: )
Line 1060: ;
Line 1062: ID = compat_ssize_t
Line 1062: ID = tot_len
Line 1062: ;
Line 1063: ID = struct
Line 1063: ID = iovec
Line 1063: ID = iovstack
Line 1063: [
Line 1063: ID = UIO_FASTIOV
Line 1063: ]
Line 1063: ;
Line 1064: ID = struct
Line 1064: ID = iovec
Line 1064: *
Line 1064: ID = iov
Line 1064: =
Line 1064: ID = iovstack
Line 1064: ,
Line 1064: *
Line 1064: ID = vector
Line 1064: ;
Line 1065: ID = ssize_t
Line 1065: ID = ret
Line 1065: ;
Line 1066: int
Line 1066: ID = seg
Line 1066: ;
Line 1067: ID = io_fn_t
Line 1067: ID = fn
Line 1067: ;
Line 1068: ID = iov_fn_t
Line 1068: ID = fnv
Line 1068: ;
Line 1069: ID = struct
Line 1069: ID = inode
Line 1069: *
Line 1069: ID = inode
Line 1069: ;
Line 1076: ID = ret
Line 1076: =
Line 1076: INTCON = 0
Line 1076: ;
Line 1077: if
Line 1077: (
Line 1077: ID = nr_segs
Line 1077: ==
Line 1077: INTCON = 0
Line 1077: )
Line 1078: ID = goto
Line 1078: ID = out
Line 1078: ;
Line 1084: ID = ret
Line 1084: =
Line 1084: -
Line 1084: ID = EINVAL
Line 1084: ;
Line 1085: if
Line 1085: (
Line 1085: (
Line 1085: ID = nr_segs
Line 1085: >
Line 1085: ID = UIO_MAXIOV
Line 1085: )
Line 1085: ||
Line 1085: (
Line 1085: ID = nr_segs
Line 1085: <=
Line 1085: INTCON = 0
Line 1085: )
Line 1085: )
Line 1086: ID = goto
Line 1086: ID = out
Line 1086: ;
Line 1087: if
Line 1087: (
Line 1087: !
Line 1087: ID = file
Line 1087: -
Line 1087: >
Line 1087: ID = f_op
Line 1087: )
Line 1088: ID = goto
Line 1088: ID = out
Line 1088: ;
Line 1089: if
Line 1089: (
Line 1089: ID = nr_segs
Line 1089: >
Line 1089: ID = UIO_FASTIOV
Line 1089: )
Line 1089: {
Line 1090: ID = ret
Line 1090: =
Line 1090: -
Line 1090: ID = ENOMEM
Line 1090: ;
Line 1091: ID = iov
Line 1091: =
Line 1091: ID = kmalloc
Line 1091: (
Line 1091: ID = nr_segs
Line 1091: *
Line 1091: ID = sizeof
Line 1091: (
Line 1091: ID = struct
Line 1091: ID = iovec
Line 1091: )
Line 1091: ,
Line 1091: ID = GFP_KERNEL
Line 1091: )
Line 1091: ;
Line 1092: if
Line 1092: (
Line 1092: !
Line 1092: ID = iov
Line 1092: )
Line 1093: ID = goto
Line 1093: ID = out
Line 1093: ;
Line 1094: }
Line 1095: ID = ret
Line 1095: =
Line 1095: -
Line 1095: ID = EFAULT
Line 1095: ;
Line 1096: if
Line 1096: (
Line 1096: ID = verify_area
Line 1096: (
Line 1096: ID = VERIFY_READ
Line 1096: ,
Line 1096: ID = uvector
Line 1096: ,
Line 1096: ID = nr_segs
Line 1096: *
Line 1096: ID = sizeof
Line 1096: (
Line 1096: *
Line 1096: ID = uvector
Line 1096: )
Line 1096: )
Line 1096: )
Line 1097: ID = goto
Line 1097: ID = out
Line 1097: ;
Line 1106: ID = tot_len
Line 1106: =
Line 1106: INTCON = 0
Line 1106: ;
Line 1107: ID = vector
Line 1107: =
Line 1107: ID = iov
Line 1107: ;
Line 1108: ID = ret
Line 1108: =
Line 1108: -
Line 1108: ID = EINVAL
Line 1108: ;
Line 1109: for
Line 1109: (
Line 1109: ID = seg
Line 1109: =
Line 1109: INTCON = 0
Line 1109: ;
Line 1109: ID = seg
Line 1109: <
Line 1109: ID = nr_segs
Line 1109: ;
Line 1109: ID = seg
Line 1109: +
Line 1109: +
Line 1109: )
Line 1109: {
Line 1110: ID = compat_ssize_t
Line 1110: ID = tmp
Line 1110: =
Line 1110: ID = tot_len
Line 1110: ;
Line 1111: ID = compat_ssize_t
Line 1111: ID = len
Line 1111: ;
Line 1112: ID = compat_uptr_t
Line 1112: ID = buf
Line 1112: ;
Line 1114: if
Line 1114: (
Line 1114: Unrecognized token: 95
Line 1114: Unrecognized token: 95
Line 1114: ID = get_user
Line 1114: (
Line 1114: ID = len
Line 1114: ,
Line 1114: Unrecognized token: 38
Line 1114: ID = uvector
Line 1114: -
Line 1114: >
Line 1114: ID = iov_len
Line 1114: )
Line 1114: ||
Line 1115: Unrecognized token: 95
Line 1115: Unrecognized token: 95
Line 1115: ID = get_user
Line 1115: (
Line 1115: ID = buf
Line 1115: ,
Line 1115: Unrecognized token: 38
Line 1115: ID = uvector
Line 1115: -
Line 1115: >
Line 1115: ID = iov_base
Line 1115: )
Line 1115: )
Line 1115: {
Line 1116: ID = ret
Line 1116: =
Line 1116: -
Line 1116: ID = EFAULT
Line 1116: ;
Line 1117: ID = goto
Line 1117: ID = out
Line 1117: ;
Line 1118: }
Line 1119: if
Line 1119: (
Line 1119: ID = len
Line 1119: <
Line 1119: INTCON = 0
Line 1119: )
Line 1120: ID = goto
Line 1120: ID = out
Line 1120: ;
Line 1121: ID = tot_len
Line 1121: +
Line 1121: =
Line 1121: ID = len
Line 1121: ;
Line 1122: if
Line 1122: (
Line 1122: ID = tot_len
Line 1122: <
Line 1122: ID = tmp
Line 1122: )
Line 1123: ID = goto
Line 1123: ID = out
Line 1123: ;
Line 1124: ID = vector
Line 1124: -
Line 1124: >
Line 1124: ID = iov_base
Line 1124: =
Line 1124: ID = compat_ptr
Line 1124: (
Line 1124: ID = buf
Line 1124: )
Line 1124: ;
Line 1125: ID = vector
Line 1125: -
Line 1125: >
Line 1125: ID = iov_len
Line 1125: =
Line 1125: (
Line 1125: ID = compat_size_t
Line 1125: )
Line 1125: ID = len
Line 1125: ;
Line 1126: ID = uvector
Line 1126: +
Line 1126: +
Line 1126: ;
Line 1127: ID = vector
Line 1127: +
Line 1127: +
Line 1127: ;
Line 1128: }
Line 1129: if
Line 1129: (
Line 1129: ID = tot_len
Line 1129: ==
Line 1129: INTCON = 0
Line 1129: )
Line 1129: {
Line 1130: ID = ret
Line 1130: =
Line 1130: INTCON = 0
Line 1130: ;
Line 1131: ID = goto
Line 1131: ID = out
Line 1131: ;
Line 1132: }
Line 1134: ID = inode
Line 1134: =
Line 1134: ID = file
Line 1134: -
Line 1134: >
Line 1134: ID = f_dentry
Line 1134: -
Line 1134: >
Line 1134: ID = d_inode
Line 1134: ;
Line 1136: ID = ret
Line 1136: =
Line 1136: ID = locks_verify_area
Line 1136: (
Line 1136: (
Line 1136: ID = type
Line 1136: ==
Line 1136: ID = READ
Line 1137: Unrecognized token: 63
Line 1137: ID = FLOCK_VERIFY_READ
Line 1137: Unrecognized token: 58
Line 1137: ID = FLOCK_VERIFY_WRITE
Line 1137: )
Line 1137: ,
Line 1138: ID = inode
Line 1138: ,
Line 1138: ID = file
Line 1138: ,
Line 1138: *
Line 1138: ID = pos
Line 1138: ,
Line 1138: ID = tot_len
Line 1138: )
Line 1138: ;
Line 1139: if
Line 1139: (
Line 1139: ID = ret
Line 1139: )
Line 1140: ID = goto
Line 1140: ID = out
Line 1140: ;
Line 1142: ID = fnv
Line 1142: =
Line 1142: ID = NULL
Line 1142: ;
Line 1143: if
Line 1143: (
Line 1143: ID = type
Line 1143: ==
Line 1143: ID = READ
Line 1143: )
Line 1143: {
Line 1144: ID = fn
Line 1144: =
Line 1144: ID = file
Line 1144: -
Line 1144: >
Line 1144: ID = f_op
Line 1144: -
Line 1144: >
Line 1144: ID = read
Line 1144: ;
Line 1145: ID = fnv
Line 1145: =
Line 1145: ID = file
Line 1145: -
Line 1145: >
Line 1145: ID = f_op
Line 1145: -
Line 1145: >
Line 1145: ID = readv
Line 1145: ;
Line 1146: }
Line 1146: else
Line 1146: {
Line 1147: ID = fn
Line 1147: =
Line 1147: (
Line 1147: ID = io_fn_t
Line 1147: )
Line 1147: ID = file
Line 1147: -
Line 1147: >
Line 1147: ID = f_op
Line 1147: -
Line 1147: >
Line 1147: ID = write
Line 1147: ;
Line 1148: ID = fnv
Line 1148: =
Line 1148: ID = file
Line 1148: -
Line 1148: >
Line 1148: ID = f_op
Line 1148: -
Line 1148: >
Line 1148: ID = writev
Line 1148: ;
Line 1149: }
Line 1150: if
Line 1150: (
Line 1150: ID = fnv
Line 1150: )
Line 1150: {
Line 1151: ID = ret
Line 1151: =
Line 1151: ID = fnv
Line 1151: (
Line 1151: ID = file
Line 1151: ,
Line 1151: ID = iov
Line 1151: ,
Line 1151: ID = nr_segs
Line 1151: ,
Line 1151: ID = pos
Line 1151: )
Line 1151: ;
Line 1152: ID = goto
Line 1152: ID = out
Line 1152: ;
Line 1153: }
Line 1156: ID = ret
Line 1156: =
Line 1156: INTCON = 0
Line 1156: ;
Line 1157: ID = vector
Line 1157: =
Line 1157: ID = iov
Line 1157: ;
Line 1158: while
Line 1158: (
Line 1158: ID = nr_segs
Line 1158: >
Line 1158: INTCON = 0
Line 1158: )
Line 1158: {
Line 1159: void
Line 1159: Unrecognized token: 95
Line 1159: Unrecognized token: 95
Line 1159: ID = user
Line 1159: *
Line 1159: ID = base
Line 1159: ;
Line 1160: ID = size_t
Line 1160: ID = len
Line 1160: ;
Line 1161: ID = ssize_t
Line 1161: ID = nr
Line 1161: ;
Line 1163: ID = base
Line 1163: =
Line 1163: ID = vector
Line 1163: -
Line 1163: >
Line 1163: ID = iov_base
Line 1163: ;
Line 1164: ID = len
Line 1164: =
Line 1164: ID = vector
Line 1164: -
Line 1164: >
Line 1164: ID = iov_len
Line 1164: ;
Line 1165: ID = vector
Line 1165: +
Line 1165: +
Line 1165: ;
Line 1166: ID = nr_segs
Line 1166: -
Line 1166: -
Line 1166: ;
Line 1168: ID = nr
Line 1168: =
Line 1168: ID = fn
Line 1168: (
Line 1168: ID = file
Line 1168: ,
Line 1168: ID = base
Line 1168: ,
Line 1168: ID = len
Line 1168: ,
Line 1168: ID = pos
Line 1168: )
Line 1168: ;
Line 1170: if
Line 1170: (
Line 1170: ID = nr
Line 1170: <
Line 1170: INTCON = 0
Line 1170: )
Line 1170: {
Line 1171: if
Line 1171: (
Line 1171: !
Line 1171: ID = ret
Line 1171: )
Line 1171: ID = ret
Line 1171: =
Line 1171: ID = nr
Line 1171: ;
Line 1172: ID = break
Line 1172: ;
Line 1173: }
Line 1174: ID = ret
Line 1174: +
Line 1174: =
Line 1174: ID = nr
Line 1174: ;
Line 1175: if
Line 1175: (
Line 1175: ID = nr
Line 1175: !=
Line 1175: ID = len
Line 1175: )
Line 1176: ID = break
Line 1176: ;
Line 1177: }
Line 1178: ID = out
Line 1178: Unrecognized token: 58
Line 1179: if
Line 1179: (
Line 1179: ID = iov
Line 1179: !=
Line 1179: ID = iovstack
Line 1179: )
Line 1180: ID = kfree
Line 1180: (
Line 1180: ID = iov
Line 1180: )
Line 1180: ;
Line 1181: if
Line 1181: (
Line 1181: (
Line 1181: ID = ret
Line 1181: +
Line 1181: (
Line 1181: ID = type
Line 1181: ==
Line 1181: ID = READ
Line 1181: )
Line 1181: )
Line 1181: >
Line 1181: INTCON = 0
Line 1181: )
Line 1182: ID = dnotify_parent
Line 1182: (
Line 1182: ID = file
Line 1182: -
Line 1182: >
Line 1182: ID = f_dentry
Line 1182: ,
Line 1183: (
Line 1183: ID = type
Line 1183: ==
Line 1183: ID = READ
Line 1183: )
Line 1183: Unrecognized token: 63
Line 1183: ID = DN_ACCESS
Line 1183: Unrecognized token: 58
Line 1183: ID = DN_MODIFY
Line 1183: )
Line 1183: ;
Line 1184: return
Line 1184: ID = ret
Line 1184: ;
Line 1185: }
Line 1187: ID = asmlinkage
Line 1187: ID = ssize_t
Line 1188: ID = compat_sys_readv
Line 1188: (
Line 1188: ID = unsigned
Line 1188: ID = long
Line 1188: ID = fd
Line 1188: ,
Line 1188: ID = const
Line 1188: ID = struct
Line 1188: ID = compat_iovec
Line 1188: Unrecognized token: 95
Line 1188: Unrecognized token: 95
Line 1188: ID = user
Line 1188: *
Line 1188: ID = vec
Line 1188: ,
Line 1188: ID = unsigned
Line 1188: ID = long
Line 1188: ID = vlen
Line 1188: )
Line 1189: {
Line 1190: ID = struct
Line 1190: ID = file
Line 1190: *
Line 1190: ID = file
Line 1190: ;
Line 1191: ID = ssize_t
Line 1191: ID = ret
Line 1191: =
Line 1191: -
Line 1191: ID = EBADF
Line 1191: ;
Line 1193: ID = file
Line 1193: =
Line 1193: ID = fget
Line 1193: (
Line 1193: ID = fd
Line 1193: )
Line 1193: ;
Line 1194: if
Line 1194: (
Line 1194: !
Line 1194: ID = file
Line 1194: )
Line 1195: return
Line 1195: -
Line 1195: ID = EBADF
Line 1195: ;
Line 1197: if
Line 1197: (
Line 1197: !
Line 1197: (
Line 1197: ID = file
Line 1197: -
Line 1197: >
Line 1197: ID = f_mode
Line 1197: Unrecognized token: 38
Line 1197: ID = FMODE_READ
Line 1197: )
Line 1197: )
Line 1198: ID = goto
Line 1198: ID = out
Line 1198: ;
Line 1200: ID = ret
Line 1200: =
Line 1200: -
Line 1200: ID = EINVAL
Line 1200: ;
Line 1201: if
Line 1201: (
Line 1201: !
Line 1201: ID = file
Line 1201: -
Line 1201: >
Line 1201: ID = f_op
Line 1201: ||
Line 1201: (
Line 1201: !
Line 1201: ID = file
Line 1201: -
Line 1201: >
Line 1201: ID = f_op
Line 1201: -
Line 1201: >
Line 1201: ID = readv
Line 1201: &&
Line 1201: !
Line 1201: ID = file
Line 1201: -
Line 1201: >
Line 1201: ID = f_op
Line 1201: -
Line 1201: >
Line 1201: ID = read
Line 1201: )
Line 1201: )
Line 1202: ID = goto
Line 1202: ID = out
Line 1202: ;
Line 1204: ID = ret
Line 1204: =
Line 1204: ID = compat_do_readv_writev
Line 1204: (
Line 1204: ID = READ
Line 1204: ,
Line 1204: ID = file
Line 1204: ,
Line 1204: ID = vec
Line 1204: ,
Line 1204: ID = vlen
Line 1204: ,
Line 1204: Unrecognized token: 38
Line 1204: ID = file
Line 1204: -
Line 1204: >
Line 1204: ID = f_pos
Line 1204: )
Line 1204: ;
Line 1206: ID = out
Line 1206: Unrecognized token: 58
Line 1207: ID = fput
Line 1207: (
Line 1207: ID = file
Line 1207: )
Line 1207: ;
Line 1208: return
Line 1208: ID = ret
Line 1208: ;
Line 1209: }
Line 1211: ID = asmlinkage
Line 1211: ID = ssize_t
Line 1212: ID = compat_sys_writev
Line 1212: (
Line 1212: ID = unsigned
Line 1212: ID = long
Line 1212: ID = fd
Line 1212: ,
Line 1212: ID = const
Line 1212: ID = struct
Line 1212: ID = compat_iovec
Line 1212: Unrecognized token: 95
Line 1212: Unrecognized token: 95
Line 1212: ID = user
Line 1212: *
Line 1212: ID = vec
Line 1212: ,
Line 1212: ID = unsigned
Line 1212: ID = long
Line 1212: ID = vlen
Line 1212: )
Line 1213: {
Line 1214: ID = struct
Line 1214: ID = file
Line 1214: *
Line 1214: ID = file
Line 1214: ;
Line 1215: ID = ssize_t
Line 1215: ID = ret
Line 1215: =
Line 1215: -
Line 1215: ID = EBADF
Line 1215: ;
Line 1217: ID = file
Line 1217: =
Line 1217: ID = fget
Line 1217: (
Line 1217: ID = fd
Line 1217: )
Line 1217: ;
Line 1218: if
Line 1218: (
Line 1218: !
Line 1218: ID = file
Line 1218: )
Line 1219: return
Line 1219: -
Line 1219: ID = EBADF
Line 1219: ;
Line 1220: if
Line 1220: (
Line 1220: !
Line 1220: (
Line 1220: ID = file
Line 1220: -
Line 1220: >
Line 1220: ID = f_mode
Line 1220: Unrecognized token: 38
Line 1220: ID = FMODE_WRITE
Line 1220: )
Line 1220: )
Line 1221: ID = goto
Line 1221: ID = out
Line 1221: ;
Line 1223: ID = ret
Line 1223: =
Line 1223: -
Line 1223: ID = EINVAL
Line 1223: ;
Line 1224: if
Line 1224: (
Line 1224: !
Line 1224: ID = file
Line 1224: -
Line 1224: >
Line 1224: ID = f_op
Line 1224: ||
Line 1224: (
Line 1224: !
Line 1224: ID = file
Line 1224: -
Line 1224: >
Line 1224: ID = f_op
Line 1224: -
Line 1224: >
Line 1224: ID = writev
Line 1224: &&
Line 1224: !
Line 1224: ID = file
Line 1224: -
Line 1224: >
Line 1224: ID = f_op
Line 1224: -
Line 1224: >
Line 1224: ID = write
Line 1224: )
Line 1224: )
Line 1225: ID = goto
Line 1225: ID = out
Line 1225: ;
Line 1227: ID = ret
Line 1227: =
Line 1227: ID = compat_do_readv_writev
Line 1227: (
Line 1227: ID = WRITE
Line 1227: ,
Line 1227: ID = file
Line 1227: ,
Line 1227: ID = vec
Line 1227: ,
Line 1227: ID = vlen
Line 1227: ,
Line 1227: Unrecognized token: 38
Line 1227: ID = file
Line 1227: -
Line 1227: >
Line 1227: ID = f_pos
Line 1227: )
Line 1227: ;
Line 1229: ID = out
Line 1229: Unrecognized token: 58
Line 1230: ID = fput
Line 1230: (
Line 1230: ID = file
Line 1230: )
Line 1230: ;
Line 1231: return
Line 1231: ID = ret
Line 1231: ;
Line 1232: }
Line 1239: ID = static
Line 1239: int
Line 1239: ID = compat_count
Line 1239: (
Line 1239: ID = compat_uptr_t
Line 1239: Unrecognized token: 95
Line 1239: Unrecognized token: 95
Line 1239: ID = user
Line 1239: *
Line 1239: ID = argv
Line 1239: ,
Line 1239: int
Line 1239: ID = max
Line 1239: )
Line 1240: {
Line 1241: int
Line 1241: ID = i
Line 1241: =
Line 1241: INTCON = 0
Line 1241: ;
Line 1243: if
Line 1243: (
Line 1243: ID = argv
Line 1243: !=
Line 1243: ID = NULL
Line 1243: )
Line 1243: {
Line 1244: for
Line 1244: (
Line 1244: ;
Line 1244: ;
Line 1244: )
Line 1244: {
Line 1245: ID = compat_uptr_t
Line 1245: ID = p
Line 1245: ;
Line 1247: if
Line 1247: (
Line 1247: ID = get_user
Line 1247: (
Line 1247: ID = p
Line 1247: ,
Line 1247: ID = argv
Line 1247: )
Line 1247: )
Line 1248: return
Line 1248: -
Line 1248: ID = EFAULT
Line 1248: ;
Line 1249: if
Line 1249: (
Line 1249: !
Line 1249: ID = p
Line 1249: )
Line 1250: ID = break
Line 1250: ;
Line 1251: ID = argv
Line 1251: +
Line 1251: +
Line 1251: ;
Line 1252: if
Line 1252: (
Line 1252: +
Line 1252: +
Line 1252: ID = i
Line 1252: >
Line 1252: ID = max
Line 1252: )
Line 1253: return
Line 1253: -
Line 1253: ID = E2BIG
Line 1253: ;
Line 1254: }
Line 1255: }
Line 1256: return
Line 1256: ID = i
Line 1256: ;
Line 1257: }
Line 1263: ID = static
Line 1263: int
Line 1263: ID = compat_copy_strings
Line 1263: (
Line 1263: int
Line 1263: ID = argc
Line 1263: ,
Line 1263: ID = compat_uptr_t
Line 1263: Unrecognized token: 95
Line 1263: Unrecognized token: 95
Line 1263: ID = user
Line 1263: *
Line 1263: ID = argv
Line 1263: ,
Line 1264: ID = struct
Line 1264: ID = linux_binprm
Line 1264: *
Line 1264: ID = bprm
Line 1264: )
Line 1265: {
Line 1266: ID = struct
Line 1266: ID = page
Line 1266: *
Line 1266: ID = kmapped_page
Line 1266: =
Line 1266: ID = NULL
Line 1266: ;
Line 1267: char
Line 1267: *
Line 1267: ID = kaddr
Line 1267: =
Line 1267: ID = NULL
Line 1267: ;
Line 1268: int
Line 1268: ID = ret
Line 1268: ;
Line 1270: while
Line 1270: (
Line 1270: ID = argc
Line 1270: -
Line 1270: -
Line 1270: >
Line 1270: INTCON = 0
Line 1270: )
Line 1270: {
Line 1271: ID = compat_uptr_t
Line 1271: ID = str
Line 1271: ;
Line 1272: int
Line 1272: ID = len
Line 1272: ;
Line 1273: ID = unsigned
Line 1273: ID = long
Line 1273: ID = pos
Line 1273: ;
Line 1275: if
Line 1275: (
Line 1275: ID = get_user
Line 1275: (
Line 1275: ID = str
Line 1275: ,
Line 1275: ID = argv
Line 1275: +
Line 1275: ID = argc
Line 1275: )
Line 1275: ||
Line 1276: !
Line 1276: (
Line 1276: ID = len
Line 1276: =
Line 1276: ID = strnlen_user
Line 1276: (
Line 1276: ID = compat_ptr
Line 1276: (
Line 1276: ID = str
Line 1276: )
Line 1276: ,
Line 1276: ID = bprm
Line 1276: -
Line 1276: >
Line 1276: ID = p
Line 1276: )
Line 1276: )
Line 1276: )
Line 1276: {
Line 1277: ID = ret
Line 1277: =
Line 1277: -
Line 1277: ID = EFAULT
Line 1277: ;
Line 1278: ID = goto
Line 1278: ID = out
Line 1278: ;
Line 1279: }
Line 1281: if
Line 1281: (
Line 1281: ID = bprm
Line 1281: -
Line 1281: >
Line 1281: ID = p
Line 1281: <
Line 1281: ID = len
Line 1281: )
Line 1281: {
Line 1282: ID = ret
Line 1282: =
Line 1282: -
Line 1282: ID = E2BIG
Line 1282: ;
Line 1283: ID = goto
Line 1283: ID = out
Line 1283: ;
Line 1284: }
Line 1286: ID = bprm
Line 1286: -
Line 1286: >
Line 1286: ID = p
Line 1286: -
Line 1286: =
Line 1286: ID = len
Line 1286: ;
Line 1288: ID = pos
Line 1288: =
Line 1288: ID = bprm
Line 1288: -
Line 1288: >
Line 1288: ID = p
Line 1288: ;
Line 1290: while
Line 1290: (
Line 1290: ID = len
Line 1290: >
Line 1290: INTCON = 0
Line 1290: )
Line 1290: {
Line 1291: int
Line 1291: ID = i
Line 1291: ,
Line 1291: ID = new
Line 1291: ,
Line 1291: ID = err
Line 1291: ;
Line 1292: int
Line 1292: ID = offset
Line 1292: ,
Line 1292: ID = bytes_to_copy
Line 1292: ;
Line 1293: ID = struct
Line 1293: ID = page
Line 1293: *
Line 1293: ID = page
Line 1293: ;
Line 1295: ID = offset
Line 1295: =
Line 1295: ID = pos
Line 1295: Unrecognized token: 37
Line 1295: ID = PAGE_SIZE
Line 1295: ;
Line 1296: ID = i
Line 1296: =
Line 1296: ID = pos
Line 1296: /
Line 1296: ID = PAGE_SIZE
Line 1296: ;
Line 1297: ID = page
Line 1297: =
Line 1297: ID = bprm
Line 1297: -
Line 1297: >
Line 1297: ID = page
Line 1297: [
Line 1297: ID = i
Line 1297: ]
Line 1297: ;
Line 1298: ID = new
Line 1298: =
Line 1298: INTCON = 0
Line 1298: ;
Line 1299: if
Line 1299: (
Line 1299: !
Line 1299: ID = page
Line 1299: )
Line 1299: {
Line 1300: ID = page
Line 1300: =
Line 1300: ID = alloc_page
Line 1300: (
Line 1300: ID = GFP_HIGHUSER
Line 1300: )
Line 1300: ;
Line 1301: ID = bprm
Line 1301: -
Line 1301: >
Line 1301: ID = page
Line 1301: [
Line 1301: ID = i
Line 1301: ]
Line 1301: =
Line 1301: ID = page
Line 1301: ;
Line 1302: if
Line 1302: (
Line 1302: !
Line 1302: ID = page
Line 1302: )
Line 1302: {
Line 1303: ID = ret
Line 1303: =
Line 1303: -
Line 1303: ID = ENOMEM
Line 1303: ;
Line 1304: ID = goto
Line 1304: ID = out
Line 1304: ;
Line 1305: }
Line 1306: ID = new
Line 1306: =
Line 1306: INTCON = 1
Line 1306: ;
Line 1307: }
Line 1309: if
Line 1309: (
Line 1309: ID = page
Line 1309: !=
Line 1309: ID = kmapped_page
Line 1309: )
Line 1309: {
Line 1310: if
Line 1310: (
Line 1310: ID = kmapped_page
Line 1310: )
Line 1311: ID = kunmap
Line 1311: (
Line 1311: ID = kmapped_page
Line 1311: )
Line 1311: ;
Line 1312: ID = kmapped_page
Line 1312: =
Line 1312: ID = page
Line 1312: ;
Line 1313: ID = kaddr
Line 1313: =
Line 1313: ID = kmap
Line 1313: (
Line 1313: ID = kmapped_page
Line 1313: )
Line 1313: ;
Line 1314: }
Line 1315: if
Line 1315: (
Line 1315: ID = new
Line 1315: &&
Line 1315: ID = offset
Line 1315: )
Line 1316: ID = memset
Line 1316: (
Line 1316: ID = kaddr
Line 1316: ,
Line 1316: INTCON = 0
Line 1316: ,
Line 1316: ID = offset
Line 1316: )
Line 1316: ;
Line 1317: ID = bytes_to_copy
Line 1317: =
Line 1317: ID = PAGE_SIZE
Line 1317: -
Line 1317: ID = offset
Line 1317: ;
Line 1318: if
Line 1318: (
Line 1318: ID = bytes_to_copy
Line 1318: >
Line 1318: ID = len
Line 1318: )
Line 1318: {
Line 1319: ID = bytes_to_copy
Line 1319: =
Line 1319: ID = len
Line 1319: ;
Line 1320: if
Line 1320: (
Line 1320: ID = new
Line 1320: )
Line 1321: ID = memset
Line 1321: (
Line 1321: ID = kaddr
Line 1321: +
Line 1321: ID = offset
Line 1321: +
Line 1321: ID = len
Line 1321: ,
Line 1321: INTCON = 0
Line 1321: ,
Line 1322: ID = PAGE_SIZE
Line 1322: -
Line 1322: ID = offset
Line 1322: -
Line 1322: ID = len
Line 1322: )
Line 1322: ;
Line 1323: }
Line 1324: ID = err
Line 1324: =
Line 1324: ID = copy_from_user
Line 1324: (
Line 1324: ID = kaddr
Line 1324: +
Line 1324: ID = offset
Line 1324: ,
Line 1324: ID = compat_ptr
Line 1324: (
Line 1324: ID = str
Line 1324: )
Line 1324: ,
Line 1325: ID = bytes_to_copy
Line 1325: )
Line 1325: ;
Line 1326: if
Line 1326: (
Line 1326: ID = err
Line 1326: )
Line 1326: {
Line 1327: ID = ret
Line 1327: =
Line 1327: -
Line 1327: ID = EFAULT
Line 1327: ;
Line 1328: ID = goto
Line 1328: ID = out
Line 1328: ;
Line 1329: }
Line 1331: ID = pos
Line 1331: +
Line 1331: =
Line 1331: ID = bytes_to_copy
Line 1331: ;
Line 1332: ID = str
Line 1332: +
Line 1332: =
Line 1332: ID = bytes_to_copy
Line 1332: ;
Line 1333: ID = len
Line 1333: -
Line 1333: =
Line 1333: ID = bytes_to_copy
Line 1333: ;
Line 1334: }
Line 1335: }
Line 1336: ID = ret
Line 1336: =
Line 1336: INTCON = 0
Line 1336: ;
Line 1337: ID = out
Line 1337: Unrecognized token: 58
Line 1338: if
Line 1338: (
Line 1338: ID = kmapped_page
Line 1338: )
Line 1339: ID = kunmap
Line 1339: (
Line 1339: ID = kmapped_page
Line 1339: )
Line 1339: ;
Line 1340: return
Line 1340: ID = ret
Line 1340: ;
Line 1341: }
Line 1343: Unrecognized token: 35
Line 1343: ID = ifdef
Line 1343: ID = CONFIG_MMU
Line 1345: Unrecognized token: 35
Line 1345: ID = define
Line 1345: ID = free_arg_pages
Line 1345: (
Line 1345: ID = bprm
Line 1345: )
Line 1345: ID = do
Line 1345: {
Line 1345: }
Line 1345: while
Line 1345: (
Line 1345: INTCON = 0
Line 1345: )
Line 1347: Unrecognized token: 35
Line 1347: else
Line 1349: ID = static
Line 1349: ID = inline
Line 1349: void
Line 1349: ID = free_arg_pages
Line 1349: (
Line 1349: ID = struct
Line 1349: ID = linux_binprm
Line 1349: *
Line 1349: ID = bprm
Line 1349: )
Line 1350: {
Line 1351: int
Line 1351: ID = i
Line 1351: ;
Line 1353: for
Line 1353: (
Line 1353: ID = i
Line 1353: =
Line 1353: INTCON = 0
Line 1353: ;
Line 1353: ID = i
Line 1353: <
Line 1353: ID = MAX_ARG_PAGES
Line 1353: ;
Line 1353: ID = i
Line 1353: +
Line 1353: +
Line 1353: )
Line 1353: {
Line 1354: if
Line 1354: (
Line 1354: ID = bprm
Line 1354: -
Line 1354: >
Line 1354: ID = page
Line 1354: [
Line 1354: ID = i
Line 1354: ]
Line 1354: )
Line 1355: Unrecognized token: 95
Line 1355: Unrecognized token: 95
Line 1355: ID = free_page
Line 1355: (
Line 1355: ID = bprm
Line 1355: -
Line 1355: >
Line 1355: ID = page
Line 1355: [
Line 1355: ID = i
Line 1355: ]
Line 1355: )
Line 1355: ;
Line 1356: ID = bprm
Line 1356: -
Line 1356: >
Line 1356: ID = page
Line 1356: [
Line 1356: ID = i
Line 1356: ]
Line 1356: =
Line 1356: ID = NULL
Line 1356: ;
Line 1357: }
Line 1358: }
Line 1360: Unrecognized token: 35
Line 1360: ID = endif
Line 1366: int
Line 1366: ID = compat_do_execve
Line 1366: (
Line 1366: char
Line 1366: *
Line 1366: ID = filename
Line 1366: ,
Line 1367: ID = compat_uptr_t
Line 1367: Unrecognized token: 95
Line 1367: Unrecognized token: 95
Line 1367: ID = user
Line 1367: *
Line 1367: ID = argv
Line 1367: ,
Line 1368: ID = compat_uptr_t
Line 1368: Unrecognized token: 95
Line 1368: Unrecognized token: 95
Line 1368: ID = user
Line 1368: *
Line 1368: ID = envp
Line 1368: ,
Line 1369: ID = struct
Line 1369: ID = pt_regs
Line 1369: *
Line 1369: ID = regs
Line 1369: )
Line 1370: {
Line 1371: ID = struct
Line 1371: ID = linux_binprm
Line 1371: ID = bprm
Line 1371: ;
Line 1372: ID = struct
Line 1372: ID = file
Line 1372: *
Line 1372: ID = file
Line 1372: ;
Line 1373: int
Line 1373: ID = retval
Line 1373: ;
Line 1374: int
Line 1374: ID = i
Line 1374: ;
Line 1376: ID = sched_balance_exec
Line 1376: (
Line 1376: )
Line 1376: ;
Line 1378: ID = file
Line 1378: =
Line 1378: ID = open_exec
Line 1378: (
Line 1378: ID = filename
Line 1378: )
Line 1378: ;
Line 1380: ID = retval
Line 1380: =
Line 1380: ID = PTR_ERR
Line 1380: (
Line 1380: ID = file
Line 1380: )
Line 1380: ;
Line 1381: if
Line 1381: (
Line 1381: ID = IS_ERR
Line 1381: (
Line 1381: ID = file
Line 1381: )
Line 1381: )
Line 1382: return
Line 1382: ID = retval
Line 1382: ;
Line 1384: ID = bprm
Line 1384: Unrecognized token: 46
Line 1384: ID = p
Line 1384: =
Line 1384: ID = PAGE_SIZE
Line 1384: *
Line 1384: ID = MAX_ARG_PAGES
Line 1384: -
Line 1384: ID = sizeof
Line 1384: (
Line 1384: void
Line 1384: *
Line 1384: )
Line 1384: ;
Line 1385: ID = memset
Line 1385: (
Line 1385: ID = bprm
Line 1385: Unrecognized token: 46
Line 1385: ID = page
Line 1385: ,
Line 1385: INTCON = 0
Line 1385: ,
Line 1385: ID = MAX_ARG_PAGES
Line 1385: *
Line 1385: ID = sizeof
Line 1385: (
Line 1385: ID = bprm
Line 1385: Unrecognized token: 46
Line 1385: ID = page
Line 1385: [
Line 1385: INTCON = 0
Line 1385: ]
Line 1385: )
Line 1385: )
Line 1385: ;
Line 1387: ID = bprm
Line 1387: Unrecognized token: 46
Line 1387: ID = file
Line 1387: =
Line 1387: ID = file
Line 1387: ;
Line 1388: ID = bprm
Line 1388: Unrecognized token: 46
Line 1388: ID = filename
Line 1388: =
Line 1388: ID = filename
Line 1388: ;
Line 1389: ID = bprm
Line 1389: Unrecognized token: 46
Line 1389: ID = interp
Line 1389: =
Line 1389: ID = filename
Line 1389: ;
Line 1390: ID = bprm
Line 1390: Unrecognized token: 46
Line 1390: ID = sh_bang
Line 1390: =
Line 1390: INTCON = 0
Line 1390: ;
Line 1391: ID = bprm
Line 1391: Unrecognized token: 46
Line 1391: ID = loader
Line 1391: =
Line 1391: INTCON = 0
Line 1391: ;
Line 1392: ID = bprm
Line 1392: Unrecognized token: 46
Line 1392: ID = exec
Line 1392: =
Line 1392: INTCON = 0
Line 1392: ;
Line 1393: ID = bprm
Line 1393: Unrecognized token: 46
Line 1393: ID = security
Line 1393: =
Line 1393: ID = NULL
Line 1393: ;
Line 1394: ID = bprm
Line 1394: Unrecognized token: 46
Line 1394: ID = mm
Line 1394: =
Line 1394: ID = mm_alloc
Line 1394: (
Line 1394: )
Line 1394: ;
Line 1395: ID = retval
Line 1395: =
Line 1395: -
Line 1395: ID = ENOMEM
Line 1395: ;
Line 1396: if
Line 1396: (
Line 1396: !
Line 1396: ID = bprm
Line 1396: Unrecognized token: 46
Line 1396: ID = mm
Line 1396: )
Line 1397: ID = goto
Line 1397: ID = out_file
Line 1397: ;
Line 1399: ID = retval
Line 1399: =
Line 1399: ID = init_new_context
Line 1399: (
Line 1399: ID = current
Line 1399: ,
Line 1399: ID = bprm
Line 1399: Unrecognized token: 46
Line 1399: ID = mm
Line 1399: )
Line 1399: ;
Line 1400: if
Line 1400: (
Line 1400: ID = retval
Line 1400: <
Line 1400: INTCON = 0
Line 1400: )
Line 1401: ID = goto
Line 1401: ID = out_mm
Line 1401: ;
Line 1403: ID = bprm
Line 1403: Unrecognized token: 46
Line 1403: ID = argc
Line 1403: =
Line 1403: ID = compat_count
Line 1403: (
Line 1403: ID = argv
Line 1403: ,
Line 1403: ID = bprm
Line 1403: Unrecognized token: 46
Line 1403: ID = p
Line 1403: /
Line 1403: ID = sizeof
Line 1403: (
Line 1403: ID = compat_uptr_t
Line 1403: )
Line 1403: )
Line 1403: ;
Line 1404: if
Line 1404: (
Line 1404: (
Line 1404: ID = retval
Line 1404: =
Line 1404: ID = bprm
Line 1404: Unrecognized token: 46
Line 1404: ID = argc
Line 1404: )
Line 1404: <
Line 1404: INTCON = 0
Line 1404: )
Line 1405: ID = goto
Line 1405: ID = out_mm
Line 1405: ;
Line 1407: ID = bprm
Line 1407: Unrecognized token: 46
Line 1407: ID = envc
Line 1407: =
Line 1407: ID = compat_count
Line 1407: (
Line 1407: ID = envp
Line 1407: ,
Line 1407: ID = bprm
Line 1407: Unrecognized token: 46
Line 1407: ID = p
Line 1407: /
Line 1407: ID = sizeof
Line 1407: (
Line 1407: ID = compat_uptr_t
Line 1407: )
Line 1407: )
Line 1407: ;
Line 1408: if
Line 1408: (
Line 1408: (
Line 1408: ID = retval
Line 1408: =
Line 1408: ID = bprm
Line 1408: Unrecognized token: 46
Line 1408: ID = envc
Line 1408: )
Line 1408: <
Line 1408: INTCON = 0
Line 1408: )
Line 1409: ID = goto
Line 1409: ID = out_mm
Line 1409: ;
Line 1411: ID = retval
Line 1411: =
Line 1411: ID = security_bprm_alloc
Line 1411: (
Line 1411: Unrecognized token: 38
Line 1411: ID = bprm
Line 1411: )
Line 1411: ;
Line 1412: if
Line 1412: (
Line 1412: ID = retval
Line 1412: )
Line 1413: ID = goto
Line 1413: ID = out
Line 1413: ;
Line 1415: ID = retval
Line 1415: =
Line 1415: ID = prepare_binprm
Line 1415: (
Line 1415: Unrecognized token: 38
Line 1415: ID = bprm
Line 1415: )
Line 1415: ;
Line 1416: if
Line 1416: (
Line 1416: ID = retval
Line 1416: <
Line 1416: INTCON = 0
Line 1416: )
Line 1417: ID = goto
Line 1417: ID = out
Line 1417: ;
Line 1419: ID = retval
Line 1419: =
Line 1419: ID = copy_strings_kernel
Line 1419: (
Line 1419: INTCON = 1
Line 1419: ,
Line 1419: Unrecognized token: 38
Line 1419: ID = bprm
Line 1419: Unrecognized token: 46
Line 1419: ID = filename
Line 1419: ,
Line 1419: Unrecognized token: 38
Line 1419: ID = bprm
Line 1419: )
Line 1419: ;
Line 1420: if
Line 1420: (
Line 1420: ID = retval
Line 1420: <
Line 1420: INTCON = 0
Line 1420: )
Line 1421: ID = goto
Line 1421: ID = out
Line 1421: ;
Line 1423: ID = bprm
Line 1423: Unrecognized token: 46
Line 1423: ID = exec
Line 1423: =
Line 1423: ID = bprm
Line 1423: Unrecognized token: 46
Line 1423: ID = p
Line 1423: ;
Line 1424: ID = retval
Line 1424: =
Line 1424: ID = compat_copy_strings
Line 1424: (
Line 1424: ID = bprm
Line 1424: Unrecognized token: 46
Line 1424: ID = envc
Line 1424: ,
Line 1424: ID = envp
Line 1424: ,
Line 1424: Unrecognized token: 38
Line 1424: ID = bprm
Line 1424: )
Line 1424: ;
Line 1425: if
Line 1425: (
Line 1425: ID = retval
Line 1425: <
Line 1425: INTCON = 0
Line 1425: )
Line 1426: ID = goto
Line 1426: ID = out
Line 1426: ;
Line 1428: ID = retval
Line 1428: =
Line 1428: ID = compat_copy_strings
Line 1428: (
Line 1428: ID = bprm
Line 1428: Unrecognized token: 46
Line 1428: ID = argc
Line 1428: ,
Line 1428: ID = argv
Line 1428: ,
Line 1428: Unrecognized token: 38
Line 1428: ID = bprm
Line 1428: )
Line 1428: ;
Line 1429: if
Line 1429: (
Line 1429: ID = retval
Line 1429: <
Line 1429: INTCON = 0
Line 1429: )
Line 1430: ID = goto
Line 1430: ID = out
Line 1430: ;
Line 1432: ID = retval
Line 1432: =
Line 1432: ID = search_binary_handler
Line 1432: (
Line 1432: Unrecognized token: 38
Line 1432: ID = bprm
Line 1432: ,
Line 1432: ID = regs
Line 1432: )
Line 1432: ;
Line 1433: if
Line 1433: (
Line 1433: ID = retval
Line 1433: >=
Line 1433: INTCON = 0
Line 1433: )
Line 1433: {
Line 1434: ID = free_arg_pages
Line 1434: (
Line 1434: Unrecognized token: 38
Line 1434: ID = bprm
Line 1434: )
Line 1434: ;
Line 1437: ID = security_bprm_free
Line 1437: (
Line 1437: Unrecognized token: 38
Line 1437: ID = bprm
Line 1437: )
Line 1437: ;
Line 1438: return
Line 1438: ID = retval
Line 1438: ;
Line 1439: }
Line 1441: ID = out
Line 1441: Unrecognized token: 58
Line 1443: for
Line 1443: (
Line 1443: ID = i
Line 1443: =
Line 1443: INTCON = 0
Line 1443: ;
Line 1443: ID = i
Line 1443: <
Line 1443: ID = MAX_ARG_PAGES
Line 1443: ;
Line 1443: ID = i
Line 1443: +
Line 1443: +
Line 1443: )
Line 1443: {
Line 1444: ID = struct
Line 1444: ID = page
Line 1444: *
Line 1444: ID = page
Line 1444: =
Line 1444: ID = bprm
Line 1444: Unrecognized token: 46
Line 1444: ID = page
Line 1444: [
Line 1444: ID = i
Line 1444: ]
Line 1444: ;
Line 1445: if
Line 1445: (
Line 1445: ID = page
Line 1445: )
Line 1446: Unrecognized token: 95
Line 1446: Unrecognized token: 95
Line 1446: ID = free_page
Line 1446: (
Line 1446: ID = page
Line 1446: )
Line 1446: ;
Line 1447: }
Line 1449: if
Line 1449: (
Line 1449: ID = bprm
Line 1449: Unrecognized token: 46
Line 1449: ID = security
Line 1449: )
Line 1450: ID = security_bprm_free
Line 1450: (
Line 1450: Unrecognized token: 38
Line 1450: ID = bprm
Line 1450: )
Line 1450: ;
Line 1452: ID = out_mm
Line 1452: Unrecognized token: 58
Line 1453: if
Line 1453: (
Line 1453: ID = bprm
Line 1453: Unrecognized token: 46
Line 1453: ID = mm
Line 1453: )
Line 1454: ID = mmdrop
Line 1454: (
Line 1454: ID = bprm
Line 1454: Unrecognized token: 46
Line 1454: ID = mm
Line 1454: )
Line 1454: ;
Line 1456: ID = out_file
Line 1456: Unrecognized token: 58
Line 1457: if
Line 1457: (
Line 1457: ID = bprm
Line 1457: Unrecognized token: 46
Line 1457: ID = file
Line 1457: )
Line 1457: {
Line 1458: ID = allow_write_access
Line 1458: (
Line 1458: ID = bprm
Line 1458: Unrecognized token: 46
Line 1458: ID = file
Line 1458: )
Line 1458: ;
Line 1459: ID = fput
Line 1459: (
Line 1459: ID = bprm
Line 1459: Unrecognized token: 46
Line 1459: ID = file
Line 1459: )
Line 1459: ;
Line 1460: }
Line 1462: return
Line 1462: ID = retval
Line 1462: ;
Line 1463: }
Line 1465: Unrecognized token: 35
Line 1465: ID = define
Line 1465: Unrecognized token: 95
Line 1465: Unrecognized token: 95
Line 1465: ID = COMPAT_NFDBITS
Line 1465: (
Line 1465: INTCON = 8
Line 1465: *
Line 1465: ID = sizeof
Line 1465: (
Line 1465: ID = compat_ulong_t
Line 1465: )
Line 1465: )
Line 1467: Unrecognized token: 35
Line 1467: ID = define
Line 1467: ID = ROUND_UP
Line 1467: (
Line 1467: ID = x
Line 1467: ,
Line 1467: ID = y
Line 1467: )
Line 1467: (
Line 1467: (
Line 1467: (
Line 1467: ID = x
Line 1467: )
Line 1467: +
Line 1467: (
Line 1467: ID = y
Line 1467: )
Line 1467: -
Line 1467: INTCON = 1
Line 1467: )
Line 1467: /
Line 1467: (
Line 1467: ID = y
Line 1467: )
Line 1467: )
Line 1473: ID = static
Line 1473: ID = inline
Line 1474: int
Line 1474: ID = compat_get_fd_set
Line 1474: (
Line 1474: ID = unsigned
Line 1474: ID = long
Line 1474: ID = nr
Line 1474: ,
Line 1474: ID = compat_ulong_t
Line 1474: Unrecognized token: 95
Line 1474: Unrecognized token: 95
Line 1474: ID = user
Line 1474: *
Line 1474: ID = ufdset
Line 1474: ,
Line 1475: ID = unsigned
Line 1475: ID = long
Line 1475: *
Line 1475: ID = fdset
Line 1475: )
Line 1476: {
Line 1477: ID = nr
Line 1477: =
Line 1477: ID = ROUND_UP
Line 1477: (
Line 1477: ID = nr
Line 1477: ,
Line 1477: Unrecognized token: 95
Line 1477: Unrecognized token: 95
Line 1477: ID = COMPAT_NFDBITS
Line 1477: )
Line 1477: ;
Line 1478: if
Line 1478: (
Line 1478: ID = ufdset
Line 1478: )
Line 1478: {
Line 1479: ID = unsigned
Line 1479: ID = long
Line 1479: ID = odd
Line 1479: ;
Line 1481: if
Line 1481: (
Line 1481: ID = verify_area
Line 1481: (
Line 1481: ID = VERIFY_WRITE
Line 1481: ,
Line 1481: ID = ufdset
Line 1481: ,
Line 1481: ID = nr
Line 1481: *
Line 1481: ID = sizeof
Line 1481: (
Line 1481: ID = compat_ulong_t
Line 1481: )
Line 1481: )
Line 1481: )
Line 1482: return
Line 1482: -
Line 1482: ID = EFAULT
Line 1482: ;
Line 1484: ID = odd
Line 1484: =
Line 1484: ID = nr
Line 1484: Unrecognized token: 38
Line 1484: INTCON = 1
Line 1484: ID = UL
Line 1484: ;
Line 1485: ID = nr
Line 1485: Unrecognized token: 38
Line 1485: =
Line 1485: Unrecognized token: 126
Line 1485: INTCON = 1
Line 1485: ID = UL
Line 1485: ;
Line 1486: while
Line 1486: (
Line 1486: ID = nr
Line 1486: )
Line 1486: {
Line 1487: ID = unsigned
Line 1487: ID = long
Line 1487: ID = h
Line 1487: ,
Line 1487: ID = l
Line 1487: ;
Line 1488: Unrecognized token: 95
Line 1488: Unrecognized token: 95
Line 1488: ID = get_user
Line 1488: (
Line 1488: ID = l
Line 1488: ,
Line 1488: ID = ufdset
Line 1488: )
Line 1488: ;
Line 1489: Unrecognized token: 95
Line 1489: Unrecognized token: 95
Line 1489: ID = get_user
Line 1489: (
Line 1489: ID = h
Line 1489: ,
Line 1489: ID = ufdset
Line 1489: +
Line 1489: INTCON = 1
Line 1489: )
Line 1489: ;
Line 1490: ID = ufdset
Line 1490: +
Line 1490: =
Line 1490: INTCON = 2
Line 1490: ;
Line 1491: *
Line 1491: ID = fdset
Line 1491: +
Line 1491: +
Line 1491: =
Line 1491: ID = h
Line 1491: <
Line 1491: <
Line 1491: INTCON = 32
Line 1491: Unrecognized token: 124
Line 1491: ID = l
Line 1491: ;
Line 1492: ID = nr
Line 1492: -
Line 1492: =
Line 1492: INTCON = 2
Line 1492: ;
Line 1493: }
Line 1494: if
Line 1494: (
Line 1494: ID = odd
Line 1494: )
Line 1495: Unrecognized token: 95
Line 1495: Unrecognized token: 95
Line 1495: ID = get_user
Line 1495: (
Line 1495: *
Line 1495: ID = fdset
Line 1495: ,
Line 1495: ID = ufdset
Line 1495: )
Line 1495: ;
Line 1496: }
Line 1496: else
Line 1496: {
Line 1501: ID = memset
Line 1501: (
Line 1501: ID = fdset
Line 1501: ,
Line 1501: INTCON = 0
Line 1501: ,
Line 1501: (
Line 1501: (
Line 1501: ID = nr
Line 1501: +
Line 1501: INTCON = 1
Line 1501: )
Line 1501: Unrecognized token: 38
Line 1501: Unrecognized token: 126
Line 1501: INTCON = 1
Line 1501: )
Line 1501: *
Line 1501: ID = sizeof
Line 1501: (
Line 1501: ID = compat_ulong_t
Line 1501: )
Line 1501: )
Line 1501: ;
Line 1502: }
Line 1503: return
Line 1503: INTCON = 0
Line 1503: ;
Line 1504: }
Line 1506: ID = static
Line 1506: ID = inline
Line 1507: void
Line 1507: ID = compat_set_fd_set
Line 1507: (
Line 1507: ID = unsigned
Line 1507: ID = long
Line 1507: ID = nr
Line 1507: ,
Line 1507: ID = compat_ulong_t
Line 1507: Unrecognized token: 95
Line 1507: Unrecognized token: 95
Line 1507: ID = user
Line 1507: *
Line 1507: ID = ufdset
Line 1507: ,
Line 1508: ID = unsigned
Line 1508: ID = long
Line 1508: *
Line 1508: ID = fdset
Line 1508: )
Line 1509: {
Line 1510: ID = unsigned
Line 1510: ID = long
Line 1510: ID = odd
Line 1510: ;
Line 1511: ID = nr
Line 1511: =
Line 1511: ID = ROUND_UP
Line 1511: (
Line 1511: ID = nr
Line 1511: ,
Line 1511: Unrecognized token: 95
Line 1511: Unrecognized token: 95
Line 1511: ID = COMPAT_NFDBITS
Line 1511: )
Line 1511: ;
Line 1513: if
Line 1513: (
Line 1513: !
Line 1513: ID = ufdset
Line 1513: )
Line 1514: return
Line 1514: ;
Line 1516: ID = odd
Line 1516: =
Line 1516: ID = nr
Line 1516: Unrecognized token: 38
Line 1516: INTCON = 1
Line 1516: ID = UL
Line 1516: ;
Line 1517: ID = nr
Line 1517: Unrecognized token: 38
Line 1517: =
Line 1517: Unrecognized token: 126
Line 1517: INTCON = 1
Line 1517: ID = UL
Line 1517: ;
Line 1518: while
Line 1518: (
Line 1518: ID = nr
Line 1518: )
Line 1518: {
Line 1519: ID = unsigned
Line 1519: ID = long
Line 1519: ID = h
Line 1519: ,
Line 1519: ID = l
Line 1519: ;
Line 1520: ID = l
Line 1520: =
Line 1520: *
Line 1520: ID = fdset
Line 1520: +
Line 1520: +
Line 1520: ;
Line 1521: ID = h
Line 1521: =
Line 1521: ID = l
Line 1521: >
Line 1521: >
Line 1521: INTCON = 32
Line 1521: ;
Line 1522: Unrecognized token: 95
Line 1522: Unrecognized token: 95
Line 1522: ID = put_user
Line 1522: (
Line 1522: ID = l
Line 1522: ,
Line 1522: ID = ufdset
Line 1522: )
Line 1522: ;
Line 1523: Unrecognized token: 95
Line 1523: Unrecognized token: 95
Line 1523: ID = put_user
Line 1523: (
Line 1523: ID = h
Line 1523: ,
Line 1523: ID = ufdset
Line 1523: +
Line 1523: INTCON = 1
Line 1523: )
Line 1523: ;
Line 1524: ID = ufdset
Line 1524: +
Line 1524: =
Line 1524: INTCON = 2
Line 1524: ;
Line 1525: ID = nr
Line 1525: -
Line 1525: =
Line 1525: INTCON = 2
Line 1525: ;
Line 1526: }
Line 1527: if
Line 1527: (
Line 1527: ID = odd
Line 1527: )
Line 1528: Unrecognized token: 95
Line 1528: Unrecognized token: 95
Line 1528: ID = put_user
Line 1528: (
Line 1528: *
Line 1528: ID = fdset
Line 1528: ,
Line 1528: ID = ufdset
Line 1528: )
Line 1528: ;
Line 1529: }
Line 1536: ID = static
Line 1536: void
Line 1536: *
Line 1536: ID = select_bits_alloc
Line 1536: (
Line 1536: int
Line 1536: ID = size
Line 1536: )
Line 1537: {
Line 1538: return
Line 1538: ID = kmalloc
Line 1538: (
Line 1538: INTCON = 6
Line 1538: *
Line 1538: ID = size
Line 1538: ,
Line 1538: ID = GFP_KERNEL
Line 1538: )
Line 1538: ;
Line 1539: }
Line 1541: ID = static
Line 1541: void
Line 1541: ID = select_bits_free
Line 1541: (
Line 1541: void
Line 1541: *
Line 1541: ID = bits
Line 1541: ,
Line 1541: int
Line 1541: ID = size
Line 1541: )
Line 1542: {
Line 1543: ID = kfree
Line 1543: (
Line 1543: ID = bits
Line 1543: )
Line 1543: ;
Line 1544: }
Line 1554: Unrecognized token: 35
Line 1554: ID = define
Line 1554: ID = MAX_SELECT_SECONDS
Line 1554: Unrecognized token: 92
Line 1555: (
Line 1555: (
Line 1555: ID = unsigned
Line 1555: ID = long
Line 1555: )
Line 1555: (
Line 1555: ID = MAX_SCHEDULE_TIMEOUT
Line 1555: /
Line 1555: ID = HZ
Line 1555: )
Line 1555: -
Line 1555: INTCON = 1
Line 1555: )
Line 1557: ID = asmlinkage
Line 1557: ID = long
Line 1558: ID = compat_sys_select
Line 1558: (
Line 1558: int
Line 1558: ID = n
Line 1558: ,
Line 1558: ID = compat_ulong_t
Line 1558: Unrecognized token: 95
Line 1558: Unrecognized token: 95
Line 1558: ID = user
Line 1558: *
Line 1558: ID = inp
Line 1558: ,
Line 1558: ID = compat_ulong_t
Line 1558: Unrecognized token: 95
Line 1558: Unrecognized token: 95
Line 1558: ID = user
Line 1558: *
Line 1558: ID = outp
Line 1558: ,
Line 1559: ID = compat_ulong_t
Line 1559: Unrecognized token: 95
Line 1559: Unrecognized token: 95
Line 1559: ID = user
Line 1559: *
Line 1559: ID = exp
Line 1559: ,
Line 1559: ID = struct
Line 1559: ID = compat_timeval
Line 1559: Unrecognized token: 95
Line 1559: Unrecognized token: 95
Line 1559: ID = user
Line 1559: *
Line 1559: ID = tvp
Line 1559: )
Line 1560: {
Line 1561: ID = fd_set_bits
Line 1561: ID = fds
Line 1561: ;
Line 1562: char
Line 1562: *
Line 1562: ID = bits
Line 1562: ;
Line 1563: ID = long
Line 1563: ID = timeout
Line 1563: ;
Line 1564: int
Line 1564: ID = ret
Line 1564: ,
Line 1564: ID = size
Line 1564: ,
Line 1564: ID = max_fdset
Line 1564: ;
Line 1566: ID = timeout
Line 1566: =
Line 1566: ID = MAX_SCHEDULE_TIMEOUT
Line 1566: ;
Line 1567: if
Line 1567: (
Line 1567: ID = tvp
Line 1567: )
Line 1567: {
Line 1568: ID = time_t
Line 1568: ID = sec
Line 1568: ,
Line 1568: ID = usec
Line 1568: ;
Line 1570: if
Line 1570: (
Line 1570: (
Line 1570: ID = ret
Line 1570: =
Line 1570: ID = verify_area
Line 1570: (
Line 1570: ID = VERIFY_READ
Line 1570: ,
Line 1570: ID = tvp
Line 1570: ,
Line 1570: ID = sizeof
Line 1570: (
Line 1570: *
Line 1570: ID = tvp
Line 1570: )
Line 1570: )
Line 1570: )
Line 1571: ||
Line 1571: (
Line 1571: ID = ret
Line 1571: =
Line 1571: Unrecognized token: 95
Line 1571: Unrecognized token: 95
Line 1571: ID = get_user
Line 1571: (
Line 1571: ID = sec
Line 1571: ,
Line 1571: Unrecognized token: 38
Line 1571: ID = tvp
Line 1571: -
Line 1571: >
Line 1571: ID = tv_sec
Line 1571: )
Line 1571: )
Line 1572: ||
Line 1572: (
Line 1572: ID = ret
Line 1572: =
Line 1572: Unrecognized token: 95
Line 1572: Unrecognized token: 95
Line 1572: ID = get_user
Line 1572: (
Line 1572: ID = usec
Line 1572: ,
Line 1572: Unrecognized token: 38
Line 1572: ID = tvp
Line 1572: -
Line 1572: >
Line 1572: ID = tv_usec
Line 1572: )
Line 1572: )
Line 1572: )
Line 1573: ID = goto
Line 1573: ID = out_nofds
Line 1573: ;
Line 1575: ID = ret
Line 1575: =
Line 1575: -
Line 1575: ID = EINVAL
Line 1575: ;
Line 1576: if
Line 1576: (
Line 1576: ID = sec
Line 1576: <
Line 1576: INTCON = 0
Line 1576: ||
Line 1576: ID = usec
Line 1576: <
Line 1576: INTCON = 0
Line 1576: )
Line 1577: ID = goto
Line 1577: ID = out_nofds
Line 1577: ;
Line 1579: if
Line 1579: (
Line 1579: (
Line 1579: ID = unsigned
Line 1579: ID = long
Line 1579: )
Line 1579: ID = sec
Line 1579: <
Line 1579: ID = MAX_SELECT_SECONDS
Line 1579: )
Line 1579: {
Line 1580: ID = timeout
Line 1580: =
Line 1580: ID = ROUND_UP
Line 1580: (
Line 1580: ID = usec
Line 1580: ,
Line 1580: INTCON = 1000000
Line 1580: /
Line 1580: ID = HZ
Line 1580: )
Line 1580: ;
Line 1581: ID = timeout
Line 1581: +
Line 1581: =
Line 1581: ID = sec
Line 1581: *
Line 1581: (
Line 1581: ID = unsigned
Line 1581: ID = long
Line 1581: )
Line 1581: ID = HZ
Line 1581: ;
Line 1582: }
Line 1583: }
Line 1585: ID = ret
Line 1585: =
Line 1585: -
Line 1585: ID = EINVAL
Line 1585: ;
Line 1586: if
Line 1586: (
Line 1586: ID = n
Line 1586: <
Line 1586: INTCON = 0
Line 1586: )
Line 1587: ID = goto
Line 1587: ID = out_nofds
Line 1587: ;
Line 1590: ID = max_fdset
Line 1590: =
Line 1590: ID = current
Line 1590: -
Line 1590: >
Line 1590: ID = files
Line 1590: -
Line 1590: >
Line 1590: ID = max_fdset
Line 1590: ;
Line 1591: if
Line 1591: (
Line 1591: ID = n
Line 1591: >
Line 1591: ID = max_fdset
Line 1591: )
Line 1592: ID = n
Line 1592: =
Line 1592: ID = max_fdset
Line 1592: ;
Line 1599: ID = ret
Line 1599: =
Line 1599: -
Line 1599: ID = ENOMEM
Line 1599: ;
Line 1600: ID = size
Line 1600: =
Line 1600: ID = FDS_BYTES
Line 1600: (
Line 1600: ID = n
Line 1600: )
Line 1600: ;
Line 1601: ID = bits
Line 1601: =
Line 1601: ID = select_bits_alloc
Line 1601: (
Line 1601: ID = size
Line 1601: )
Line 1601: ;
Line 1602: if
Line 1602: (
Line 1602: !
Line 1602: ID = bits
Line 1602: )
Line 1603: ID = goto
Line 1603: ID = out_nofds
Line 1603: ;
Line 1604: ID = fds
Line 1604: Unrecognized token: 46
Line 1604: ID = in
Line 1604: =
Line 1604: (
Line 1604: ID = unsigned
Line 1604: ID = long
Line 1604: *
Line 1604: )
Line 1604: ID = bits
Line 1604: ;
Line 1605: ID = fds
Line 1605: Unrecognized token: 46
Line 1605: ID = out
Line 1605: =
Line 1605: (
Line 1605: ID = unsigned
Line 1605: ID = long
Line 1605: *
Line 1605: )
Line 1605: (
Line 1605: ID = bits
Line 1605: +
Line 1605: ID = size
Line 1605: )
Line 1605: ;
Line 1606: ID = fds
Line 1606: Unrecognized token: 46
Line 1606: ID = ex
Line 1606: =
Line 1606: (
Line 1606: ID = unsigned
Line 1606: ID = long
Line 1606: *
Line 1606: )
Line 1606: (
Line 1606: ID = bits
Line 1606: +
Line 1606: INTCON = 2
Line 1606: *
Line 1606: ID = size
Line 1606: )
Line 1606: ;
Line 1607: ID = fds
Line 1607: Unrecognized token: 46
Line 1607: ID = res_in
Line 1607: =
Line 1607: (
Line 1607: ID = unsigned
Line 1607: ID = long
Line 1607: *
Line 1607: )
Line 1607: (
Line 1607: ID = bits
Line 1607: +
Line 1607: INTCON = 3
Line 1607: *
Line 1607: ID = size
Line 1607: )
Line 1607: ;
Line 1608: ID = fds
Line 1608: Unrecognized token: 46
Line 1608: ID = res_out
Line 1608: =
Line 1608: (
Line 1608: ID = unsigned
Line 1608: ID = long
Line 1608: *
Line 1608: )
Line 1608: (
Line 1608: ID = bits
Line 1608: +
Line 1608: INTCON = 4
Line 1608: *
Line 1608: ID = size
Line 1608: )
Line 1608: ;
Line 1609: ID = fds
Line 1609: Unrecognized token: 46
Line 1609: ID = res_ex
Line 1609: =
Line 1609: (
Line 1609: ID = unsigned
Line 1609: ID = long
Line 1609: *
Line 1609: )
Line 1609: (
Line 1609: ID = bits
Line 1609: +
Line 1609: INTCON = 5
Line 1609: *
Line 1609: ID = size
Line 1609: )
Line 1609: ;
Line 1611: if
Line 1611: (
Line 1611: (
Line 1611: ID = ret
Line 1611: =
Line 1611: ID = compat_get_fd_set
Line 1611: (
Line 1611: ID = n
Line 1611: ,
Line 1611: ID = inp
Line 1611: ,
Line 1611: ID = fds
Line 1611: Unrecognized token: 46
Line 1611: ID = in
Line 1611: )
Line 1611: )
Line 1611: ||
Line 1612: (
Line 1612: ID = ret
Line 1612: =
Line 1612: ID = compat_get_fd_set
Line 1612: (
Line 1612: ID = n
Line 1612: ,
Line 1612: ID = outp
Line 1612: ,
Line 1612: ID = fds
Line 1612: Unrecognized token: 46
Line 1612: ID = out
Line 1612: )
Line 1612: )
Line 1612: ||
Line 1613: (
Line 1613: ID = ret
Line 1613: =
Line 1613: ID = compat_get_fd_set
Line 1613: (
Line 1613: ID = n
Line 1613: ,
Line 1613: ID = exp
Line 1613: ,
Line 1613: ID = fds
Line 1613: Unrecognized token: 46
Line 1613: ID = ex
Line 1613: )
Line 1613: )
Line 1613: )
Line 1614: ID = goto
Line 1614: ID = out
Line 1614: ;
Line 1615: ID = zero_fd_set
Line 1615: (
Line 1615: ID = n
Line 1615: ,
Line 1615: ID = fds
Line 1615: Unrecognized token: 46
Line 1615: ID = res_in
Line 1615: )
Line 1615: ;
Line 1616: ID = zero_fd_set
Line 1616: (
Line 1616: ID = n
Line 1616: ,
Line 1616: ID = fds
Line 1616: Unrecognized token: 46
Line 1616: ID = res_out
Line 1616: )
Line 1616: ;
Line 1617: ID = zero_fd_set
Line 1617: (
Line 1617: ID = n
Line 1617: ,
Line 1617: ID = fds
Line 1617: Unrecognized token: 46
Line 1617: ID = res_ex
Line 1617: )
Line 1617: ;
Line 1619: ID = ret
Line 1619: =
Line 1619: ID = do_select
Line 1619: (
Line 1619: ID = n
Line 1619: ,
Line 1619: Unrecognized token: 38
Line 1619: ID = fds
Line 1619: ,
Line 1619: Unrecognized token: 38
Line 1619: ID = timeout
Line 1619: )
Line 1619: ;
Line 1621: if
Line 1621: (
Line 1621: ID = tvp
Line 1621: &&
Line 1621: !
Line 1621: (
Line 1621: ID = current
Line 1621: -
Line 1621: >
Line 1621: ID = personality
Line 1621: Unrecognized token: 38
Line 1621: ID = STICKY_TIMEOUTS
Line 1621: )
Line 1621: )
Line 1621: {
Line 1622: ID = time_t
Line 1622: ID = sec
Line 1622: =
Line 1622: INTCON = 0
Line 1622: ,
Line 1622: ID = usec
Line 1622: =
Line 1622: INTCON = 0
Line 1622: ;
Line 1623: if
Line 1623: (
Line 1623: ID = timeout
Line 1623: )
Line 1623: {
Line 1624: ID = sec
Line 1624: =
Line 1624: ID = timeout
Line 1624: /
Line 1624: ID = HZ
Line 1624: ;
Line 1625: ID = usec
Line 1625: =
Line 1625: ID = timeout
Line 1625: Unrecognized token: 37
Line 1625: ID = HZ
Line 1625: ;
Line 1626: ID = usec
Line 1626: *
Line 1626: =
Line 1626: (
Line 1626: INTCON = 1000000
Line 1626: /
Line 1626: ID = HZ
Line 1626: )
Line 1626: ;
Line 1627: }
Line 1628: if
Line 1628: (
Line 1628: ID = put_user
Line 1628: (
Line 1628: ID = sec
Line 1628: ,
Line 1628: Unrecognized token: 38
Line 1628: ID = tvp
Line 1628: -
Line 1628: >
Line 1628: ID = tv_sec
Line 1628: )
Line 1628: ||
Line 1629: ID = put_user
Line 1629: (
Line 1629: ID = usec
Line 1629: ,
Line 1629: Unrecognized token: 38
Line 1629: ID = tvp
Line 1629: -
Line 1629: >
Line 1629: ID = tv_usec
Line 1629: )
Line 1629: )
Line 1630: ID = ret
Line 1630: =
Line 1630: -
Line 1630: ID = EFAULT
Line 1630: ;
Line 1631: }
Line 1633: if
Line 1633: (
Line 1633: ID = ret
Line 1633: <
Line 1633: INTCON = 0
Line 1633: )
Line 1634: ID = goto
Line 1634: ID = out
Line 1634: ;
Line 1635: if
Line 1635: (
Line 1635: !
Line 1635: ID = ret
Line 1635: )
Line 1635: {
Line 1636: ID = ret
Line 1636: =
Line 1636: -
Line 1636: ID = ERESTARTNOHAND
Line 1636: ;
Line 1637: if
Line 1637: (
Line 1637: ID = signal_pending
Line 1637: (
Line 1637: ID = current
Line 1637: )
Line 1637: )
Line 1638: ID = goto
Line 1638: ID = out
Line 1638: ;
Line 1639: ID = ret
Line 1639: =
Line 1639: INTCON = 0
Line 1639: ;
Line 1640: }
Line 1642: ID = compat_set_fd_set
Line 1642: (
Line 1642: ID = n
Line 1642: ,
Line 1642: ID = inp
Line 1642: ,
Line 1642: ID = fds
Line 1642: Unrecognized token: 46
Line 1642: ID = res_in
Line 1642: )
Line 1642: ;
Line 1643: ID = compat_set_fd_set
Line 1643: (
Line 1643: ID = n
Line 1643: ,
Line 1643: ID = outp
Line 1643: ,
Line 1643: ID = fds
Line 1643: Unrecognized token: 46
Line 1643: ID = res_out
Line 1643: )
Line 1643: ;
Line 1644: ID = compat_set_fd_set
Line 1644: (
Line 1644: ID = n
Line 1644: ,
Line 1644: ID = exp
Line 1644: ,
Line 1644: ID = fds
Line 1644: Unrecognized token: 46
Line 1644: ID = res_ex
Line 1644: )
Line 1644: ;
Line 1646: ID = out
Line 1646: Unrecognized token: 58
Line 1647: ID = select_bits_free
Line 1647: (
Line 1647: ID = bits
Line 1647: ,
Line 1647: ID = size
Line 1647: )
Line 1647: ;
Line 1648: ID = out_nofds
Line 1648: Unrecognized token: 58
Line 1649: return
Line 1649: ID = ret
Line 1649: ;
Line 1650: }
Line 1652: Unrecognized token: 35
Line 1652: if
Line 1652: ID = defined
Line 1652: (
Line 1652: ID = CONFIG_NFSD
Line 1652: )
Line 1652: ||
Line 1652: ID = defined
Line 1652: (
Line 1652: ID = CONFIG_NFSD_MODULE
Line 1652: )
Line 1654: ID = struct
Line 1654: ID = compat_nfsctl_svc
Line 1654: {
Line 1655: ID = u16
Line 1655: ID = svc32_port
Line 1655: ;
Line 1656: ID = s32
Line 1656: ID = svc32_nthreads
Line 1656: ;
Line 1657: }
Line 1657: ;
Line 1659: ID = struct
Line 1659: ID = compat_nfsctl_client
Line 1659: {
Line 1660: ID = s8
Line 1660: ID = cl32_ident
Line 1660: [
Line 1660: ID = NFSCLNT_IDMAX
Line 1660: +
Line 1660: INTCON = 1
Line 1660: ]
Line 1660: ;
Line 1661: ID = s32
Line 1661: ID = cl32_naddr
Line 1661: ;
Line 1662: ID = struct
Line 1662: ID = in_addr
Line 1662: ID = cl32_addrlist
Line 1662: [
Line 1662: ID = NFSCLNT_ADDRMAX
Line 1662: ]
Line 1662: ;
Line 1663: ID = s32
Line 1663: ID = cl32_fhkeytype
Line 1663: ;
Line 1664: ID = s32
Line 1664: ID = cl32_fhkeylen
Line 1664: ;
Line 1665: ID = u8
Line 1665: ID = cl32_fhkey
Line 1665: [
Line 1665: ID = NFSCLNT_KEYMAX
Line 1665: ]
Line 1665: ;
Line 1666: }
Line 1666: ;
Line 1668: ID = struct
Line 1668: ID = compat_nfsctl_export
Line 1668: {
Line 1669: char
Line 1669: ID = ex32_client
Line 1669: [
Line 1669: ID = NFSCLNT_IDMAX
Line 1669: +
Line 1669: INTCON = 1
Line 1669: ]
Line 1669: ;
Line 1670: char
Line 1670: ID = ex32_path
Line 1670: [
Line 1670: ID = NFS_MAXPATHLEN
Line 1670: +
Line 1670: INTCON = 1
Line 1670: ]
Line 1670: ;
Line 1671: ID = compat_dev_t
Line 1671: ID = ex32_dev
Line 1671: ;
Line 1672: ID = compat_ino_t
Line 1672: ID = ex32_ino
Line 1672: ;
Line 1673: ID = compat_int_t
Line 1673: ID = ex32_flags
Line 1673: ;
Line 1674: ID = compat_uid_t
Line 1674: ID = ex32_anon_uid
Line 1674: ;
Line 1675: ID = compat_gid_t
Line 1675: ID = ex32_anon_gid
Line 1675: ;
Line 1676: }
Line 1676: ;
Line 1678: ID = struct
Line 1678: ID = compat_nfsctl_fdparm
Line 1678: {
Line 1679: ID = struct
Line 1679: ID = sockaddr
Line 1679: ID = gd32_addr
Line 1679: ;
Line 1680: ID = s8
Line 1680: ID = gd32_path
Line 1680: [
Line 1680: ID = NFS_MAXPATHLEN
Line 1680: +
Line 1680: INTCON = 1
Line 1680: ]
Line 1680: ;
Line 1681: ID = compat_int_t
Line 1681: ID = gd32_version
Line 1681: ;
Line 1682: }
Line 1682: ;
Line 1684: ID = struct
Line 1684: ID = compat_nfsctl_fsparm
Line 1684: {
Line 1685: ID = struct
Line 1685: ID = sockaddr
Line 1685: ID = gd32_addr
Line 1685: ;
Line 1686: ID = s8
Line 1686: ID = gd32_path
Line 1686: [
Line 1686: ID = NFS_MAXPATHLEN
Line 1686: +
Line 1686: INTCON = 1
Line 1686: ]
Line 1686: ;
Line 1687: ID = compat_int_t
Line 1687: ID = gd32_maxlen
Line 1687: ;
Line 1688: }
Line 1688: ;
Line 1690: ID = struct
Line 1690: ID = compat_nfsctl_arg
Line 1690: {
Line 1691: ID = compat_int_t
Line 1691: ID = ca32_version
Line 1691: ;
Line 1692: ID = union
Line 1692: {
Line 1693: ID = struct
Line 1693: ID = compat_nfsctl_svc
Line 1693: ID = u32_svc
Line 1693: ;
Line 1694: ID = struct
Line 1694: ID = compat_nfsctl_client
Line 1694: ID = u32_client
Line 1694: ;
Line 1695: ID = struct
Line 1695: ID = compat_nfsctl_export
Line 1695: ID = u32_export
Line 1695: ;
Line 1696: ID = struct
Line 1696: ID = compat_nfsctl_fdparm
Line 1696: ID = u32_getfd
Line 1696: ;
Line 1697: ID = struct
Line 1697: ID = compat_nfsctl_fsparm
Line 1697: ID = u32_getfs
Line 1697: ;
Line 1698: }
Line 1698: ID = u
Line 1698: ;
Line 1699: Unrecognized token: 35
Line 1699: ID = define
Line 1699: ID = ca32_svc
Line 1699: ID = u
Line 1699: Unrecognized token: 46
Line 1699: ID = u32_svc
Line 1700: Unrecognized token: 35
Line 1700: ID = define
Line 1700: ID = ca32_client
Line 1700: ID = u
Line 1700: Unrecognized token: 46
Line 1700: ID = u32_client
Line 1701: Unrecognized token: 35
Line 1701: ID = define
Line 1701: ID = ca32_export
Line 1701: ID = u
Line 1701: Unrecognized token: 46
Line 1701: ID = u32_export
Line 1702: Unrecognized token: 35
Line 1702: ID = define
Line 1702: ID = ca32_getfd
Line 1702: ID = u
Line 1702: Unrecognized token: 46
Line 1702: ID = u32_getfd
Line 1703: Unrecognized token: 35
Line 1703: ID = define
Line 1703: ID = ca32_getfs
Line 1703: ID = u
Line 1703: Unrecognized token: 46
Line 1703: ID = u32_getfs
Line 1704: }
Line 1704: ;
Line 1706: ID = union
Line 1706: ID = compat_nfsctl_res
Line 1706: {
Line 1707: Unrecognized token: 95
Line 1707: Unrecognized token: 95
Line 1707: ID = u8
Line 1707: ID = cr32_getfh
Line 1707: [
Line 1707: ID = NFS_FHSIZE
Line 1707: ]
Line 1707: ;
Line 1708: ID = struct
Line 1708: ID = knfsd_fh
Line 1708: ID = cr32_getfs
Line 1708: ;
Line 1709: }
Line 1709: ;
Line 1711: ID = static
Line 1711: int
Line 1711: ID = compat_nfs_svc_trans
Line 1711: (
Line 1711: ID = struct
Line 1711: ID = nfsctl_arg
Line 1711: *
Line 1711: ID = karg
Line 1711: ,
Line 1711: ID = struct
Line 1711: ID = compat_nfsctl_arg
Line 1711: Unrecognized token: 95
Line 1711: Unrecognized token: 95
Line 1711: ID = user
Line 1711: *
Line 1711: ID = arg
Line 1711: )
Line 1712: {
Line 1713: int
Line 1713: ID = err
Line 1713: ;
Line 1715: ID = err
Line 1715: =
Line 1715: ID = access_ok
Line 1715: (
Line 1715: ID = VERIFY_READ
Line 1715: ,
Line 1715: Unrecognized token: 38
Line 1715: ID = arg
Line 1715: -
Line 1715: >
Line 1715: ID = ca32_svc
Line 1715: ,
Line 1715: ID = sizeof
Line 1715: (
Line 1715: ID = arg
Line 1715: -
Line 1715: >
Line 1715: ID = ca32_svc
Line 1715: )
Line 1715: )
Line 1715: ;
Line 1716: ID = err
Line 1716: Unrecognized token: 124
Line 1716: =
Line 1716: ID = get_user
Line 1716: (
Line 1716: ID = karg
Line 1716: -
Line 1716: >
Line 1716: ID = ca_version
Line 1716: ,
Line 1716: Unrecognized token: 38
Line 1716: ID = arg
Line 1716: -
Line 1716: >
Line 1716: ID = ca32_version
Line 1716: )
Line 1716: ;
Line 1717: ID = err
Line 1717: Unrecognized token: 124
Line 1717: =
Line 1717: Unrecognized token: 95
Line 1717: Unrecognized token: 95
Line 1717: ID = get_user
Line 1717: (
Line 1717: ID = karg
Line 1717: -
Line 1717: >
Line 1717: ID = ca_svc
Line 1717: Unrecognized token: 46
Line 1717: ID = svc_port
Line 1717: ,
Line 1717: Unrecognized token: 38
Line 1717: ID = arg
Line 1717: -
Line 1717: >
Line 1717: ID = ca32_svc
Line 1717: Unrecognized token: 46
Line 1717: ID = svc32_port
Line 1717: )
Line 1717: ;
Line 1718: ID = err
Line 1718: Unrecognized token: 124
Line 1718: =
Line 1718: Unrecognized token: 95
Line 1718: Unrecognized token: 95
Line 1718: ID = get_user
Line 1718: (
Line 1718: ID = karg
Line 1718: -
Line 1718: >
Line 1718: ID = ca_svc
Line 1718: Unrecognized token: 46
Line 1718: ID = svc_nthreads
Line 1718: ,
Line 1718: Unrecognized token: 38
Line 1718: ID = arg
Line 1718: -
Line 1718: >
Line 1718: ID = ca32_svc
Line 1718: Unrecognized token: 46
Line 1718: ID = svc32_nthreads
Line 1718: )
Line 1718: ;
Line 1719: return
Line 1719: (
Line 1719: ID = err
Line 1719: )
Line 1719: Unrecognized token: 63
Line 1719: -
Line 1719: ID = EFAULT
Line 1719: Unrecognized token: 58
Line 1719: INTCON = 0
Line 1719: ;
Line 1720: }
Line 1722: ID = static
Line 1722: int
Line 1722: ID = compat_nfs_clnt_trans
Line 1722: (
Line 1722: ID = struct
Line 1722: ID = nfsctl_arg
Line 1722: *
Line 1722: ID = karg
Line 1722: ,
Line 1722: ID = struct
Line 1722: ID = compat_nfsctl_arg
Line 1722: Unrecognized token: 95
Line 1722: Unrecognized token: 95
Line 1722: ID = user
Line 1722: *
Line 1722: ID = arg
Line 1722: )
Line 1723: {
Line 1724: int
Line 1724: ID = err
Line 1724: ;
Line 1726: ID = err
Line 1726: =
Line 1726: ID = access_ok
Line 1726: (
Line 1726: ID = VERIFY_READ
Line 1726: ,
Line 1726: Unrecognized token: 38
Line 1726: ID = arg
Line 1726: -
Line 1726: >
Line 1726: ID = ca32_client
Line 1726: ,
Line 1726: ID = sizeof
Line 1726: (
Line 1726: ID = arg
Line 1726: -
Line 1726: >
Line 1726: ID = ca32_client
Line 1726: )
Line 1726: )
Line 1726: ;
Line 1727: ID = err
Line 1727: Unrecognized token: 124
Line 1727: =
Line 1727: ID = get_user
Line 1727: (
Line 1727: ID = karg
Line 1727: -
Line 1727: >
Line 1727: ID = ca_version
Line 1727: ,
Line 1727: Unrecognized token: 38
Line 1727: ID = arg
Line 1727: -
Line 1727: >
Line 1727: ID = ca32_version
Line 1727: )
Line 1727: ;
Line 1728: ID = err
Line 1728: Unrecognized token: 124
Line 1728: =
Line 1728: Unrecognized token: 95
Line 1728: Unrecognized token: 95
Line 1728: ID = copy_from_user
Line 1728: (
Line 1728: Unrecognized token: 38
Line 1728: ID = karg
Line 1728: -
Line 1728: >
Line 1728: ID = ca_client
Line 1728: Unrecognized token: 46
Line 1728: ID = cl_ident
Line 1728: [
Line 1728: INTCON = 0
Line 1728: ]
Line 1728: ,
Line 1729: Unrecognized token: 38
Line 1729: ID = arg
Line 1729: -
Line 1729: >
Line 1729: ID = ca32_client
Line 1729: Unrecognized token: 46
Line 1729: ID = cl32_ident
Line 1729: [
Line 1729: INTCON = 0
Line 1729: ]
Line 1729: ,
Line 1730: ID = NFSCLNT_IDMAX
Line 1730: )
Line 1730: ;
Line 1731: ID = err
Line 1731: Unrecognized token: 124
Line 1731: =
Line 1731: Unrecognized token: 95
Line 1731: Unrecognized token: 95
Line 1731: ID = get_user
Line 1731: (
Line 1731: ID = karg
Line 1731: -
Line 1731: >
Line 1731: ID = ca_client
Line 1731: Unrecognized token: 46
Line 1731: ID = cl_naddr
Line 1731: ,
Line 1731: Unrecognized token: 38
Line 1731: ID = arg
Line 1731: -
Line 1731: >
Line 1731: ID = ca32_client
Line 1731: Unrecognized token: 46
Line 1731: ID = cl32_naddr
Line 1731: )
Line 1731: ;
Line 1732: ID = err
Line 1732: Unrecognized token: 124
Line 1732: =
Line 1732: Unrecognized token: 95
Line 1732: Unrecognized token: 95
Line 1732: ID = copy_from_user
Line 1732: (
Line 1732: Unrecognized token: 38
Line 1732: ID = karg
Line 1732: -
Line 1732: >
Line 1732: ID = ca_client
Line 1732: Unrecognized token: 46
Line 1732: ID = cl_addrlist
Line 1732: [
Line 1732: INTCON = 0
Line 1732: ]
Line 1732: ,
Line 1733: Unrecognized token: 38
Line 1733: ID = arg
Line 1733: -
Line 1733: >
Line 1733: ID = ca32_client
Line 1733: Unrecognized token: 46
Line 1733: ID = cl32_addrlist
Line 1733: [
Line 1733: INTCON = 0
Line 1733: ]
Line 1733: ,
Line 1734: (
Line 1734: ID = sizeof
Line 1734: (
Line 1734: ID = struct
Line 1734: ID = in_addr
Line 1734: )
Line 1734: *
Line 1734: ID = NFSCLNT_ADDRMAX
Line 1734: )
Line 1734: )
Line 1734: ;
Line 1735: ID = err
Line 1735: Unrecognized token: 124
Line 1735: =
Line 1735: Unrecognized token: 95
Line 1735: Unrecognized token: 95
Line 1735: ID = get_user
Line 1735: (
Line 1735: ID = karg
Line 1735: -
Line 1735: >
Line 1735: ID = ca_client
Line 1735: Unrecognized token: 46
Line 1735: ID = cl_fhkeytype
Line 1735: ,
Line 1736: Unrecognized token: 38
Line 1736: ID = arg
Line 1736: -
Line 1736: >
Line 1736: ID = ca32_client
Line 1736: Unrecognized token: 46
Line 1736: ID = cl32_fhkeytype
Line 1736: )
Line 1736: ;
Line 1737: ID = err
Line 1737: Unrecognized token: 124
Line 1737: =
Line 1737: Unrecognized token: 95
Line 1737: Unrecognized token: 95
Line 1737: ID = get_user
Line 1737: (
Line 1737: ID = karg
Line 1737: -
Line 1737: >
Line 1737: ID = ca_client
Line 1737: Unrecognized token: 46
Line 1737: ID = cl_fhkeylen
Line 1737: ,
Line 1738: Unrecognized token: 38
Line 1738: ID = arg
Line 1738: -
Line 1738: >
Line 1738: ID = ca32_client
Line 1738: Unrecognized token: 46
Line 1738: ID = cl32_fhkeylen
Line 1738: )
Line 1738: ;
Line 1739: ID = err
Line 1739: Unrecognized token: 124
Line 1739: =
Line 1739: Unrecognized token: 95
Line 1739: Unrecognized token: 95
Line 1739: ID = copy_from_user
Line 1739: (
Line 1739: Unrecognized token: 38
Line 1739: ID = karg
Line 1739: -
Line 1739: >
Line 1739: ID = ca_client
Line 1739: Unrecognized token: 46
Line 1739: ID = cl_fhkey
Line 1739: [
Line 1739: INTCON = 0
Line 1739: ]
Line 1739: ,
Line 1740: Unrecognized token: 38
Line 1740: ID = arg
Line 1740: -
Line 1740: >
Line 1740: ID = ca32_client
Line 1740: Unrecognized token: 46
Line 1740: ID = cl32_fhkey
Line 1740: [
Line 1740: INTCON = 0
Line 1740: ]
Line 1740: ,
Line 1741: ID = NFSCLNT_KEYMAX
Line 1741: )
Line 1741: ;
Line 1743: return
Line 1743: (
Line 1743: ID = err
Line 1743: )
Line 1743: Unrecognized token: 63
Line 1743: -
Line 1743: ID = EFAULT
Line 1743: Unrecognized token: 58
Line 1743: INTCON = 0
Line 1743: ;
Line 1744: }
Line 1746: ID = static
Line 1746: int
Line 1746: ID = compat_nfs_exp_trans
Line 1746: (
Line 1746: ID = struct
Line 1746: ID = nfsctl_arg
Line 1746: *
Line 1746: ID = karg
Line 1746: ,
Line 1746: ID = struct
Line 1746: ID = compat_nfsctl_arg
Line 1746: Unrecognized token: 95
Line 1746: Unrecognized token: 95
Line 1746: ID = user
Line 1746: *
Line 1746: ID = arg
Line 1746: )
Line 1747: {
Line 1748: int
Line 1748: ID = err
Line 1748: ;
Line 1750: ID = err
Line 1750: =
Line 1750: ID = access_ok
Line 1750: (
Line 1750: ID = VERIFY_READ
Line 1750: ,
Line 1750: Unrecognized token: 38
Line 1750: ID = arg
Line 1750: -
Line 1750: >
Line 1750: ID = ca32_export
Line 1750: ,
Line 1750: ID = sizeof
Line 1750: (
Line 1750: ID = arg
Line 1750: -
Line 1750: >
Line 1750: ID = ca32_export
Line 1750: )
Line 1750: )
Line 1750: ;
Line 1751: ID = err
Line 1751: Unrecognized token: 124
Line 1751: =
Line 1751: ID = get_user
Line 1751: (
Line 1751: ID = karg
Line 1751: -
Line 1751: >
Line 1751: ID = ca_version
Line 1751: ,
Line 1751: Unrecognized token: 38
Line 1751: ID = arg
Line 1751: -
Line 1751: >
Line 1751: ID = ca32_version
Line 1751: )
Line 1751: ;
Line 1752: ID = err
Line 1752: Unrecognized token: 124
Line 1752: =
Line 1752: Unrecognized token: 95
Line 1752: Unrecognized token: 95
Line 1752: ID = copy_from_user
Line 1752: (
Line 1752: Unrecognized token: 38
Line 1752: ID = karg
Line 1752: -
Line 1752: >
Line 1752: ID = ca_export
Line 1752: Unrecognized token: 46
Line 1752: ID = ex_client
Line 1752: [
Line 1752: INTCON = 0
Line 1752: ]
Line 1752: ,
Line 1753: Unrecognized token: 38
Line 1753: ID = arg
Line 1753: -
Line 1753: >
Line 1753: ID = ca32_export
Line 1753: Unrecognized token: 46
Line 1753: ID = ex32_client
Line 1753: [
Line 1753: INTCON = 0
Line 1753: ]
Line 1753: ,
Line 1754: ID = NFSCLNT_IDMAX
Line 1754: )
Line 1754: ;
Line 1755: ID = err
Line 1755: Unrecognized token: 124
Line 1755: =
Line 1755: Unrecognized token: 95
Line 1755: Unrecognized token: 95
Line 1755: ID = copy_from_user
Line 1755: (
Line 1755: Unrecognized token: 38
Line 1755: ID = karg
Line 1755: -
Line 1755: >
Line 1755: ID = ca_export
Line 1755: Unrecognized token: 46
Line 1755: ID = ex_path
Line 1755: [
Line 1755: INTCON = 0
Line 1755: ]
Line 1755: ,
Line 1756: Unrecognized token: 38
Line 1756: ID = arg
Line 1756: -
Line 1756: >
Line 1756: ID = ca32_export
Line 1756: Unrecognized token: 46
Line 1756: ID = ex32_path
Line 1756: [
Line 1756: INTCON = 0
Line 1756: ]
Line 1756: ,
Line 1757: ID = NFS_MAXPATHLEN
Line 1757: )
Line 1757: ;
Line 1758: ID = err
Line 1758: Unrecognized token: 124
Line 1758: =
Line 1758: Unrecognized token: 95
Line 1758: Unrecognized token: 95
Line 1758: ID = get_user
Line 1758: (
Line 1758: ID = karg
Line 1758: -
Line 1758: >
Line 1758: ID = ca_export
Line 1758: Unrecognized token: 46
Line 1758: ID = ex_dev
Line 1758: ,
Line 1759: Unrecognized token: 38
Line 1759: ID = arg
Line 1759: -
Line 1759: >
Line 1759: ID = ca32_export
Line 1759: Unrecognized token: 46
Line 1759: ID = ex32_dev
Line 1759: )
Line 1759: ;
Line 1760: ID = err
Line 1760: Unrecognized token: 124
Line 1760: =
Line 1760: Unrecognized token: 95
Line 1760: Unrecognized token: 95
Line 1760: ID = get_user
Line 1760: (
Line 1760: ID = karg
Line 1760: -
Line 1760: >
Line 1760: ID = ca_export
Line 1760: Unrecognized token: 46
Line 1760: ID = ex_ino
Line 1760: ,
Line 1761: Unrecognized token: 38
Line 1761: ID = arg
Line 1761: -
Line 1761: >
Line 1761: ID = ca32_export
Line 1761: Unrecognized token: 46
Line 1761: ID = ex32_ino
Line 1761: )
Line 1761: ;
Line 1762: ID = err
Line 1762: Unrecognized token: 124
Line 1762: =
Line 1762: Unrecognized token: 95
Line 1762: Unrecognized token: 95
Line 1762: ID = get_user
Line 1762: (
Line 1762: ID = karg
Line 1762: -
Line 1762: >
Line 1762: ID = ca_export
Line 1762: Unrecognized token: 46
Line 1762: ID = ex_flags
Line 1762: ,
Line 1763: Unrecognized token: 38
Line 1763: ID = arg
Line 1763: -
Line 1763: >
Line 1763: ID = ca32_export
Line 1763: Unrecognized token: 46
Line 1763: ID = ex32_flags
Line 1763: )
Line 1763: ;
Line 1764: ID = err
Line 1764: Unrecognized token: 124
Line 1764: =
Line 1764: Unrecognized token: 95
Line 1764: Unrecognized token: 95
Line 1764: ID = get_user
Line 1764: (
Line 1764: ID = karg
Line 1764: -
Line 1764: >
Line 1764: ID = ca_export
Line 1764: Unrecognized token: 46
Line 1764: ID = ex_anon_uid
Line 1764: ,
Line 1765: Unrecognized token: 38
Line 1765: ID = arg
Line 1765: -
Line 1765: >
Line 1765: ID = ca32_export
Line 1765: Unrecognized token: 46
Line 1765: ID = ex32_anon_uid
Line 1765: )
Line 1765: ;
Line 1766: ID = err
Line 1766: Unrecognized token: 124
Line 1766: =
Line 1766: Unrecognized token: 95
Line 1766: Unrecognized token: 95
Line 1766: ID = get_user
Line 1766: (
Line 1766: ID = karg
Line 1766: -
Line 1766: >
Line 1766: ID = ca_export
Line 1766: Unrecognized token: 46
Line 1766: ID = ex_anon_gid
Line 1766: ,
Line 1767: Unrecognized token: 38
Line 1767: ID = arg
Line 1767: -
Line 1767: >
Line 1767: ID = ca32_export
Line 1767: Unrecognized token: 46
Line 1767: ID = ex32_anon_gid
Line 1767: )
Line 1767: ;
Line 1768: ID = SET_UID
Line 1768: (
Line 1768: ID = karg
Line 1768: -
Line 1768: >
Line 1768: ID = ca_export
Line 1768: Unrecognized token: 46
Line 1768: ID = ex_anon_uid
Line 1768: ,
Line 1768: ID = karg
Line 1768: -
Line 1768: >
Line 1768: ID = ca_export
Line 1768: Unrecognized token: 46
Line 1768: ID = ex_anon_uid
Line 1768: )
Line 1768: ;
Line 1769: ID = SET_GID
Line 1769: (
Line 1769: ID = karg
Line 1769: -
Line 1769: >
Line 1769: ID = ca_export
Line 1769: Unrecognized token: 46
Line 1769: ID = ex_anon_gid
Line 1769: ,
Line 1769: ID = karg
Line 1769: -
Line 1769: >
Line 1769: ID = ca_export
Line 1769: Unrecognized token: 46
Line 1769: ID = ex_anon_gid
Line 1769: )
Line 1769: ;
Line 1771: return
Line 1771: (
Line 1771: ID = err
Line 1771: )
Line 1771: Unrecognized token: 63
Line 1771: -
Line 1771: ID = EFAULT
Line 1771: Unrecognized token: 58
Line 1771: INTCON = 0
Line 1771: ;
Line 1772: }
Line 1774: ID = static
Line 1774: int
Line 1774: ID = compat_nfs_getfd_trans
Line 1774: (
Line 1774: ID = struct
Line 1774: ID = nfsctl_arg
Line 1774: *
Line 1774: ID = karg
Line 1774: ,
Line 1774: ID = struct
Line 1774: ID = compat_nfsctl_arg
Line 1774: Unrecognized token: 95
Line 1774: Unrecognized token: 95
Line 1774: ID = user
Line 1774: *
Line 1774: ID = arg
Line 1774: )
Line 1775: {
Line 1776: int
Line 1776: ID = err
Line 1776: ;
Line 1778: ID = err
Line 1778: =
Line 1778: ID = access_ok
Line 1778: (
Line 1778: ID = VERIFY_READ
Line 1778: ,
Line 1778: Unrecognized token: 38
Line 1778: ID = arg
Line 1778: -
Line 1778: >
Line 1778: ID = ca32_getfd
Line 1778: ,
Line 1778: ID = sizeof
Line 1778: (
Line 1778: ID = arg
Line 1778: -
Line 1778: >
Line 1778: ID = ca32_getfd
Line 1778: )
Line 1778: )
Line 1778: ;
Line 1779: ID = err
Line 1779: Unrecognized token: 124
Line 1779: =
Line 1779: ID = get_user
Line 1779: (
Line 1779: ID = karg
Line 1779: -
Line 1779: >
Line 1779: ID = ca_version
Line 1779: ,
Line 1779: Unrecognized token: 38
Line 1779: ID = arg
Line 1779: -
Line 1779: >
Line 1779: ID = ca32_version
Line 1779: )
Line 1779: ;
Line 1780: ID = err
Line 1780: Unrecognized token: 124
Line 1780: =
Line 1780: Unrecognized token: 95
Line 1780: Unrecognized token: 95
Line 1780: ID = copy_from_user
Line 1780: (
Line 1780: Unrecognized token: 38
Line 1780: ID = karg
Line 1780: -
Line 1780: >
Line 1780: ID = ca_getfd
Line 1780: Unrecognized token: 46
Line 1780: ID = gd_addr
Line 1780: ,
Line 1781: Unrecognized token: 38
Line 1781: ID = arg
Line 1781: -
Line 1781: >
Line 1781: ID = ca32_getfd
Line 1781: Unrecognized token: 46
Line 1781: ID = gd32_addr
Line 1781: ,
Line 1782: (
Line 1782: ID = sizeof
Line 1782: (
Line 1782: ID = struct
Line 1782: ID = sockaddr
Line 1782: )
Line 1782: )
Line 1782: )
Line 1782: ;
Line 1783: ID = err
Line 1783: Unrecognized token: 124
Line 1783: =
Line 1783: Unrecognized token: 95
Line 1783: Unrecognized token: 95
Line 1783: ID = copy_from_user
Line 1783: (
Line 1783: Unrecognized token: 38
Line 1783: ID = karg
Line 1783: -
Line 1783: >
Line 1783: ID = ca_getfd
Line 1783: Unrecognized token: 46
Line 1783: ID = gd_path
Line 1783: ,
Line 1784: Unrecognized token: 38
Line 1784: ID = arg
Line 1784: -
Line 1784: >
Line 1784: ID = ca32_getfd
Line 1784: Unrecognized token: 46
Line 1784: ID = gd32_path
Line 1784: ,
Line 1785: (
Line 1785: ID = NFS_MAXPATHLEN
Line 1785: +
Line 1785: INTCON = 1
Line 1785: )
Line 1785: )
Line 1785: ;
Line 1786: ID = err
Line 1786: Unrecognized token: 124
Line 1786: =
Line 1786: Unrecognized token: 95
Line 1786: Unrecognized token: 95
Line 1786: ID = get_user
Line 1786: (
Line 1786: ID = karg
Line 1786: -
Line 1786: >
Line 1786: ID = ca_getfd
Line 1786: Unrecognized token: 46
Line 1786: ID = gd_version
Line 1786: ,
Line 1787: Unrecognized token: 38
Line 1787: ID = arg
Line 1787: -
Line 1787: >
Line 1787: ID = ca32_getfd
Line 1787: Unrecognized token: 46
Line 1787: ID = gd32_version
Line 1787: )
Line 1787: ;
Line 1789: return
Line 1789: (
Line 1789: ID = err
Line 1789: )
Line 1789: Unrecognized token: 63
Line 1789: -
Line 1789: ID = EFAULT
Line 1789: Unrecognized token: 58
Line 1789: INTCON = 0
Line 1789: ;
Line 1790: }
Line 1792: ID = static
Line 1792: int
Line 1792: ID = compat_nfs_getfs_trans
Line 1792: (
Line 1792: ID = struct
Line 1792: ID = nfsctl_arg
Line 1792: *
Line 1792: ID = karg
Line 1792: ,
Line 1792: ID = struct
Line 1792: ID = compat_nfsctl_arg
Line 1792: Unrecognized token: 95
Line 1792: Unrecognized token: 95
Line 1792: ID = user
Line 1792: *
Line 1792: ID = arg
Line 1792: )
Line 1793: {
Line 1794: int
Line 1794: ID = err
Line 1794: ;
Line 1796: ID = err
Line 1796: =
Line 1796: ID = access_ok
Line 1796: (
Line 1796: ID = VERIFY_READ
Line 1796: ,
Line 1796: Unrecognized token: 38
Line 1796: ID = arg
Line 1796: -
Line 1796: >
Line 1796: ID = ca32_getfs
Line 1796: ,
Line 1796: ID = sizeof
Line 1796: (
Line 1796: ID = arg
Line 1796: -
Line 1796: >
Line 1796: ID = ca32_getfs
Line 1796: )
Line 1796: )
Line 1796: ;
Line 1797: ID = err
Line 1797: Unrecognized token: 124
Line 1797: =
Line 1797: ID = get_user
Line 1797: (
Line 1797: ID = karg
Line 1797: -
Line 1797: >
Line 1797: ID = ca_version
Line 1797: ,
Line 1797: Unrecognized token: 38
Line 1797: ID = arg
Line 1797: -
Line 1797: >
Line 1797: ID = ca32_version
Line 1797: )
Line 1797: ;
Line 1798: ID = err
Line 1798: Unrecognized token: 124
Line 1798: =
Line 1798: Unrecognized token: 95
Line 1798: Unrecognized token: 95
Line 1798: ID = copy_from_user
Line 1798: (
Line 1798: Unrecognized token: 38
Line 1798: ID = karg
Line 1798: -
Line 1798: >
Line 1798: ID = ca_getfs
Line 1798: Unrecognized token: 46
Line 1798: ID = gd_addr
Line 1798: ,
Line 1799: Unrecognized token: 38
Line 1799: ID = arg
Line 1799: -
Line 1799: >
Line 1799: ID = ca32_getfs
Line 1799: Unrecognized token: 46
Line 1799: ID = gd32_addr
Line 1799: ,
Line 1800: (
Line 1800: ID = sizeof
Line 1800: (
Line 1800: ID = struct
Line 1800: ID = sockaddr
Line 1800: )
Line 1800: )
Line 1800: )
Line 1800: ;
Line 1801: ID = err
Line 1801: Unrecognized token: 124
Line 1801: =
Line 1801: Unrecognized token: 95
Line 1801: Unrecognized token: 95
Line 1801: ID = copy_from_user
Line 1801: (
Line 1801: Unrecognized token: 38
Line 1801: ID = karg
Line 1801: -
Line 1801: >
Line 1801: ID = ca_getfs
Line 1801: Unrecognized token: 46
Line 1801: ID = gd_path
Line 1801: ,
Line 1802: Unrecognized token: 38
Line 1802: ID = arg
Line 1802: -
Line 1802: >
Line 1802: ID = ca32_getfs
Line 1802: Unrecognized token: 46
Line 1802: ID = gd32_path
Line 1802: ,
Line 1803: (
Line 1803: ID = NFS_MAXPATHLEN
Line 1803: +
Line 1803: INTCON = 1
Line 1803: )
Line 1803: )
Line 1803: ;
Line 1804: ID = err
Line 1804: Unrecognized token: 124
Line 1804: =
Line 1804: Unrecognized token: 95
Line 1804: Unrecognized token: 95
Line 1804: ID = get_user
Line 1804: (
Line 1804: ID = karg
Line 1804: -
Line 1804: >
Line 1804: ID = ca_getfs
Line 1804: Unrecognized token: 46
Line 1804: ID = gd_maxlen
Line 1804: ,
Line 1805: Unrecognized token: 38
Line 1805: ID = arg
Line 1805: -
Line 1805: >
Line 1805: ID = ca32_getfs
Line 1805: Unrecognized token: 46
Line 1805: ID = gd32_maxlen
Line 1805: )
Line 1805: ;
Line 1807: return
Line 1807: (
Line 1807: ID = err
Line 1807: )
Line 1807: Unrecognized token: 63
Line 1807: -
Line 1807: ID = EFAULT
Line 1807: Unrecognized token: 58
Line 1807: INTCON = 0
Line 1807: ;
Line 1808: }
Line 1813: ID = static
Line 1813: int
Line 1813: ID = compat_nfs_getfh_res_trans
Line 1813: (
Line 1813: ID = union
Line 1813: ID = nfsctl_res
Line 1813: *
Line 1813: ID = kres
Line 1813: ,
Line 1813: ID = union
Line 1813: ID = compat_nfsctl_res
Line 1813: Unrecognized token: 95
Line 1813: Unrecognized token: 95
Line 1813: ID = user
Line 1813: *
Line 1813: ID = res
Line 1813: )
Line 1814: {
Line 1815: int
Line 1815: ID = err
Line 1815: ;
Line 1817: ID = err
Line 1817: =
Line 1817: ID = copy_to_user
Line 1817: (
Line 1817: ID = res
Line 1817: ,
Line 1817: ID = kres
Line 1817: ,
Line 1817: ID = sizeof
Line 1817: (
Line 1817: *
Line 1817: ID = res
Line 1817: )
Line 1817: )
Line 1817: ;
Line 1819: return
Line 1819: (
Line 1819: ID = err
Line 1819: )
Line 1819: Unrecognized token: 63
Line 1819: -
Line 1819: ID = EFAULT
Line 1819: Unrecognized token: 58
Line 1819: INTCON = 0
Line 1819: ;
Line 1820: }
Line 1822: ID = asmlinkage
Line 1822: ID = long
Line 1822: ID = compat_sys_nfsservctl
Line 1822: (
Line 1822: int
Line 1822: ID = cmd
Line 1822: ,
Line 1822: ID = struct
Line 1822: ID = compat_nfsctl_arg
Line 1822: Unrecognized token: 95
Line 1822: Unrecognized token: 95
Line 1822: ID = user
Line 1822: *
Line 1822: ID = arg
Line 1822: ,
Line 1823: ID = union
Line 1823: ID = compat_nfsctl_res
Line 1823: Unrecognized token: 95
Line 1823: Unrecognized token: 95
Line 1823: ID = user
Line 1823: *
Line 1823: ID = res
Line 1823: )
Line 1824: {
Line 1825: ID = struct
Line 1825: ID = nfsctl_arg
Line 1825: *
Line 1825: ID = karg
Line 1825: ;
Line 1826: ID = union
Line 1826: ID = nfsctl_res
Line 1826: *
Line 1826: ID = kres
Line 1826: ;
Line 1827: ID = mm_segment_t
Line 1827: ID = oldfs
Line 1827: ;
Line 1828: int
Line 1828: ID = err
Line 1828: ;
Line 1830: ID = karg
Line 1830: =
Line 1830: ID = kmalloc
Line 1830: (
Line 1830: ID = sizeof
Line 1830: (
Line 1830: *
Line 1830: ID = karg
Line 1830: )
Line 1830: ,
Line 1830: ID = GFP_USER
Line 1830: )
Line 1830: ;
Line 1831: ID = kres
Line 1831: =
Line 1831: ID = kmalloc
Line 1831: (
Line 1831: ID = sizeof
Line 1831: (
Line 1831: *
Line 1831: ID = kres
Line 1831: )
Line 1831: ,
Line 1831: ID = GFP_USER
Line 1831: )
Line 1831: ;
Line 1832: if
Line 1832: (
Line 1832: !
Line 1832: ID = karg
Line 1832: ||
Line 1832: !
Line 1832: ID = kres
Line 1832: )
Line 1832: {
Line 1833: ID = err
Line 1833: =
Line 1833: -
Line 1833: ID = ENOMEM
Line 1833: ;
Line 1834: ID = goto
Line 1834: ID = done
Line 1834: ;
Line 1835: }
Line 1837: ID = switch
Line 1837: (
Line 1837: ID = cmd
Line 1837: )
Line 1837: {
Line 1838: ID = case
Line 1838: ID = NFSCTL_SVC
Line 1838: Unrecognized token: 58
Line 1839: ID = err
Line 1839: =
Line 1839: ID = compat_nfs_svc_trans
Line 1839: (
Line 1839: ID = karg
Line 1839: ,
Line 1839: ID = arg
Line 1839: )
Line 1839: ;
Line 1840: ID = break
Line 1840: ;
Line 1842: ID = case
Line 1842: ID = NFSCTL_ADDCLIENT
Line 1842: Unrecognized token: 58
Line 1843: ID = err
Line 1843: =
Line 1843: ID = compat_nfs_clnt_trans
Line 1843: (
Line 1843: ID = karg
Line 1843: ,
Line 1843: ID = arg
Line 1843: )
Line 1843: ;
Line 1844: ID = break
Line 1844: ;
Line 1846: ID = case
Line 1846: ID = NFSCTL_DELCLIENT
Line 1846: Unrecognized token: 58
Line 1847: ID = err
Line 1847: =
Line 1847: ID = compat_nfs_clnt_trans
Line 1847: (
Line 1847: ID = karg
Line 1847: ,
Line 1847: ID = arg
Line 1847: )
Line 1847: ;
Line 1848: ID = break
Line 1848: ;
Line 1850: ID = case
Line 1850: ID = NFSCTL_EXPORT
Line 1850: Unrecognized token: 58
Line 1851: ID = case
Line 1851: ID = NFSCTL_UNEXPORT
Line 1851: Unrecognized token: 58
Line 1852: ID = err
Line 1852: =
Line 1852: ID = compat_nfs_exp_trans
Line 1852: (
Line 1852: ID = karg
Line 1852: ,
Line 1852: ID = arg
Line 1852: )
Line 1852: ;
Line 1853: ID = break
Line 1853: ;
Line 1855: ID = case
Line 1855: ID = NFSCTL_GETFD
Line 1855: Unrecognized token: 58
Line 1856: ID = err
Line 1856: =
Line 1856: ID = compat_nfs_getfd_trans
Line 1856: (
Line 1856: ID = karg
Line 1856: ,
Line 1856: ID = arg
Line 1856: )
Line 1856: ;
Line 1857: ID = break
Line 1857: ;
Line 1859: ID = case
Line 1859: ID = NFSCTL_GETFS
Line 1859: Unrecognized token: 58
Line 1860: ID = err
Line 1860: =
Line 1860: ID = compat_nfs_getfs_trans
Line 1860: (
Line 1860: ID = karg
Line 1860: ,
Line 1860: ID = arg
Line 1860: )
Line 1860: ;
Line 1861: ID = break
Line 1861: ;
Line 1863: ID = default
Line 1863: Unrecognized token: 58
Line 1864: ID = err
Line 1864: =
Line 1864: -
Line 1864: ID = EINVAL
Line 1864: ;
Line 1865: ID = goto
Line 1865: ID = done
Line 1865: ;
Line 1866: }
Line 1868: ID = oldfs
Line 1868: =
Line 1868: ID = get_fs
Line 1868: (
Line 1868: )
Line 1868: ;
Line 1869: ID = set_fs
Line 1869: (
Line 1869: ID = KERNEL_DS
Line 1869: )
Line 1869: ;
Line 1871: ID = err
Line 1871: =
Line 1871: ID = sys_nfsservctl
Line 1871: (
Line 1871: ID = cmd
Line 1871: ,
Line 1871: (
Line 1871: void
Line 1871: Unrecognized token: 95
Line 1871: Unrecognized token: 95
Line 1871: ID = user
Line 1871: *
Line 1871: )
Line 1871: ID = karg
Line 1871: ,
Line 1871: (
Line 1871: void
Line 1871: Unrecognized token: 95
Line 1871: Unrecognized token: 95
Line 1871: ID = user
Line 1871: *
Line 1871: )
Line 1871: ID = kres
Line 1871: )
Line 1871: ;
Line 1872: ID = set_fs
Line 1872: (
Line 1872: ID = oldfs
Line 1872: )
Line 1872: ;
Line 1874: if
Line 1874: (
Line 1874: ID = err
Line 1874: )
Line 1875: ID = goto
Line 1875: ID = done
Line 1875: ;
Line 1877: if
Line 1877: (
Line 1877: (
Line 1877: ID = cmd
Line 1877: ==
Line 1877: ID = NFSCTL_GETFD
Line 1877: )
Line 1877: ||
Line 1878: (
Line 1878: ID = cmd
Line 1878: ==
Line 1878: ID = NFSCTL_GETFS
Line 1878: )
Line 1878: )
Line 1879: ID = err
Line 1879: =
Line 1879: ID = compat_nfs_getfh_res_trans
Line 1879: (
Line 1879: ID = kres
Line 1879: ,
Line 1879: ID = res
Line 1879: )
Line 1879: ;
Line 1881: ID = done
Line 1881: Unrecognized token: 58
Line 1882: ID = kfree
Line 1882: (
Line 1882: ID = karg
Line 1882: )
Line 1882: ;
Line 1883: ID = kfree
Line 1883: (
Line 1883: ID = kres
Line 1883: )
Line 1883: ;
Line 1884: return
Line 1884: ID = err
Line 1884: ;
Line 1885: }
Line 1886: Unrecognized token: 35
Line 1886: else
Line 1887: ID = long
Line 1887: ID = asmlinkage
Line 1887: ID = compat_sys_nfsservctl
Line 1887: (
Line 1887: int
Line 1887: ID = cmd
Line 1887: ,
Line 1887: void
Line 1887: *
Line 1887: ID = notused
Line 1887: ,
Line 1887: void
Line 1887: *
Line 1887: ID = notused2
Line 1887: )
Line 1888: {
Line 1889: return
Line 1889: ID = sys_ni_syscall
Line 1889: (
Line 1889: )
Line 1889: ;
Line 1890: }
Line 1891: Unrecognized token: 35
Line 1891: ID = endif
Line 1892: -EOF-
