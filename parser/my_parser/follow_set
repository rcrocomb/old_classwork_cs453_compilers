program: EOF
program_element: EXTERN INT CHAR VOID ID EOF
program_prime: EOF
func_or_var_thing: EXTERN INT CHAR VOID ID EOF
func_decl_or_body: EXTERN INT CHAR VOID ID EOF
func_type: ID
func_name_and_args: COMMA SEMICOLON LBRACE
func_decl_tail: SEMICOLON
func_body: RBRACE
type: ID
stmt_sequence: RBRACE
stmt: ELSE IF WHILE FOR ID RETURN SEMICOLON LBRACE RBRACE
buncho_var_decls: IF WHILE FOR LBRACE RETURN ID SEMICOLON RBRACE
buncho_var_decls_prime: IF WHILE FOR LBRACE RETURN ID SEMICOLON RBRACE
var_decl: COMMA SEMICOLON
var_decl_tail: SEMICOLON
array_decl_maybe: COMMA SEMICOLON
param_types: RPAREN
param_types_tail: RPAREN
type_stmt: COMMA RPAREN
assg: SEMICOLON RPAREN
assg_prime: SEMICOLON RPAREN
assg_or_id: SEMICOLON
assg_or_id_prime: SEMICOLON
id_paren_expr: RPAREN
for_A: NEG MINUS INTCON CHARCON STRINGCON LPAREN ID SEMICOLON
for_B: ID COMMA RPAREN
for_C: RPAREN
expr_maybe: COMMA SEMICOLON RPAREN
expr_tail: RPAREN
array_maybe: COMMA RPAREN
expr: RPAREN SEMICOLON RBRACKET COMMA
expr_prime: RPAREN SEMICOLON RBRACKET COMMA
and_expr: RPAREN SEMICOLON RBRACKET COMMA OR
and_expr_prime: RPAREN SEMICOLON RBRACKET COMMA OR
eq_expr: RPAREN SEMICOLON RBRACKET COMMA OR AND
eq_expr_prime: RPAREN SEMICOLON RBRACKET COMMA OR AND
cmp_expr: RPAREN SEMICOLON RBRACKET COMMA OR AND NEG MINUS EQ NE
cmp_expr_prime: RPAREN SEMICOLON RBRACKET COMMA OR AND NEG MINUS EQ NE
add_expr: RPAREN SEMICOLON RBRACKET COMMA OR AND NEG MINUS EQ NE LT LE GT GE PLUS
add_expr_prime: RPAREN SEMICOLON RBRACKET COMMA OR AND NEG MINUS EQ NE LT LE GT GE PLUS
mult_expr: RPAREN SEMICOLON RBRACKET COMMA OR AND NEG MINUS LT LE GT GE PLUS
mult_expr_prime: RPAREN SEMICOLON RBRACKET COMMA OR AND NEG MINUS EQ NE LT LE GT GE PLUS
unary_expr: RPAREN SEMICOLON RBRACKET COMMA OR AND NEG MINUS EQ NE LT LE GT GE PLUS MULT DIV
id_expr: RPAREN SEMICOLON RBRACKET COMMA OR AND NEG MINUS EQ NE LT LE GT GE PLUS MULT DIV
id_expr_prime: RPAREN SEMICOLON RBRACKET COMMA OR AND NEG MINUS EQ NE LT LE GT GE PLUS MULT DIV

